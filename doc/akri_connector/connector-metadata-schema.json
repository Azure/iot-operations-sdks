{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "aioConnectorMetadataSchemaVersion": "1.0",
  "properties": {
    "aioConnectorMetadataSchemaVersion": {
      "type": "string",
      "description": "The version of AIO connector metadata schema that this connector metadata file adheres to.",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)",
      "default": "1.0"
    },
    "name": {
      "type": "string",
      "description": "The name of the connector."
    },
    "description": {
      "type": "string",
      "description": "A brief (human-readable) description of the connector (preferably in English). This is seen when browsing connectors in the portal."
    },
    "version": {
      "type": "string",
      "description": "The version of this connector. This must use semantic versioning such as '1.2.3'",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)",
      "default": "1.0.0"
    },
    "isPreview": {
      "type": "boolean",
      "description": "True if this connector is considered a preview version.",
      "default": "false"
    },
    "supportAcsaVolumes": {
      "type": "boolean",
      "description": "If this connector supports Azure Container Storage enabled by Azure Arc.",
      "default": "false"
    },
    "maintainer": {
      "type": "string",
      "description": "A name and/or email of the maintainer of this connector."
    },
    "vendor": {
      "type": "string",
      "description": "A name and/or email of the vendor that distributes this connector."
    },
    "imageConfigurationSettings": {
      "type": "object",
      "description": "The container image details for this connector image. Must provide either this or helmConfigurationSettings.",
      "properties": {
        "containerRegistryName": {
          "type": "string",
          "description": "The container registry that holds the image for the connector. For example: 'contoso-acr.io'"
        },
        "imageName": {
          "type": "string",
          "description": "The container image name for the connector. For example: 'myconnector'"
        },
        "tag": {
          "type": "string",
          "description": "The tag of the container image for this connector"
        },
        "digest": {
          "type": "string",
          "description": "The digest of the container image for this connector"
        }
      },
      "oneOf": [
        {
          "required": [
            "containerRegistryName",
            "imageName",
            "tag"
          ]
        },
        {
          "required": [
            "containerRegistryName",
            "imageName",
            "digest"
          ]
        }
      ]
    },
    "helmConfigurationSettings": {
      "type": "object",
      "description": "The helm chart details for this connector image. Must provide either this or imageConfigurationSettings.",
      "properties": {
        "containerRegistryName": {
          "type": "string",
          "description": "The container registry name that holds the helm chart for the connector. For example: 'contoso-acr.io'"
        },
        "helmChartName": {
          "type": "string",
          "description": "The helm chart name for the connector. For example: 'helm/MyConnector'"
        },
        "tag": {
          "type": "string",
          "description": "The tag of the helm chart for this connector"
        },
        "digest": {
          "type": "string",
          "description": "The digest of the helm chart for this connector"
        }
      },
      "oneOf": [
        {
          "required": [
            "containerRegistryName",
            "helmChartName",
            "tag"
          ]
        },
        {
          "required": [
            "containerRegistryName",
            "helmChartName",
            "digest"
          ]
        }
      ]
    },
    "secrets": {
      "type": "array",
      "description": "The array of secrets that are required for the connector application to work. The secret will be mounted onto all connector instances deployed for this connector application",
      "items": [
        {
          "type": "object",
          "description": "A single secret that will be mounted onto all connector instances.",
          "properties": {
            "secretAlias": {
              "type": "string",
              "description": "The application-defined alias for the secret"
            },
            "secretDescription": {
              "type": "string",
              "description": "The description for this secret alias"
            },
            "isOptional": {
              "type": "boolean",
              "description": "If the secret is optional or mandatory",
              "default": false
            }
          },
          "required": [
            "secretAlias"
          ]
        }
      ]
    }
  },
  "supportedArchitectures": {
    "type": "array",
    "description": "The CPU architectures that this connector image was built for. At least one must be specified.",
    "items": [
      {
        "type": "string",
        "description": "One of the CPU architectures this connector image was built for. For example: 'linux/amd64', 'linux/arm64', or 'windows/amd64'"
      }
    ],
    "minItems": 1,
    "uniqueItems": true
  },
  "sourceCode": {
    "type": "object",
    "description": "Details about the source code that compiled this connector",
    "properties": {
      "language": {
        "type": "string",
        "description": "The programming language used to write this connector"
      },
      "languageVersion": {
        "type": "string",
        "description": "The version of the programming language used to write this connector"
      },
      "sdks": {
        "type": "object",
        "description": "Details about the versions of the AIO SDKs used to write this connector (if they were used)",
        "properties": {
          "mqttPackageVersion": {
            "type": "string",
            "description": "The version of the Azure IoT Operations MQTT package"
          },
          "protocolPackageVersion": {
            "type": "string",
            "description": "The version of the Azure IoT Operations protocol package"
          },
          "servicesPackageVersion": {
            "type": "string",
            "description": "The version of the Azure IoT Operations services package"
          },
          "connectorPackageVersion": {
            "type": "string",
            "description": "The version of the Azure IoT Operations connector package"
          }
        }
      }
    },
    "required": [
      "language",
      "languageVersion"
    ]
  },
  "aioMetadata": {
    "type": "object",
    "description": "The AIO requirements to run this connector",
    "properties": {
      "aioMinVersion": {
        "type": "string",
        "description": "The minimal (inclusive) version that can run this connector."
      },
      "aioMaxVersion": {
        "type": "string",
        "description": "The maximal (inclusive) version that can run this connector."
      }
    }
  },
  "additionalConfigurationSchema": {
    "description": "The connector-level JSON schemas for the 'additional configuration' field. A JSON schema must be only if that field is used by this connector.",
    "$ref": "http://json-schema.org/draft-07/schema#"
  },
  "inboundEndpoints": {
    "type": "array",
    "description": "The array of inbound endpoints in a device that this connector will be deployed for.",
    "items": [
      {
        "type": "object",
        "properties": {
          "endpointType": {
            "type": "string",
            "description": "The type of this inbound endpoint including the version like 'Microsoft.Media:1.2.0'"
          },
          "asset": {
            "type": "object",
            "description": "The array of assets that reference this inbound endpoint",
            "properties": {
              "configurationSchemas": {
                "type": "object",
                "description": "The JSON schemas for the asset-level stringified JSON fields. A JSON schema must be provided for each field only if that field is used by this connector.",
                "properties": {
                  "datasetConfigurationSchema": {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                  },
                  "datasetDataPointConfigurationSchema": {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                  },
                  "eventConfigurationSchema": {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                  },
                  "eventDataPointConfigSchema": {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                  },
                  "streamConfigurationSchema": {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                  },
                  "managementGroupConfigurationSchema": {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                  },
                  "actionConfigurationSchema": {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                  }
                }
              },
              "supportedEventDestinations": {
                "type": "array",
                "description": "The array of destinations that this asset's events supports.",
                "items": {
                  "type": "string",
                  "enum": ["Mqtt", "BrokerStateStore", "Storage"]
                }
              },
              "defaultEventDestinations": {
                "type": "array",
                "description": "The array of destinations that this asset's events will go to by default unless event-specific destinations are specified.",
                "items": {
                  "type": "string",
                  "enum": ["Mqtt", "BrokerStateStore", "Storage"]
                }
              },
              "supportedDatasetDestinations": {
                "type": "array",
                "description": "The array of destinations that this asset's datasets supports.",
                "items": {
                  "type": "string",
                  "enum": ["Mqtt", "BrokerStateStore", "Storage"]
                }
              },
              "defaultDatasetDestinations": {
                "type": "array",
                "description": "The array of destinations that this asset's datasets will go to by default unless dataset-specific destinations are specified.",
                "items": {
                  "type": "string",
                  "enum": ["Mqtt", "BrokerStateStore", "Storage"]
                }
              },
              "supportedStreamDestinations": {
                "type": "array",
                "description": "The array of destinations that this asset's streams supports.",
                "items": {
                  "type": "string",
                  "enum": ["Mqtt", "BrokerStateStore", "Storage"]
                }
              },
              "defaultStreamDestinations": {
                "type": "array",
                "description": "The array of destinations that this asset's streams will go to by default unless stream-specific destinations are specified.",
                "items": {
                  "type": "string",
                  "enum": ["Mqtt", "BrokerStateStore", "Storage"]
                }
              }
            }
          },
          "version": {
            "type": "string",
            "description": "The version of the protocol of this inbound endpoint."
          },
          "isEndpointTlsEnabled": {
            "type": "boolean",
            "description": "True if this endpoint has TLS enabled and all connections to this endpoint must use TLS."
          }
        },
        "required": [
          "endpointType",
          "version",
          "isEndpointTlsEnabled"
        ]
      }
    ]
  },
  "required": [
    "name",
    "version",
    "supportedArchitectures",
    "inboundEndpoints"
  ],
  "oneOf": [
    {
      "required": [
        "imageConfigurationSettings"
      ]
    },
    {
      "required": [
        "helmConfigurationSettings"
      ]
    }
  ]
}