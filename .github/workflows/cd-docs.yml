name: CD Docs

on:
  workflow_dispatch:
  push:
    branches:
      - doc-workflow
#    tags:
#      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Find release tags
        id: tags
        shell: bash
        run: |
          for tag in $(gh api repos/Azure/iot-operations-sdks/releases -q '.[].tag_name'); do
              if [[ $tag =~ (.*)/(.*)/(.*) ]]; then
                lang=${BASH_REMATCH[1]}
                package=${BASH_REMATCH[2]}
                version=${BASH_REMATCH[3]}

                if [[ $lang == "rust" && -z ${rust_tag} ]]; then
                  rust_tag=$tag
                elif [[ $lang == "go" && -z ${go_tag} ]]; then
                  go_tag=$tag
                elif [[ $lang == "dotnet" && -z ${dotnet_tag} ]]; then
                  dotnet_tag=$tag
                fi
              else
                echo "Unknown tag: $tag"
              fi
          done

          echo "rust_tag=$rust_tag" >> $GITHUB_OUTPUT
          echo "go_tag=$go_tag" >> $GITHUB_OUTPUT
          echo "dotnet_tag=$dotnet_tag" >> $GITHUB_OUTPUT

      - name: Checkout Rust
        uses: actions/checkout@v4
        with:
          ref: ${{steps.tags.outputs.rust_tag}}
          path: rust

      - name: Generate index.html
        run: |
          mkdir _site
          echo "<html><body><h1>Documentation</h1><ul>" > _site/index.html
          echo "<li><a href='rust/azure_iot_operations_mqtt/index.html'>Rust</a></li>" >> _site/index.html
          echo "<li><a href='go/index.html'>Go</a></li>" >> _site/index.html
          echo "<li><a href='dotnet/index.html'>.NET</a></li>" >> _site/index.html
          echo "</ul></body></html>" >> _site/index.html

      - name: Build Rust docs
        run: |
          cargo doc --no-deps --manifest-path rust/rust/Cargo.toml
          cp -a rust/rust/target/doc _site/rust

#      - name: Build Go docs
#      - name: Build .NET docs

      - name: Upload to GitHub Pages
        id: upload
        uses: actions/upload-pages-artifact@v3

  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
      - name: Deploy artifact
        id: deployment
        uses: actions/deploy-pages@v4
 