name: Cross language
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 11 * * *" # Nightly at 4am PST

# only allow one run / branch at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  broker_port: 1883

jobs:
  cross-language:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        server:
          [dotnet, rust, go]
        client:
          [dotnet, rust, go]

    name: ${{ matrix.server }} server - ${{ matrix.client }} client

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Cluster
        run: |
          tools/deployment/initialize-cluster.sh
          tools/deployment/deploy-aio.sh nightly

      - name: Setup .NET
        if: matrix.server == 'dotnet' || matrix.client == 'dotnet'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.301

      - name: Setup GO
        if: matrix.server == 'go' || matrix.client == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.4

      - name: Build codegen
        run: dotnet build -c Release codegen/codegen.sln

      # - name: Install Codegen tool from dev feed
      #   run: (pushd /; dotnet tool install -g Azure.Iot.Operations.ProtocolCompiler --add-source https://pkgs.dev.azure.com/e4k-sdk/SdkLite/_packaging/sdklite-previews/nuget/v3/index.json --prerelease; popd)
      - name: CodeGen all Counter samples
        run: |
          codegen=$(realpath codegen/src/Azure.Iot.Operations.ProtocolCompiler/bin/Release/net8.0/Azure.Iot.Operations.ProtocolCompiler)
          (pushd dotnet/samples/TestEnvoys; $codegen --modelFile ../../../eng/test/schema-samples/counter.json --sdkPath ../../src/Azure.Iot.Operations.Protocol --lang=csharp; popd)
          (pushd go/samples/protocol/counter/envoy; $codegen --modelFile ../../../counter.json --lang go; popd)
          (pushd rust/sample_applications/counter/envoy; $codegen --modelFile ../../../../eng/test/schema-samples/counter.json --sdkPath ../../.. --lang=rust; popd)

      - name: Build dotnet
        if: matrix.server == 'dotnet' || matrix.client == 'dotnet'
        run: |
          cd dotnet
          dotnet build -c Release

      - name: Build go
        if: matrix.server == 'go' || matrix.client == 'go'
        run: |
          cd go
          go build -o server samples/protocol/counter/server/main.go
          go build -o client samples/protocol/counter/client/main.go

      - name: Build rust
        if: matrix.server == 'rust' || matrix.client == 'rust'
        run: |
          cd rust
          cargo build --release --config profile.release.panic=\'abort\'

      - name: Run Counter Server dotnet
        if: matrix.server == 'dotnet'
        run: dotnet/samples/CounterServer/bin/Release/net8.0/CounterServer --ConnectionStrings:Default="HostName=localhost;TcpPort=${{ env.broker_port }};UseTls=false;ClientId=${{ matrix.server }}" &

      - name: Run Counter Server go
        if: matrix.server == 'go'
        run: AIO_BROKER_HOSTNAME=localhost AIO_BROKER_TCP_PORT=${{ env.broker_port }} AIO_MQTT_USE_TLS=false AIO_MQTT_CLIENT_ID=${{ matrix.server }} go/server &

      - name: Run Counter Server rust
        if: matrix.server == 'rust'
        run: AIO_BROKER_HOSTNAME=localhost AIO_BROKER_TCP_PORT=${{ env.broker_port }} AIO_MQTT_USE_TLS=false AIO_MQTT_CLIENT_ID=${{ matrix.server }}  rust/target/release/counter_server &

      - name: Run Counter Client dotnet
        if: matrix.client == 'dotnet'
        run: dotnet/samples/CounterClient/bin/Release/net8.0/CounterClient --ConnectionStrings:Default="HostName=localhost;TcpPort=${{ env.broker_port }};UseTls=false" -e COUNTER_SERVER_ID=${{ matrix.server }}

      - name: Run Counter Client go
        if: matrix.client == 'go'
        run: AIO_BROKER_HOSTNAME=localhost AIO_BROKER_TCP_PORT=${{ env.broker_port }} AIO_MQTT_USE_TLS=false AIO_MQTT_CLIENT_ID=go COUNTER_SERVER_ID=${{ matrix.server }} go/client

      - name: Run Counter Client rust
        if: matrix.client == 'rust'
        run: AIO_BROKER_HOSTNAME=localhost AIO_BROKER_TCP_PORT=${{ env.broker_port }} AIO_MQTT_USE_TLS=false AIO_MQTT_CLIENT_ID=rust COUNTER_SERVER_ID=${{ matrix.server }} rust/target/release/counter_client
