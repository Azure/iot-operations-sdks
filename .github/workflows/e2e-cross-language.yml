name: CI-Cross language
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 11 * * *" # Nightly at 4am PST

# only allow one run / branch at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AIO_BROKER_HOSTNAME: localhost
  AIO_BROKER_TCP_PORT: 1883
  AIO_MQTT_USE_TLS: false

  DOTNET_SERVER: AIO_MQTT_CLIENT_ID=dotnet-server dotnet run -c Release --project dotnet/samples/CounterServer
  DOTNET_CLIENT: AIO_MQTT_CLIENT_ID=dotnet-client dotnet run -c Release --project dotnet/samples/CounterClient
  GO_SERVER:     AIO_MQTT_CLIENT_ID=go-server;     go/server
  GO_CLIENT:     AIO_MQTT_CLIENT_ID=go-client;     go/client
  RUST_SERVER:   AIO_MQTT_CLIENT_ID=rust-server;   rust/target/release/counter_server
  RUST_CLIENT:   AIO_MQTT_CLIENT_ID=rust-client;   rust/target/release/counter_client

defaults:
  run:
    shell: bash

jobs:
  cross-language:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #=======================================================================
      # Install prerequesities
      #=======================================================================

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.200

      # - name: Setup GO
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: 1.24

      #=======================================================================
      # Build codegen and verify it matches repository
      #=======================================================================

      # - name: Build codegen
      #   run: |
      #     dotnet build -c Debug codegen/codegen.sln
      #     echo "codegen=$(echo $(realpath codegen/src/Azure.Iot.Operations.ProtocolCompiler/bin/Debug/net8.0/Azure.Iot.Operations.ProtocolCompiler))" >> $GITHUB_ENV

      # - name: CodeGen Rust Counter samples
      #   run: |
      #     pushd rust/sample_applications/counter/envoy; $codegen --modelFile ../../../../eng/test/schema-samples/counter.json --sdkPath ../../.. --lang=rust; popd

      # - name: CodeGen .NET Counter samples
      #   run: |
      #     pushd dotnet/samples/TestEnvoys; $codegen --modelFile ../../../eng/test/schema-samples/counter.json --sdkPath ../../src/Azure.Iot.Operations.Protocol --lang=csharp; popd

      # - name: CodeGen Go Counter samples
      #   run: |
      #     pushd go/samples/protocol/counter/envoy; $codegen --modelFile ../../../../../eng/test/schema-samples/counter.json --lang go; popd

      # - name: Verify Generated Code Matches Repo
      #   run: |
      #     if ! git diff --exit-code --ignore-cr-at-eol
      #     then
      #         echo "codegen'd envoy updates not checked in"
      #         git diff-files
      #         echo "If this gets triggered by the differences between windows and linux line endings, we may need to modify this check"
      #         exit 1
      #     fi

      #=======================================================================
      # Build all the components
      #=======================================================================

      - name: Build .NET Sample
        run: |
          cd dotnet
          dotnet build -c Release

      # - name: Build Go Sample
      #   run: |
      #     cd go
      #     go build -o server samples/protocol/counter/server/main.go
      #     go build -o client samples/protocol/counter/client/main.go

      # - name: Build Rust Sample
      #   run: |
      #     cd rust
      #     cargo build --release --config profile.release.panic=\'abort\'

      #=======================================================================
      # Run the tests
      #=======================================================================

      # - name: Install AIO
      #   uses: ./.github/actions/deploy-aio

      - name: Dotnet server
        run: AIO_MQTT_CLIENT_ID=dotnet-server dotnet run -c Release --project dotnet/samples/CounterServer &

      - name: Dotnet clients
        run: $DOTNET_CLIENT
        env:
          COUNTER_SERVER_ID: dotnet-server

      # - name: Go server
      #   run: |
      #     $GO_SERVER &
      #     $DOTNET_CLIENT
      #     $GO_CLIENT
      #     $RUST_CLIENT
      #   env:
      #     COUNTER_SERVER_ID: go-server

      # - name: Rust server
      #   run: |
      #     $RUST_SERVER &
      #     $DOTNET_CLIENT
      #     $GO_CLIENT
      #     $RUST_CLIENT
      #   env:
      #     COUNTER_SERVER_ID: rust-server
