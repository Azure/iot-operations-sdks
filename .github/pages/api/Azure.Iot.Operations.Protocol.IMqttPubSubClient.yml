### YamlMime:ManagedReference
items:
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  commentId: T:Azure.Iot.Operations.Protocol.IMqttPubSubClient
  id: IMqttPubSubClient
  parent: Azure.Iot.Operations.Protocol
  children:
  - Azure.Iot.Operations.Protocol.IMqttPubSubClient.ApplicationMessageReceivedAsync
  - Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId
  - Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync(System.Boolean)
  - Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion
  - Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync(Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage,System.Threading.CancellationToken)
  - Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions,System.Threading.CancellationToken)
  - Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IMqttPubSubClient
  nameWithType: IMqttPubSubClient
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  type: Interface
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: IMqttPubSubClient
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 17
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  summary: >-
    An MQTT client interface that is intentionally limited to publish and subscribe operations. Implementations

    of this interface may provide connect/disconnect functions and may or may not include retry logic to handle

    when a publish or subscribe is attempted when disconnected.
  example: []
  syntax:
    content: 'public interface IMqttPubSubClient : IAsyncDisposable'
    content.vb: Public Interface IMqttPubSubClient Inherits IAsyncDisposable
  inheritedMembers:
  - System.IAsyncDisposable.DisposeAsync
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ApplicationMessageReceivedAsync
  commentId: E:Azure.Iot.Operations.Protocol.IMqttPubSubClient.ApplicationMessageReceivedAsync
  id: ApplicationMessageReceivedAsync
  parent: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  langs:
  - csharp
  - vb
  name: ApplicationMessageReceivedAsync
  nameWithType: IMqttPubSubClient.ApplicationMessageReceivedAsync
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ApplicationMessageReceivedAsync
  type: Event
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: ApplicationMessageReceivedAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 30
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  summary: The event that notifies you when this client receives a PUBLISH from the MQTT broker.
  remarks: >-
    Users are responsible for acknowledging each received PUBLISH. Users must either automatically acknowledge the message

    by opting into automatically sending the acknowledgement by setting the <xref href="Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AutoAcknowledge" data-throw-if-not-resolved="false"></xref> flag, 

    or they can manually acknowledge the PUBLISH by invoking <xref href="Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AcknowledgeAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.


    Note that this client sends PUBLISH acknowledgements in the order that the corresponding PUBLISH packets were received,

    so failing to acknowledge a PUBLISH will block sending acknowledgements for all subsequent PUBLISH packets received.
  example: []
  syntax:
    content: event Func<MqttApplicationMessageReceivedEventArgs, Task>? ApplicationMessageReceivedAsync
    return:
      type: System.Func{Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs,System.Threading.Tasks.Task}
    content.vb: Event ApplicationMessageReceivedAsync As Func(Of MqttApplicationMessageReceivedEventArgs, Task)
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync(Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync(Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage,System.Threading.CancellationToken)
  id: PublishAsync(Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage,System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  langs:
  - csharp
  - vb
  name: PublishAsync(MqttApplicationMessage, CancellationToken)
  nameWithType: IMqttPubSubClient.PublishAsync(MqttApplicationMessage, CancellationToken)
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync(Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: PublishAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 41
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  summary: Publish a message to the MQTT broker.
  remarks: The behavior of publishing when the MQTT client is disconnected will vary depending on the implementation.
  example: []
  syntax:
    content: Task<MqttClientPublishResult> PublishAsync(MqttApplicationMessage applicationMessage, CancellationToken cancellationToken = default)
    parameters:
    - id: applicationMessage
      type: Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage
      description: The message to publish
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult}
      description: The result of the publish.
    content.vb: Function PublishAsync(applicationMessage As MqttApplicationMessage, cancellationToken As CancellationToken = Nothing) As Task(Of MqttClientPublishResult)
  overload: Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync*
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions,System.Threading.CancellationToken)
  id: SubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions,System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  langs:
  - csharp
  - vb
  name: SubscribeAsync(MqttClientSubscribeOptions, CancellationToken)
  nameWithType: IMqttPubSubClient.SubscribeAsync(MqttClientSubscribeOptions, CancellationToken)
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: SubscribeAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 52
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  summary: Subscribe to a topic on the MQTT broker.
  remarks: The behavior of subscribing when the MQTT client is disconnected will vary depending on the implementation.
  example: []
  syntax:
    content: Task<MqttClientSubscribeResult> SubscribeAsync(MqttClientSubscribeOptions options, CancellationToken cancellationToken = default)
    parameters:
    - id: options
      type: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions
      description: The details of the subscribe.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult}
      description: The MQTT broker's response.
    content.vb: Function SubscribeAsync(options As MqttClientSubscribeOptions, cancellationToken As CancellationToken = Nothing) As Task(Of MqttClientSubscribeResult)
  overload: Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync*
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions,System.Threading.CancellationToken)
  id: UnsubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions,System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  langs:
  - csharp
  - vb
  name: UnsubscribeAsync(MqttClientUnsubscribeOptions, CancellationToken)
  nameWithType: IMqttPubSubClient.UnsubscribeAsync(MqttClientUnsubscribeOptions, CancellationToken)
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync(Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: UnsubscribeAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 63
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  summary: Unsubscribe from a topic on the MQTT broker.
  remarks: The behavior of unsubscribing when the MQTT client is disconnected will vary depending on the implementation.
  example: []
  syntax:
    content: Task<MqttClientUnsubscribeResult> UnsubscribeAsync(MqttClientUnsubscribeOptions options, CancellationToken cancellationToken = default)
    parameters:
    - id: options
      type: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions
      description: The details of the unsubscribe request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult}
      description: The MQTT broker's response.
    content.vb: Function UnsubscribeAsync(options As MqttClientUnsubscribeOptions, cancellationToken As CancellationToken = Nothing) As Task(Of MqttClientUnsubscribeResult)
  overload: Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync*
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId
  commentId: P:Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId
  id: ClientId
  parent: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: IMqttPubSubClient.ClientId
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId
  type: Property
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: ClientId
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 71
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  summary: Returns the client Id used by this client.
  remarks: If a client Id has not been assigned yet by the user or by the broker, this value is null.
  example: []
  syntax:
    content: string? ClientId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ClientId As String
  overload: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId*
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion
  commentId: P:Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion
  id: ProtocolVersion
  parent: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  langs:
  - csharp
  - vb
  name: ProtocolVersion
  nameWithType: IMqttPubSubClient.ProtocolVersion
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion
  type: Property
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: ProtocolVersion
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 76
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  summary: The version of the MQTT protocol that this client is using.
  example: []
  syntax:
    content: MqttProtocolVersion ProtocolVersion { get; }
    parameters: []
    return:
      type: Azure.Iot.Operations.Protocol.Models.MqttProtocolVersion
    content.vb: ReadOnly Property ProtocolVersion As MqttProtocolVersion
  overload: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion*
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync(System.Boolean)
  commentId: M:Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync(System.Boolean)
  id: DisposeAsync(System.Boolean)
  parent: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  langs:
  - csharp
  - vb
  name: DisposeAsync(bool)
  nameWithType: IMqttPubSubClient.DisposeAsync(bool)
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync(bool)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: DisposeAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Protocol/IMqttPubSubClient.cs
    startLine: 78
  assemblies:
  - Azure.Iot.Operations.Protocol
  namespace: Azure.Iot.Operations.Protocol
  syntax:
    content: ValueTask DisposeAsync(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Function DisposeAsync(disposing As Boolean) As ValueTask
  overload: Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync*
  nameWithType.vb: IMqttPubSubClient.DisposeAsync(Boolean)
  fullName.vb: Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync(Boolean)
  name.vb: DisposeAsync(Boolean)
references:
- uid: Azure.Iot.Operations.Protocol
  commentId: N:Azure.Iot.Operations.Protocol
  href: Azure.html
  name: Azure.Iot.Operations.Protocol
  nameWithType: Azure.Iot.Operations.Protocol
  fullName: Azure.Iot.Operations.Protocol
  spec.csharp:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol
    name: Protocol
    href: Azure.Iot.Operations.Protocol.html
  spec.vb:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol
    name: Protocol
    href: Azure.Iot.Operations.Protocol.html
- uid: System.IAsyncDisposable.DisposeAsync
  commentId: M:System.IAsyncDisposable.DisposeAsync
  parent: System.IAsyncDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  name: DisposeAsync()
  nameWithType: IAsyncDisposable.DisposeAsync()
  fullName: System.IAsyncDisposable.DisposeAsync()
  spec.csharp:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AutoAcknowledge
  commentId: P:Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AutoAcknowledge
  href: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html#Azure_Iot_Operations_Protocol_Events_MqttApplicationMessageReceivedEventArgs_AutoAcknowledge
  name: AutoAcknowledge
  nameWithType: MqttApplicationMessageReceivedEventArgs.AutoAcknowledge
  fullName: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AutoAcknowledge
- uid: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AcknowledgeAsync(System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AcknowledgeAsync(System.Threading.CancellationToken)
  isExternal: true
  href: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html#Azure_Iot_Operations_Protocol_Events_MqttApplicationMessageReceivedEventArgs_AcknowledgeAsync_System_Threading_CancellationToken_
  name: AcknowledgeAsync(CancellationToken)
  nameWithType: MqttApplicationMessageReceivedEventArgs.AcknowledgeAsync(CancellationToken)
  fullName: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AcknowledgeAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AcknowledgeAsync(System.Threading.CancellationToken)
    name: AcknowledgeAsync
    href: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html#Azure_Iot_Operations_Protocol_Events_MqttApplicationMessageReceivedEventArgs_AcknowledgeAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.AcknowledgeAsync(System.Threading.CancellationToken)
    name: AcknowledgeAsync
    href: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html#Azure_Iot_Operations_Protocol_Events_MqttApplicationMessageReceivedEventArgs_AcknowledgeAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func{Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs,System.Threading.Tasks.Task}
  commentId: T:System.Func{Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<MqttApplicationMessageReceivedEventArgs, Task>
  nameWithType: Func<MqttApplicationMessageReceivedEventArgs, Task>
  fullName: System.Func<Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of MqttApplicationMessageReceivedEventArgs, Task)
  fullName.vb: System.Func(Of Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs, System.Threading.Tasks.Task)
  name.vb: Func(Of MqttApplicationMessageReceivedEventArgs, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs
    name: MqttApplicationMessageReceivedEventArgs
    href: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs
    name: MqttApplicationMessageReceivedEventArgs
    href: Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync*
  commentId: Overload:Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync
  href: Azure.Iot.Operations.Protocol.IMqttPubSubClient.html#Azure_Iot_Operations_Protocol_IMqttPubSubClient_PublishAsync_Azure_Iot_Operations_Protocol_Models_MqttApplicationMessage_System_Threading_CancellationToken_
  name: PublishAsync
  nameWithType: IMqttPubSubClient.PublishAsync
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.PublishAsync
- uid: Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage
  commentId: T:Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage
  parent: Azure.Iot.Operations.Protocol.Models
  href: Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage.html
  name: MqttApplicationMessage
  nameWithType: MqttApplicationMessage
  fullName: Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult}
  commentId: T:System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MqttClientPublishResult>
  nameWithType: Task<MqttClientPublishResult>
  fullName: System.Threading.Tasks.Task<Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult>
  nameWithType.vb: Task(Of MqttClientPublishResult)
  fullName.vb: System.Threading.Tasks.Task(Of Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult)
  name.vb: Task(Of MqttClientPublishResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult
    name: MqttClientPublishResult
    href: Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult
    name: MqttClientPublishResult
    href: Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult.html
  - name: )
- uid: Azure.Iot.Operations.Protocol.Models
  commentId: N:Azure.Iot.Operations.Protocol.Models
  href: Azure.html
  name: Azure.Iot.Operations.Protocol.Models
  nameWithType: Azure.Iot.Operations.Protocol.Models
  fullName: Azure.Iot.Operations.Protocol.Models
  spec.csharp:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol
    name: Protocol
    href: Azure.Iot.Operations.Protocol.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol.Models
    name: Models
    href: Azure.Iot.Operations.Protocol.Models.html
  spec.vb:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol
    name: Protocol
    href: Azure.Iot.Operations.Protocol.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol.Models
    name: Models
    href: Azure.Iot.Operations.Protocol.Models.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync*
  commentId: Overload:Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync
  href: Azure.Iot.Operations.Protocol.IMqttPubSubClient.html#Azure_Iot_Operations_Protocol_IMqttPubSubClient_SubscribeAsync_Azure_Iot_Operations_Protocol_Models_MqttClientSubscribeOptions_System_Threading_CancellationToken_
  name: SubscribeAsync
  nameWithType: IMqttPubSubClient.SubscribeAsync
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.SubscribeAsync
- uid: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions
  commentId: T:Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions
  parent: Azure.Iot.Operations.Protocol.Models
  href: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions.html
  name: MqttClientSubscribeOptions
  nameWithType: MqttClientSubscribeOptions
  fullName: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions
- uid: System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult}
  commentId: T:System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MqttClientSubscribeResult>
  nameWithType: Task<MqttClientSubscribeResult>
  fullName: System.Threading.Tasks.Task<Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult>
  nameWithType.vb: Task(Of MqttClientSubscribeResult)
  fullName.vb: System.Threading.Tasks.Task(Of Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult)
  name.vb: Task(Of MqttClientSubscribeResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult
    name: MqttClientSubscribeResult
    href: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult
    name: MqttClientSubscribeResult
    href: Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult.html
  - name: )
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync*
  commentId: Overload:Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync
  href: Azure.Iot.Operations.Protocol.IMqttPubSubClient.html#Azure_Iot_Operations_Protocol_IMqttPubSubClient_UnsubscribeAsync_Azure_Iot_Operations_Protocol_Models_MqttClientUnsubscribeOptions_System_Threading_CancellationToken_
  name: UnsubscribeAsync
  nameWithType: IMqttPubSubClient.UnsubscribeAsync
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.UnsubscribeAsync
- uid: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions
  commentId: T:Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions
  parent: Azure.Iot.Operations.Protocol.Models
  href: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions.html
  name: MqttClientUnsubscribeOptions
  nameWithType: MqttClientUnsubscribeOptions
  fullName: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions
- uid: System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult}
  commentId: T:System.Threading.Tasks.Task{Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MqttClientUnsubscribeResult>
  nameWithType: Task<MqttClientUnsubscribeResult>
  fullName: System.Threading.Tasks.Task<Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult>
  nameWithType.vb: Task(Of MqttClientUnsubscribeResult)
  fullName.vb: System.Threading.Tasks.Task(Of Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult)
  name.vb: Task(Of MqttClientUnsubscribeResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult
    name: MqttClientUnsubscribeResult
    href: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult
    name: MqttClientUnsubscribeResult
    href: Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult.html
  - name: )
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId*
  commentId: Overload:Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId
  href: Azure.Iot.Operations.Protocol.IMqttPubSubClient.html#Azure_Iot_Operations_Protocol_IMqttPubSubClient_ClientId
  name: ClientId
  nameWithType: IMqttPubSubClient.ClientId
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ClientId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion*
  commentId: Overload:Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion
  href: Azure.Iot.Operations.Protocol.IMqttPubSubClient.html#Azure_Iot_Operations_Protocol_IMqttPubSubClient_ProtocolVersion
  name: ProtocolVersion
  nameWithType: IMqttPubSubClient.ProtocolVersion
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.ProtocolVersion
- uid: Azure.Iot.Operations.Protocol.Models.MqttProtocolVersion
  commentId: T:Azure.Iot.Operations.Protocol.Models.MqttProtocolVersion
  parent: Azure.Iot.Operations.Protocol.Models
  href: Azure.Iot.Operations.Protocol.Models.MqttProtocolVersion.html
  name: MqttProtocolVersion
  nameWithType: MqttProtocolVersion
  fullName: Azure.Iot.Operations.Protocol.Models.MqttProtocolVersion
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync*
  commentId: Overload:Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync
  href: Azure.Iot.Operations.Protocol.IMqttPubSubClient.html#Azure_Iot_Operations_Protocol_IMqttPubSubClient_DisposeAsync_System_Boolean_
  name: DisposeAsync
  nameWithType: IMqttPubSubClient.DisposeAsync
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient.DisposeAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
