### YamlMime:ManagedReference
items:
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  commentId: T:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  id: LeaderElectionClient
  parent: Azure.Iot.Operations.Services.LeaderElection
  children:
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.#ctor(Azure.Iot.Operations.Protocol.IMqttPubSubClient,System.String,System.String)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync(Azure.Iot.Operations.Services.StateStore.StateStoreKey,System.Func{Azure.Iot.Operations.Services.StateStore.StateStoreValue,Azure.Iot.Operations.Services.StateStore.StateStoreValue},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync(System.Boolean)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore(System.Boolean)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync(System.Threading.CancellationToken)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync(Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions,System.Threading.CancellationToken)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  - Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: LeaderElectionClient
  nameWithType: LeaderElectionClient
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  type: Class
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: LeaderElectionClient
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 20
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: A client that uses the distributed State Store to perform leader election.
  remarks: >-
    <p>

    Once elected, this client will not automatically renew its position by default. This client allows you to opt-in to auto-renew

    with <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions" data-throw-if-not-resolved="false"></xref>, though.

    </p>

    <p>

    When a leader is elected via CampaignAsync(long, CampaignRequestOptions?, CancellationToken),

    the service will respond with a fencing token via <xref href="Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.FencingToken" data-throw-if-not-resolved="false"></xref>. This fencing token

    allows for State Store set/delete operations on shared resources without risk of race conditions.

    </p>
  example: []
  syntax:
    content: 'public class LeaderElectionClient : IAsyncDisposable'
    content.vb: Public Class LeaderElectionClient Implements IAsyncDisposable
  inheritance:
  - System.Object
  implements:
  - System.IAsyncDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync
  commentId: E:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync
  id: LeadershipChangeEventReceivedAsync
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: LeadershipChangeEventReceivedAsync
  nameWithType: LeaderElectionClient.LeadershipChangeEventReceivedAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync
  type: Event
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: LeadershipChangeEventReceivedAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 34
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: The callback that executes whenever the current leader changes.
  remarks: >-
    Users who want to watch leadership change events must first set this callback, then

    call <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.

    To stop watching leadership change events, call <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>

    and then remove any handlers from this object.
  example: []
  syntax:
    content: public event Func<object?, LeadershipChangeEventArgs, Task>? LeadershipChangeEventReceivedAsync
    return:
      type: System.Func{System.Object,Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs,System.Threading.Tasks.Task}
    content.vb: Public Event LeadershipChangeEventReceivedAsync As Func(Of Object, LeadershipChangeEventArgs, Task)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName
  commentId: P:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName
  id: CandidateName
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: CandidateName
  nameWithType: LeaderElectionClient.CandidateName
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName
  type: Property
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: CandidateName
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 39
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: The name of this client that is used when campaigning to be leader.
  example: []
  syntax:
    content: public string CandidateName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CandidateName As String
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName*
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
  commentId: P:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
  id: AutomaticRenewalOptions
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: AutomaticRenewalOptions
  nameWithType: LeaderElectionClient.AutomaticRenewalOptions
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
  type: Property
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: AutomaticRenewalOptions
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 61
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: >-
    The options for automatically re-campaigning to be leader at the end of a term as leader. 

    By default, no automatic renewing happens.
  remarks: >-
    <p>

    These options must be set before calling <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan%2cAzure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.

    Once set, the automatic renewal will begin after the first call to <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan%2cAzure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    The result of automatic renewals can be accessed via <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public LeaderElectionAutomaticRenewalOptions AutomaticRenewalOptions { get; set; }
    parameters: []
    return:
      type: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionAutomaticRenewalOptions
    content.vb: Public Property AutomaticRenewalOptions As LeaderElectionAutomaticRenewalOptions
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions*
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
  commentId: P:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
  id: LastKnownCampaignResult
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: LastKnownCampaignResult
  nameWithType: LeaderElectionClient.LastKnownCampaignResult
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
  type: Property
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: LastKnownCampaignResult
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 93
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: The result of the most recently run campaign.
  remarks: This value captures the result of automatic re-campaigning with <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CampaignResponse? LastKnownCampaignResult { get; }
    parameters: []
    return:
      type: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse
    content.vb: Public ReadOnly Property LastKnownCampaignResult As CampaignResponse
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult*
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.#ctor(Azure.Iot.Operations.Protocol.IMqttPubSubClient,System.String,System.String)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.#ctor(Azure.Iot.Operations.Protocol.IMqttPubSubClient,System.String,System.String)
  id: '#ctor(Azure.Iot.Operations.Protocol.IMqttPubSubClient,System.String,System.String)'
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: LeaderElectionClient(IMqttPubSubClient, string, string?)
  nameWithType: LeaderElectionClient.LeaderElectionClient(IMqttPubSubClient, string, string?)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeaderElectionClient(Azure.Iot.Operations.Protocol.IMqttPubSubClient, string, string?)
  type: Constructor
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: .ctor
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 120
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Construct a new leader election client.
  example: []
  syntax:
    content: public LeaderElectionClient(IMqttPubSubClient mqttClient, string leadershipPositionId, string? candidateName = null)
    parameters:
    - id: mqttClient
      type: Azure.Iot.Operations.Protocol.IMqttPubSubClient
      description: The mqtt client to use for I/O.
    - id: leadershipPositionId
      type: System.String
      description: >-
        The identifier of the leadership position that this client can campaign for. Each client that will 

        campaign for the same leadership role must share the same value for this parameter.
    - id: candidateName
      type: System.String
      description: >-
        The name to represent this client. Other clients can look up the current 
            leader's name.
    content.vb: Public Sub New(mqttClient As IMqttPubSubClient, leadershipPositionId As String, candidateName As String = Nothing)
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.#ctor*
  nameWithType.vb: LeaderElectionClient.New(IMqttPubSubClient, String, String)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.New(Azure.Iot.Operations.Protocol.IMqttPubSubClient, String, String)
  name.vb: New(IMqttPubSubClient, String, String)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  id: TryCampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: TryCampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken)
  nameWithType: LeaderElectionClient.TryCampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync(System.TimeSpan, Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: TryCampaignAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 170
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Make a single attempt to campaign to be leader.
  remarks: >-
    <p>

    Once elected, this client will not automatically renew its position by default. This client allows you to opt-in to auto-renew

    with <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions" data-throw-if-not-resolved="false"></xref>, though.

    </p>
  example: []
  syntax:
    content: public virtual Task<CampaignResponse> TryCampaignAsync(TimeSpan electionTerm, CampaignRequestOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: electionTerm
      type: System.TimeSpan
      description: How long the client will be leader if elected. This value only has millisecond-level precision.
    - id: options
      type: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions
      description: The optional parameters for this request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.CampaignResponse}
      description: The result of the campaign.
    content.vb: Public Overridable Function TryCampaignAsync(electionTerm As TimeSpan, options As CampaignRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CampaignResponse)
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync*
  nameWithType.vb: LeaderElectionClient.TryCampaignAsync(TimeSpan, CampaignRequestOptions, CancellationToken)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync(System.TimeSpan, Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions, System.Threading.CancellationToken)
  name.vb: TryCampaignAsync(TimeSpan, CampaignRequestOptions, CancellationToken)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  id: CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: CampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken)
  nameWithType: LeaderElectionClient.CampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan, Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: CampaignAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 206
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Await until this client is elected leader or cancellation is requested.
  remarks: >-
    <p>

    Once elected, this client will not automatically renew its position by default. This client allows you to opt-in to auto-renew

    with <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions" data-throw-if-not-resolved="false"></xref>, though.

    </p>
  example: []
  syntax:
    content: public virtual Task<CampaignResponse> CampaignAsync(TimeSpan electionTerm, CampaignRequestOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: electionTerm
      type: System.TimeSpan
      description: How long the client will be leader if elected. This value only has millisecond-level precision.
    - id: options
      type: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions
      description: The optional parameters for this request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.CampaignResponse}
      description: The result of the campaign.
    content.vb: Public Overridable Function CampaignAsync(electionTerm As TimeSpan, options As CampaignRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CampaignResponse)
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync*
  nameWithType.vb: LeaderElectionClient.CampaignAsync(TimeSpan, CampaignRequestOptions, CancellationToken)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan, Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions, System.Threading.CancellationToken)
  name.vb: CampaignAsync(TimeSpan, CampaignRequestOptions, CancellationToken)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync(Azure.Iot.Operations.Services.StateStore.StateStoreKey,System.Func{Azure.Iot.Operations.Services.StateStore.StateStoreValue,Azure.Iot.Operations.Services.StateStore.StateStoreValue},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync(Azure.Iot.Operations.Services.StateStore.StateStoreKey,System.Func{Azure.Iot.Operations.Services.StateStore.StateStoreValue,Azure.Iot.Operations.Services.StateStore.StateStoreValue},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  id: CampaignAndUpdateValueAsync(Azure.Iot.Operations.Services.StateStore.StateStoreKey,System.Func{Azure.Iot.Operations.Services.StateStore.StateStoreValue,Azure.Iot.Operations.Services.StateStore.StateStoreValue},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: CampaignAndUpdateValueAsync(StateStoreKey, Func<StateStoreValue?, StateStoreValue?>, TimeSpan?, CancellationToken)
  nameWithType: LeaderElectionClient.CampaignAndUpdateValueAsync(StateStoreKey, Func<StateStoreValue?, StateStoreValue?>, TimeSpan?, CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync(Azure.Iot.Operations.Services.StateStore.StateStoreKey, System.Func<Azure.Iot.Operations.Services.StateStore.StateStoreValue?, Azure.Iot.Operations.Services.StateStore.StateStoreValue?>, System.TimeSpan?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: CampaignAndUpdateValueAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 251
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  syntax:
    content: public Task CampaignAndUpdateValueAsync(StateStoreKey key, Func<StateStoreValue?, StateStoreValue?> updateValueFunc, TimeSpan? maximumTermLength = null, CancellationToken cancellationToken = default)
    parameters:
    - id: key
      type: Azure.Iot.Operations.Services.StateStore.StateStoreKey
    - id: updateValueFunc
      type: System.Func{Azure.Iot.Operations.Services.StateStore.StateStoreValue,Azure.Iot.Operations.Services.StateStore.StateStoreValue}
    - id: maximumTermLength
      type: System.Nullable{System.TimeSpan}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CampaignAndUpdateValueAsync(key As StateStoreKey, updateValueFunc As Func(Of StateStoreValue, StateStoreValue), maximumTermLength As TimeSpan? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync*
  nameWithType.vb: LeaderElectionClient.CampaignAndUpdateValueAsync(StateStoreKey, Func(Of StateStoreValue, StateStoreValue), TimeSpan?, CancellationToken)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync(Azure.Iot.Operations.Services.StateStore.StateStoreKey, System.Func(Of Azure.Iot.Operations.Services.StateStore.StateStoreValue, Azure.Iot.Operations.Services.StateStore.StateStoreValue), System.TimeSpan?, System.Threading.CancellationToken)
  name.vb: CampaignAndUpdateValueAsync(StateStoreKey, Func(Of StateStoreValue, StateStoreValue), TimeSpan?, CancellationToken)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync(System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync(System.Threading.CancellationToken)
  id: GetCurrentLeaderAsync(System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: GetCurrentLeaderAsync(CancellationToken)
  nameWithType: LeaderElectionClient.GetCurrentLeaderAsync(CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: GetCurrentLeaderAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 261
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Get the name of the current leader.
  example: []
  syntax:
    content: public virtual Task<GetCurrentLeaderResponse> GetCurrentLeaderAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse}
      description: The details about the current leader.
    content.vb: Public Overridable Function GetCurrentLeaderAsync(cancellationToken As CancellationToken = Nothing) As Task(Of GetCurrentLeaderResponse)
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync*
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync(Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync(Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions,System.Threading.CancellationToken)
  id: ResignAsync(Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions,System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: ResignAsync(ResignationRequestOptions?, CancellationToken)
  nameWithType: LeaderElectionClient.ResignAsync(ResignationRequestOptions?, CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync(Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: ResignAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 283
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Resign from being the leader.
  example: []
  syntax:
    content: public virtual Task<ResignationResponse> ResignAsync(ResignationRequestOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: options
      type: Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions
      description: The optional parameters for this request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.ResignationResponse}
      description: The result of the attempted resignation.
    content.vb: Public Overridable Function ResignAsync(options As ResignationRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ResignationResponse)
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync*
  nameWithType.vb: LeaderElectionClient.ResignAsync(ResignationRequestOptions, CancellationToken)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync(Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions, System.Threading.CancellationToken)
  name.vb: ResignAsync(ResignationRequestOptions, CancellationToken)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
  id: ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions?, CancellationToken)
  nameWithType: LeaderElectionClient.ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions?, CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: ObserveLeadershipChangesAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 313
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Start receiving notifications when the leader changes.
  remarks: >-
    Users who want to watch lock holder change events must first set one or more handlers on 

    <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync" data-throw-if-not-resolved="false"></xref>, then call this function.

    To stop watching lock holder change events, call <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>

    and then remove any handlers from <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual Task ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions? options = null, CancellationToken cancellationToken = default)
    parameters:
    - id: options
      type: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions
      description: The optional parameters for this request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function ObserveLeadershipChangesAsync(options As ObserveLeadershipChangesRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync*
  nameWithType.vb: LeaderElectionClient.ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions, CancellationToken)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions, System.Threading.CancellationToken)
  name.vb: ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions, CancellationToken)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  id: UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: UnobserveLeadershipChangesAsync(CancellationToken)
  nameWithType: LeaderElectionClient.UnobserveLeadershipChangesAsync(CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: UnobserveLeadershipChangesAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 337
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Stop receiving notifications when the leader changes.
  remarks: >-
    Users who want to watch lock holder change events must first set one or more handlers on 

    <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync" data-throw-if-not-resolved="false"></xref>, then call <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.

    To stop watching lock holder change events, call this function

    and then remove any handlers from <xref href="Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual Task UnobserveLeadershipChangesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function UnobserveLeadershipChangesAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync*
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync
  id: DisposeAsync
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: LeaderElectionClient.DisposeAsync()
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync()
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: DisposeAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 345
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.
  example: []
  syntax:
    content: public ValueTask DisposeAsync()
    return:
      type: System.Threading.Tasks.ValueTask
      description: A task that represents the asynchronous dispose operation.
    content.vb: Public Function DisposeAsync() As ValueTask
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync*
  implements:
  - System.IAsyncDisposable.DisposeAsync
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync(System.Boolean)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync(System.Boolean)
  id: DisposeAsync(System.Boolean)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: DisposeAsync(bool)
  nameWithType: LeaderElectionClient.DisposeAsync(bool)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync(bool)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: DisposeAsync
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 351
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  syntax:
    content: public ValueTask DisposeAsync(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Function DisposeAsync(disposing As Boolean) As ValueTask
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync*
  nameWithType.vb: LeaderElectionClient.DisposeAsync(Boolean)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync(Boolean)
  name.vb: DisposeAsync(Boolean)
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore(System.Boolean)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore(System.Boolean)
  id: DisposeAsyncCore(System.Boolean)
  parent: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient
  langs:
  - csharp
  - vb
  name: DisposeAsyncCore(bool)
  nameWithType: LeaderElectionClient.DisposeAsyncCore(bool)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore(bool)
  type: Method
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: DisposeAsyncCore
    path: ../../dotnet/src/Azure.Iot.Operations.Services/LeaderElection/LeaderElectionClient.cs
    startLine: 357
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.LeaderElection
  syntax:
    content: protected virtual ValueTask DisposeAsyncCore(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Protected Overridable Function DisposeAsyncCore(disposing As Boolean) As ValueTask
  overload: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore*
  nameWithType.vb: LeaderElectionClient.DisposeAsyncCore(Boolean)
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore(Boolean)
  name.vb: DisposeAsyncCore(Boolean)
references:
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
  commentId: P:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_AutomaticRenewalOptions
  name: AutomaticRenewalOptions
  nameWithType: LeaderElectionClient.AutomaticRenewalOptions
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
- uid: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.FencingToken
  commentId: P:Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.FencingToken
  href: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.html#Azure_Iot_Operations_Services_LeaderElection_CampaignResponse_FencingToken
  name: FencingToken
  nameWithType: CampaignResponse.FencingToken
  fullName: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.FencingToken
- uid: Azure.Iot.Operations.Services.LeaderElection
  commentId: N:Azure.Iot.Operations.Services.LeaderElection
  href: Azure.html
  name: Azure.Iot.Operations.Services.LeaderElection
  nameWithType: Azure.Iot.Operations.Services.LeaderElection
  fullName: Azure.Iot.Operations.Services.LeaderElection
  spec.csharp:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Services
    name: Services
    href: Azure.Iot.Operations.Services.html
  - name: .
  - uid: Azure.Iot.Operations.Services.LeaderElection
    name: LeaderElection
    href: Azure.Iot.Operations.Services.LeaderElection.html
  spec.vb:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Services
    name: Services
    href: Azure.Iot.Operations.Services.html
  - name: .
  - uid: Azure.Iot.Operations.Services.LeaderElection
    name: LeaderElection
    href: Azure.Iot.Operations.Services.LeaderElection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
  isExternal: true
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_ObserveLeadershipChangesAsync_Azure_Iot_Operations_Services_LeaderElection_ObserveLeadershipChangesRequestOptions_System_Threading_CancellationToken_
  name: ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions, CancellationToken)
  nameWithType: LeaderElectionClient.ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions, CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
    name: ObserveLeadershipChangesAsync
    href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_ObserveLeadershipChangesAsync_Azure_Iot_Operations_Services_LeaderElection_ObserveLeadershipChangesRequestOptions_System_Threading_CancellationToken_
  - name: (
  - uid: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions
    name: ObserveLeadershipChangesRequestOptions
    href: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync(Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions,System.Threading.CancellationToken)
    name: ObserveLeadershipChangesAsync
    href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_ObserveLeadershipChangesAsync_Azure_Iot_Operations_Services_LeaderElection_ObserveLeadershipChangesRequestOptions_System_Threading_CancellationToken_
  - name: (
  - uid: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions
    name: ObserveLeadershipChangesRequestOptions
    href: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  isExternal: true
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_UnobserveLeadershipChangesAsync_System_Threading_CancellationToken_
  name: UnobserveLeadershipChangesAsync(CancellationToken)
  nameWithType: LeaderElectionClient.UnobserveLeadershipChangesAsync(CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
    name: UnobserveLeadershipChangesAsync
    href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_UnobserveLeadershipChangesAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync(System.Threading.CancellationToken)
    name: UnobserveLeadershipChangesAsync
    href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_UnobserveLeadershipChangesAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func{System.Object,Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs,System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Object,Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<object, LeadershipChangeEventArgs, Task>
  nameWithType: Func<object, LeadershipChangeEventArgs, Task>
  fullName: System.Func<object, Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Object, LeadershipChangeEventArgs, Task)
  fullName.vb: System.Func(Of Object, Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs, System.Threading.Tasks.Task)
  name.vb: Func(Of Object, LeadershipChangeEventArgs, Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs
    name: LeadershipChangeEventArgs
    href: Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs
    name: LeadershipChangeEventArgs
    href: Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs.html
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_CandidateName
  name: CandidateName
  nameWithType: LeaderElectionClient.CandidateName
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CandidateName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  commentId: M:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
  isExternal: true
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_CampaignAsync_System_TimeSpan_Azure_Iot_Operations_Services_LeaderElection_CampaignRequestOptions_System_Threading_CancellationToken_
  name: CampaignAsync(TimeSpan, CampaignRequestOptions, CancellationToken)
  nameWithType: LeaderElectionClient.CampaignAsync(TimeSpan, CampaignRequestOptions, CancellationToken)
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan, Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
    name: CampaignAsync
    href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_CampaignAsync_System_TimeSpan_Azure_Iot_Operations_Services_LeaderElection_CampaignRequestOptions_System_Threading_CancellationToken_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions
    name: CampaignRequestOptions
    href: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync(System.TimeSpan,Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions,System.Threading.CancellationToken)
    name: CampaignAsync
    href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_CampaignAsync_System_TimeSpan_Azure_Iot_Operations_Services_LeaderElection_CampaignRequestOptions_System_Threading_CancellationToken_
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions
    name: CampaignRequestOptions
    href: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
  commentId: P:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_LastKnownCampaignResult
  name: LastKnownCampaignResult
  nameWithType: LeaderElectionClient.LastKnownCampaignResult
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_AutomaticRenewalOptions
  name: AutomaticRenewalOptions
  nameWithType: LeaderElectionClient.AutomaticRenewalOptions
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.AutomaticRenewalOptions
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionAutomaticRenewalOptions
  commentId: T:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionAutomaticRenewalOptions
  parent: Azure.Iot.Operations.Services.LeaderElection
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionAutomaticRenewalOptions.html
  name: LeaderElectionAutomaticRenewalOptions
  nameWithType: LeaderElectionAutomaticRenewalOptions
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionAutomaticRenewalOptions
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_LastKnownCampaignResult
  name: LastKnownCampaignResult
  nameWithType: LeaderElectionClient.LastKnownCampaignResult
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LastKnownCampaignResult
- uid: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse
  commentId: T:Azure.Iot.Operations.Services.LeaderElection.CampaignResponse
  parent: Azure.Iot.Operations.Services.LeaderElection
  href: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.html
  name: CampaignResponse
  nameWithType: CampaignResponse
  fullName: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.#ctor*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.#ctor
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient__ctor_Azure_Iot_Operations_Protocol_IMqttPubSubClient_System_String_System_String_
  name: LeaderElectionClient
  nameWithType: LeaderElectionClient.LeaderElectionClient
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeaderElectionClient
  nameWithType.vb: LeaderElectionClient.New
  fullName.vb: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.New
  name.vb: New
- uid: Azure.Iot.Operations.Protocol.IMqttPubSubClient
  commentId: T:Azure.Iot.Operations.Protocol.IMqttPubSubClient
  parent: Azure.Iot.Operations.Protocol
  href: Azure.Iot.Operations.Protocol.IMqttPubSubClient.html
  name: IMqttPubSubClient
  nameWithType: IMqttPubSubClient
  fullName: Azure.Iot.Operations.Protocol.IMqttPubSubClient
- uid: Azure.Iot.Operations.Protocol
  commentId: N:Azure.Iot.Operations.Protocol
  href: Azure.html
  name: Azure.Iot.Operations.Protocol
  nameWithType: Azure.Iot.Operations.Protocol
  fullName: Azure.Iot.Operations.Protocol
  spec.csharp:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol
    name: Protocol
    href: Azure.Iot.Operations.Protocol.html
  spec.vb:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Protocol
    name: Protocol
    href: Azure.Iot.Operations.Protocol.html
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_TryCampaignAsync_System_TimeSpan_Azure_Iot_Operations_Services_LeaderElection_CampaignRequestOptions_System_Threading_CancellationToken_
  name: TryCampaignAsync
  nameWithType: LeaderElectionClient.TryCampaignAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.TryCampaignAsync
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions
  commentId: T:Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions
  parent: Azure.Iot.Operations.Services.LeaderElection
  href: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions.html
  name: CampaignRequestOptions
  nameWithType: CampaignRequestOptions
  fullName: Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.CampaignResponse}
  commentId: T:System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.CampaignResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CampaignResponse>
  nameWithType: Task<CampaignResponse>
  fullName: System.Threading.Tasks.Task<Azure.Iot.Operations.Services.LeaderElection.CampaignResponse>
  nameWithType.vb: Task(Of CampaignResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Azure.Iot.Operations.Services.LeaderElection.CampaignResponse)
  name.vb: Task(Of CampaignResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse
    name: CampaignResponse
    href: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse
    name: CampaignResponse
    href: Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_CampaignAsync_System_TimeSpan_Azure_Iot_Operations_Services_LeaderElection_CampaignRequestOptions_System_Threading_CancellationToken_
  name: CampaignAsync
  nameWithType: LeaderElectionClient.CampaignAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAsync
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_CampaignAndUpdateValueAsync_Azure_Iot_Operations_Services_StateStore_StateStoreKey_System_Func_Azure_Iot_Operations_Services_StateStore_StateStoreValue_Azure_Iot_Operations_Services_StateStore_StateStoreValue__System_Nullable_System_TimeSpan__System_Threading_CancellationToken_
  name: CampaignAndUpdateValueAsync
  nameWithType: LeaderElectionClient.CampaignAndUpdateValueAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.CampaignAndUpdateValueAsync
- uid: Azure.Iot.Operations.Services.StateStore.StateStoreKey
  commentId: T:Azure.Iot.Operations.Services.StateStore.StateStoreKey
  parent: Azure.Iot.Operations.Services.StateStore
  href: Azure.Iot.Operations.Services.StateStore.StateStoreKey.html
  name: StateStoreKey
  nameWithType: StateStoreKey
  fullName: Azure.Iot.Operations.Services.StateStore.StateStoreKey
- uid: System.Func{Azure.Iot.Operations.Services.StateStore.StateStoreValue,Azure.Iot.Operations.Services.StateStore.StateStoreValue}
  commentId: T:System.Func{Azure.Iot.Operations.Services.StateStore.StateStoreValue,Azure.Iot.Operations.Services.StateStore.StateStoreValue}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<StateStoreValue, StateStoreValue>
  nameWithType: Func<StateStoreValue, StateStoreValue>
  fullName: System.Func<Azure.Iot.Operations.Services.StateStore.StateStoreValue, Azure.Iot.Operations.Services.StateStore.StateStoreValue>
  nameWithType.vb: Func(Of StateStoreValue, StateStoreValue)
  fullName.vb: System.Func(Of Azure.Iot.Operations.Services.StateStore.StateStoreValue, Azure.Iot.Operations.Services.StateStore.StateStoreValue)
  name.vb: Func(Of StateStoreValue, StateStoreValue)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Azure.Iot.Operations.Services.StateStore.StateStoreValue
    name: StateStoreValue
    href: Azure.Iot.Operations.Services.StateStore.StateStoreValue.html
  - name: ','
  - name: " "
  - uid: Azure.Iot.Operations.Services.StateStore.StateStoreValue
    name: StateStoreValue
    href: Azure.Iot.Operations.Services.StateStore.StateStoreValue.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Services.StateStore.StateStoreValue
    name: StateStoreValue
    href: Azure.Iot.Operations.Services.StateStore.StateStoreValue.html
  - name: ','
  - name: " "
  - uid: Azure.Iot.Operations.Services.StateStore.StateStoreValue
    name: StateStoreValue
    href: Azure.Iot.Operations.Services.StateStore.StateStoreValue.html
  - name: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Azure.Iot.Operations.Services.StateStore
  commentId: N:Azure.Iot.Operations.Services.StateStore
  href: Azure.html
  name: Azure.Iot.Operations.Services.StateStore
  nameWithType: Azure.Iot.Operations.Services.StateStore
  fullName: Azure.Iot.Operations.Services.StateStore
  spec.csharp:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Services
    name: Services
    href: Azure.Iot.Operations.Services.html
  - name: .
  - uid: Azure.Iot.Operations.Services.StateStore
    name: StateStore
    href: Azure.Iot.Operations.Services.StateStore.html
  spec.vb:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Services
    name: Services
    href: Azure.Iot.Operations.Services.html
  - name: .
  - uid: Azure.Iot.Operations.Services.StateStore
    name: StateStore
    href: Azure.Iot.Operations.Services.StateStore.html
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_GetCurrentLeaderAsync_System_Threading_CancellationToken_
  name: GetCurrentLeaderAsync
  nameWithType: LeaderElectionClient.GetCurrentLeaderAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.GetCurrentLeaderAsync
- uid: System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse}
  commentId: T:System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<GetCurrentLeaderResponse>
  nameWithType: Task<GetCurrentLeaderResponse>
  fullName: System.Threading.Tasks.Task<Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse>
  nameWithType.vb: Task(Of GetCurrentLeaderResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse)
  name.vb: Task(Of GetCurrentLeaderResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse
    name: GetCurrentLeaderResponse
    href: Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse
    name: GetCurrentLeaderResponse
    href: Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse.html
  - name: )
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_ResignAsync_Azure_Iot_Operations_Services_LeaderElection_ResignationRequestOptions_System_Threading_CancellationToken_
  name: ResignAsync
  nameWithType: LeaderElectionClient.ResignAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ResignAsync
- uid: Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions
  commentId: T:Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions
  parent: Azure.Iot.Operations.Services.LeaderElection
  href: Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions.html
  name: ResignationRequestOptions
  nameWithType: ResignationRequestOptions
  fullName: Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions
- uid: System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.ResignationResponse}
  commentId: T:System.Threading.Tasks.Task{Azure.Iot.Operations.Services.LeaderElection.ResignationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResignationResponse>
  nameWithType: Task<ResignationResponse>
  fullName: System.Threading.Tasks.Task<Azure.Iot.Operations.Services.LeaderElection.ResignationResponse>
  nameWithType.vb: Task(Of ResignationResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Azure.Iot.Operations.Services.LeaderElection.ResignationResponse)
  name.vb: Task(Of ResignationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Azure.Iot.Operations.Services.LeaderElection.ResignationResponse
    name: ResignationResponse
    href: Azure.Iot.Operations.Services.LeaderElection.ResignationResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Azure.Iot.Operations.Services.LeaderElection.ResignationResponse
    name: ResignationResponse
    href: Azure.Iot.Operations.Services.LeaderElection.ResignationResponse.html
  - name: )
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync
  commentId: E:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_LeadershipChangeEventReceivedAsync
  name: LeadershipChangeEventReceivedAsync
  nameWithType: LeaderElectionClient.LeadershipChangeEventReceivedAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.LeadershipChangeEventReceivedAsync
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_ObserveLeadershipChangesAsync_Azure_Iot_Operations_Services_LeaderElection_ObserveLeadershipChangesRequestOptions_System_Threading_CancellationToken_
  name: ObserveLeadershipChangesAsync
  nameWithType: LeaderElectionClient.ObserveLeadershipChangesAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.ObserveLeadershipChangesAsync
- uid: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions
  commentId: T:Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions
  parent: Azure.Iot.Operations.Services.LeaderElection
  href: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions.html
  name: ObserveLeadershipChangesRequestOptions
  nameWithType: ObserveLeadershipChangesRequestOptions
  fullName: Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_UnobserveLeadershipChangesAsync_System_Threading_CancellationToken_
  name: UnobserveLeadershipChangesAsync
  nameWithType: LeaderElectionClient.UnobserveLeadershipChangesAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.UnobserveLeadershipChangesAsync
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_DisposeAsync
  name: DisposeAsync
  nameWithType: LeaderElectionClient.DisposeAsync
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsync
- uid: System.IAsyncDisposable.DisposeAsync
  commentId: M:System.IAsyncDisposable.DisposeAsync
  parent: System.IAsyncDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  name: DisposeAsync()
  nameWithType: IAsyncDisposable.DisposeAsync()
  fullName: System.IAsyncDisposable.DisposeAsync()
  spec.csharp:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore*
  commentId: Overload:Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore
  href: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html#Azure_Iot_Operations_Services_LeaderElection_LeaderElectionClient_DisposeAsyncCore_System_Boolean_
  name: DisposeAsyncCore
  nameWithType: LeaderElectionClient.DisposeAsyncCore
  fullName: Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.DisposeAsyncCore
