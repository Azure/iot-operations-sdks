### YamlMime:ManagedReference
items:
- uid: Azure.Iot.Operations.Services.StateStore.SetCondition
  commentId: T:Azure.Iot.Operations.Services.StateStore.SetCondition
  id: SetCondition
  parent: Azure.Iot.Operations.Services.StateStore
  children:
  - Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfEqualOrNotSet
  - Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfNotSet
  - Azure.Iot.Operations.Services.StateStore.SetCondition.Unconditional
  langs:
  - csharp
  - vb
  name: SetCondition
  nameWithType: SetCondition
  fullName: Azure.Iot.Operations.Services.StateStore.SetCondition
  type: Enum
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: SetCondition
    path: ../../dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
    startLine: 2
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.StateStore
  syntax:
    content: public enum SetCondition
    content.vb: Public Enum SetCondition
- uid: Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfNotSet
  commentId: F:Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfNotSet
  id: OnlyIfNotSet
  parent: Azure.Iot.Operations.Services.StateStore.SetCondition
  langs:
  - csharp
  - vb
  name: OnlyIfNotSet
  nameWithType: SetCondition.OnlyIfNotSet
  fullName: Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfNotSet
  type: Field
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: OnlyIfNotSet
    path: ../../dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
    startLine: 7
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.StateStore
  summary: The set operation will only execute if the State Store does not have this key already.
  example: []
  syntax:
    content: OnlyIfNotSet = 0
    return:
      type: Azure.Iot.Operations.Services.StateStore.SetCondition
- uid: Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfEqualOrNotSet
  commentId: F:Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfEqualOrNotSet
  id: OnlyIfEqualOrNotSet
  parent: Azure.Iot.Operations.Services.StateStore.SetCondition
  langs:
  - csharp
  - vb
  name: OnlyIfEqualOrNotSet
  nameWithType: SetCondition.OnlyIfEqualOrNotSet
  fullName: Azure.Iot.Operations.Services.StateStore.SetCondition.OnlyIfEqualOrNotSet
  type: Field
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: OnlyIfEqualOrNotSet
    path: ../../dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
    startLine: 13
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.StateStore
  summary: >-
    The set operation will only execute if the State Store does not have this key or it has this key and

    the value in the State Store is equal to the value provided for this set operation.
  example: []
  syntax:
    content: OnlyIfEqualOrNotSet = 1
    return:
      type: Azure.Iot.Operations.Services.StateStore.SetCondition
- uid: Azure.Iot.Operations.Services.StateStore.SetCondition.Unconditional
  commentId: F:Azure.Iot.Operations.Services.StateStore.SetCondition.Unconditional
  id: Unconditional
  parent: Azure.Iot.Operations.Services.StateStore.SetCondition
  langs:
  - csharp
  - vb
  name: Unconditional
  nameWithType: SetCondition.Unconditional
  fullName: Azure.Iot.Operations.Services.StateStore.SetCondition.Unconditional
  type: Field
  source:
    remote:
      path: dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
      branch: docfx
      repo: https://github.com/ryanwinterms/iot-operations-sdks
    id: Unconditional
    path: ../../dotnet/src/Azure.Iot.Operations.Services/StateStore/SetCondition.cs
    startLine: 19
  assemblies:
  - Azure.Iot.Operations.Services
  namespace: Azure.Iot.Operations.Services.StateStore
  summary: >-
    The set operation will execute regardless of if the key exists already and regardless of the value

    of this key in the State Store.
  example: []
  syntax:
    content: Unconditional = 2
    return:
      type: Azure.Iot.Operations.Services.StateStore.SetCondition
references:
- uid: Azure.Iot.Operations.Services.StateStore
  commentId: N:Azure.Iot.Operations.Services.StateStore
  href: Azure.html
  name: Azure.Iot.Operations.Services.StateStore
  nameWithType: Azure.Iot.Operations.Services.StateStore
  fullName: Azure.Iot.Operations.Services.StateStore
  spec.csharp:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Services
    name: Services
    href: Azure.Iot.Operations.Services.html
  - name: .
  - uid: Azure.Iot.Operations.Services.StateStore
    name: StateStore
    href: Azure.Iot.Operations.Services.StateStore.html
  spec.vb:
  - uid: Azure
    name: Azure
    href: Azure.html
  - name: .
  - uid: Azure.Iot
    name: Iot
    href: Azure.Iot.html
  - name: .
  - uid: Azure.Iot.Operations
    name: Operations
    href: Azure.Iot.Operations.html
  - name: .
  - uid: Azure.Iot.Operations.Services
    name: Services
    href: Azure.Iot.Operations.Services.html
  - name: .
  - uid: Azure.Iot.Operations.Services.StateStore
    name: StateStore
    href: Azure.Iot.Operations.Services.StateStore.html
- uid: Azure.Iot.Operations.Services.StateStore.SetCondition
  commentId: T:Azure.Iot.Operations.Services.StateStore.SetCondition
  parent: Azure.Iot.Operations.Services.StateStore
  href: Azure.Iot.Operations.Services.StateStore.SetCondition.html
  name: SetCondition
  nameWithType: SetCondition
  fullName: Azure.Iot.Operations.Services.StateStore.SetCondition
