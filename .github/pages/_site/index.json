{
  "api/Azure.Iot.Operations.Mqtt.MqttConnectingFailedException.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.MqttConnectingFailedException.html",
    "title": "Class MqttConnectingFailedException | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttConnectingFailedException Namespace Azure.Iot.Operations.Mqtt Assembly Azure.Iot.Operations.Mqtt.dll public sealed class MqttConnectingFailedException : Exception, ISerializable Inheritance object Exception MqttConnectingFailedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Constructors MqttConnectingFailedException(string, MqttClientConnectResult) public MqttConnectingFailedException(string message, MqttClientConnectResult connectResult) Parameters message string connectResult MqttClientConnectResult Properties Result public MqttClientConnectResult Result { get; } Property Value MqttClientConnectResult ResultCode public MqttClientConnectResultCode ResultCode { get; } Property Value MqttClientConnectResultCode"
  },
  "api/Azure.Iot.Operations.Mqtt.MqttNetTraceLogger.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.MqttNetTraceLogger.html",
    "title": "Class MqttNetTraceLogger | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttNetTraceLogger Namespace Azure.Iot.Operations.Mqtt Assembly Azure.Iot.Operations.Mqtt.dll public class MqttNetTraceLogger Inheritance object MqttNetTraceLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTraceLogger() public static MqttNetEventLogger CreateTraceLogger() Returns MqttNetEventLogger"
  },
  "api/Azure.Iot.Operations.Mqtt.OrderedAckMqttClient.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.OrderedAckMqttClient.html",
    "title": "Class OrderedAckMqttClient | Azure IoT Operations .NET SDK",
    "keywords": "Class OrderedAckMqttClient Namespace Azure.Iot.Operations.Mqtt Assembly Azure.Iot.Operations.Mqtt.dll A simple pass-through implementation of the IMqttPubSubClient interface that uses MQTTNet as the underlying MQTT client. public class OrderedAckMqttClient : IMqttClient, IMqttPubSubClient, IAsyncDisposable Inheritance object OrderedAckMqttClient Implements IMqttClient IMqttPubSubClient IAsyncDisposable Derived MqttSessionClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This client has no built-in retry logic or connection handling. It does add ACK ordering support, though. Constructors OrderedAckMqttClient(IMqttClient) public OrderedAckMqttClient(IMqttClient mqttNetClient) Parameters mqttNetClient IMqttClient Properties ClientId Returns the client Id used by this client. public string? ClientId { get; } Property Value string Remarks If a client Id has not been assigned yet by the user or by the broker, this value is null. IsConnected Get if this MQTT client is currently connected or not. public bool IsConnected { get; } Property Value bool ProtocolVersion The version of the MQTT protocol that this client is using. public MqttProtocolVersion ProtocolVersion { get; } Property Value MqttProtocolVersion UnderlyingMqttClient The MQTT client used by this client to handle all MQTT operations. public IMqttClient UnderlyingMqttClient { get; } Property Value IMqttClient Methods ConnectAsync(MqttConnectionSettings, CancellationToken) Connect this client to the MQTT broker configured in the provided connection settings. public virtual Task<MqttClientConnectResult> ConnectAsync(MqttConnectionSettings settings, CancellationToken cancellationToken = default) Parameters settings MqttConnectionSettings The details about the MQTT broker to connect to. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientConnectResult> The CONNACK returned by the MQTT broker. ConnectAsync(MqttClientOptions, CancellationToken) Connect this client to the MQTT broker configured in the provided connection options. public virtual Task<MqttClientConnectResult> ConnectAsync(MqttClientOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientOptions The details about the MQTT broker to connect to. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientConnectResult> The CONNACK returned by the MQTT broker. DisconnectAsync(MqttClientDisconnectOptions?, CancellationToken) Disconnect this client from the MQTT broker. public virtual Task DisconnectAsync(MqttClientDisconnectOptions? options = null, CancellationToken cancellationToken = default) Parameters options MqttClientDisconnectOptions The optional parameters to include in the DISCONNECT request. cancellationToken CancellationToken Cancellation token. Returns Task DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public virtual ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public virtual ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask GetMaximumPacketSize() Get the maximum packet size that this client can send. public uint GetMaximumPacketSize() Returns uint The maximum packet size. PublishAsync(MqttApplicationMessage, CancellationToken) Publish a message to the MQTT broker. public virtual Task<MqttClientPublishResult> PublishAsync(MqttApplicationMessage applicationMessage, CancellationToken cancellationToken = default) Parameters applicationMessage MqttApplicationMessage The message to publish cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientPublishResult> The result of the publish. Remarks The behavior of publishing when the MQTT client is disconnected will vary depending on the implementation. ReconnectAsync(CancellationToken) Reconnect the client if it is disconnected. This will use the MqttClientOptions last provided when connecting. public Task ReconnectAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token. Returns Task SendExtendedAuthenticationExchangeDataAsync(MqttExtendedAuthenticationExchangeData, CancellationToken) Send additional authentication data. May be done on an active connection. public Task SendExtendedAuthenticationExchangeDataAsync(MqttExtendedAuthenticationExchangeData data, CancellationToken cancellationToken = default) Parameters data MqttExtendedAuthenticationExchangeData The authentication data to send. cancellationToken CancellationToken Cancellation token. Returns Task SubscribeAsync(MqttClientSubscribeOptions, CancellationToken) Subscribe to a topic on the MQTT broker. public virtual Task<MqttClientSubscribeResult> SubscribeAsync(MqttClientSubscribeOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientSubscribeOptions The details of the subscribe. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientSubscribeResult> The MQTT broker's response. Remarks The behavior of subscribing when the MQTT client is disconnected will vary depending on the implementation. UnsubscribeAsync(MqttClientUnsubscribeOptions, CancellationToken) Unsubscribe from a topic on the MQTT broker. public virtual Task<MqttClientUnsubscribeResult> UnsubscribeAsync(MqttClientUnsubscribeOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientUnsubscribeOptions The details of the unsubscribe request. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientUnsubscribeResult> The MQTT broker's response. Remarks The behavior of unsubscribing when the MQTT client is disconnected will vary depending on the implementation. Events ApplicationMessageReceivedAsync The event that notifies you when this client receives a PUBLISH from the MQTT broker. public event Func<MqttApplicationMessageReceivedEventArgs, Task>? ApplicationMessageReceivedAsync Event Type Func<MqttApplicationMessageReceivedEventArgs, Task> Remarks Users are responsible for acknowledging each received PUBLISH. Users must either automatically acknowledge the message by opting into automatically sending the acknowledgement by setting the AutoAcknowledge flag, or they can manually acknowledge the PUBLISH by invoking AcknowledgeAsync(CancellationToken). Note that this client sends PUBLISH acknowledgements in the order that the corresponding PUBLISH packets were received, so failing to acknowledge a PUBLISH will block sending acknowledgements for all subsequent PUBLISH packets received. ConnectedAsync An event that executes every time this client is connected. public event Func<MqttClientConnectedEventArgs, Task>? ConnectedAsync Event Type Func<MqttClientConnectedEventArgs, Task> DisconnectedAsync An event that executes every time this client is disconnected. public event Func<MqttClientDisconnectedEventArgs, Task>? DisconnectedAsync Event Type Func<MqttClientDisconnectedEventArgs, Task>"
  },
  "api/Azure.Iot.Operations.Mqtt.Session.Exceptions.MessagePurgedFromQueueException.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.Session.Exceptions.MessagePurgedFromQueueException.html",
    "title": "Class MessagePurgedFromQueueException | Azure IoT Operations .NET SDK",
    "keywords": "Class MessagePurgedFromQueueException Namespace Azure.Iot.Operations.Mqtt.Session.Exceptions Assembly Azure.Iot.Operations.Mqtt.dll Thrown by a MqttSessionClient.PublishAsync(MQTTnet.MqttApplicationMessage, CancellationToken) if the message is removed from the queue because the message queue size was reached. Depending on the PendingMessagesOverflowStrategy, this either signals that this message was the first message in the queue when the max queue size was reached or that this message tried to be enqueued when the queue was already at the max queue size. public class MessagePurgedFromQueueException : Exception, ISerializable Inheritance object Exception MessagePurgedFromQueueException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MessagePurgedFromQueueException(MqttPendingMessagesOverflowStrategy?) public MessagePurgedFromQueueException(MqttPendingMessagesOverflowStrategy? messagePurgeStrategy = null) Parameters messagePurgeStrategy MqttPendingMessagesOverflowStrategy? MessagePurgedFromQueueException(MqttPendingMessagesOverflowStrategy?, string?) public MessagePurgedFromQueueException(MqttPendingMessagesOverflowStrategy? messagePurgeStrategy, string? message) Parameters messagePurgeStrategy MqttPendingMessagesOverflowStrategy? message string MessagePurgedFromQueueException(MqttPendingMessagesOverflowStrategy?, string?, Exception?) public MessagePurgedFromQueueException(MqttPendingMessagesOverflowStrategy? messagePurgeStrategy, string? message, Exception? innerException) Parameters messagePurgeStrategy MqttPendingMessagesOverflowStrategy? message string innerException Exception Properties MessagePurgeStrategy public MqttPendingMessagesOverflowStrategy? MessagePurgeStrategy { get; } Property Value MqttPendingMessagesOverflowStrategy?"
  },
  "api/Azure.Iot.Operations.Mqtt.Session.Exceptions.MqttSessionExpiredException.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.Session.Exceptions.MqttSessionExpiredException.html",
    "title": "Class MqttSessionExpiredException | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttSessionExpiredException Namespace Azure.Iot.Operations.Mqtt.Session.Exceptions Assembly Azure.Iot.Operations.Mqtt.dll This exception is thrown when an MQTT session could not be recovered by the client before it expired on the broker. public class MqttSessionExpiredException : Exception, ISerializable Inheritance object Exception MqttSessionExpiredException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks The session expiry interval can be set when first establishing a connection. If the client loses connection to the broker and then that interval passes without the client successfully reconnecting, then the broker will discard the session. Upon a successful reconnection after this happens, this exception will be given by IMqttSessionClient.DisconnectedAsync. To avoid this exception, longer values of the session expiry interval are recommended. Constructors MqttSessionExpiredException() public MqttSessionExpiredException() MqttSessionExpiredException(string?) public MqttSessionExpiredException(string? message) Parameters message string MqttSessionExpiredException(string?, Exception?) public MqttSessionExpiredException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Azure.Iot.Operations.Mqtt.Session.Exceptions.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.Session.Exceptions.html",
    "title": "Namespace Azure.Iot.Operations.Mqtt.Session.Exceptions | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Mqtt.Session.Exceptions Classes MessagePurgedFromQueueException Thrown by a MqttSessionClient.PublishAsync(MQTTnet.MqttApplicationMessage, CancellationToken) if the message is removed from the queue because the message queue size was reached. Depending on the PendingMessagesOverflowStrategy, this either signals that this message was the first message in the queue when the max queue size was reached or that this message tried to be enqueued when the queue was already at the max queue size. MqttSessionExpiredException This exception is thrown when an MQTT session could not be recovered by the client before it expired on the broker."
  },
  "api/Azure.Iot.Operations.Mqtt.Session.MqttSessionClient.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.Session.MqttSessionClient.html",
    "title": "Class MqttSessionClient | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttSessionClient Namespace Azure.Iot.Operations.Mqtt.Session Assembly Azure.Iot.Operations.Mqtt.dll public class MqttSessionClient : OrderedAckMqttClient, IMqttClient, IMqttPubSubClient, IAsyncDisposable Inheritance object OrderedAckMqttClient MqttSessionClient Implements IMqttClient IMqttPubSubClient IAsyncDisposable Inherited Members OrderedAckMqttClient.UnderlyingMqttClient OrderedAckMqttClient.ClientId OrderedAckMqttClient.ProtocolVersion OrderedAckMqttClient.ApplicationMessageReceivedAsync OrderedAckMqttClient.DisconnectedAsync OrderedAckMqttClient.ConnectedAsync OrderedAckMqttClient.GetMaximumPacketSize() OrderedAckMqttClient.ReconnectAsync(CancellationToken) OrderedAckMqttClient.IsConnected OrderedAckMqttClient.DisposeAsync(bool) OrderedAckMqttClient.SendExtendedAuthenticationExchangeDataAsync(MqttExtendedAuthenticationExchangeData, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttSessionClient(MqttSessionClientOptions?) Create a MQTT session client where the underlying MQTT client is created for you and the connection is maintained for you. public MqttSessionClient(MqttSessionClientOptions? sessionClientOptions = null) Parameters sessionClientOptions MqttSessionClientOptions The configurable options for this MQTT session client. Remarks When an MQTT session client is constructed with this constructor, it will automatically recover the connection and all previous subscriptions if it detects that the previous connection was lost. It will also enqueue publishes/subscribes/unsubscribes and send them when the connection is alive. An MQTT session client created with this constructor will only report connection loss and/or publish/subscribe/unsubscribe failures if they are deemed fatal or if the provided retry policy is exhausted. All transient failures will cause the retry policy to be checked, but won't cause the DisconnectedAsync event to fire. Methods ConnectAsync(MqttConnectionSettings, CancellationToken) Connect this client and start a clean MQTT session. Once connected, this client will automatically reconnect as needed and recover the MQTT session. public override Task<MqttClientConnectResult> ConnectAsync(MqttConnectionSettings settings, CancellationToken cancellationToken = default) Parameters settings MqttConnectionSettings The details about how to connect to the MQTT broker. cancellationToken CancellationToken The cancellation token. Returns Task<MqttClientConnectResult> The CONNACK received from the MQTT broker. Remarks This operation does not retry by default, but can be configured to retry. To do so, set the RetryOnFirstConnect flag and optionally configure the retry policy via ConnectionRetryPolicy. Exceptions InvalidOperationException If this method is called when the client is already managing the connection. ConnectAsync(MqttClientOptions, CancellationToken) Connect this client and start a clean MQTT session. Once connected, this client will automatically reconnect as needed and recover the MQTT session. public override Task<MqttClientConnectResult> ConnectAsync(MqttClientOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientOptions The details about how to connect to the MQTT broker. cancellationToken CancellationToken The cancellation token. Returns Task<MqttClientConnectResult> The CONNACK received from the MQTT broker. Remarks This operation does not retry by default, but can be configured to retry. To do so, set the RetryOnFirstConnect flag and optionally configure the retry policy via ConnectionRetryPolicy. Exceptions InvalidOperationException If this method is called when the client is already managing the connection. DisconnectAsync(MqttClientDisconnectOptions?, CancellationToken) Disconnect this client and end the MQTT session. public override Task DisconnectAsync(MqttClientDisconnectOptions? options = null, CancellationToken cancellationToken = default) Parameters options MqttClientDisconnectOptions The optional parameters that can be sent in the DISCONNECT packet to the MQTT broker. cancellationToken CancellationToken The cancellation token. Returns Task DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public override ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. PublishAsync(MqttApplicationMessage, CancellationToken) Publish an MQTT message to the MQTT broker. public override Task<MqttClientPublishResult> PublishAsync(MqttApplicationMessage applicationMessage, CancellationToken cancellationToken = default) Parameters applicationMessage MqttApplicationMessage The message to publish. cancellationToken CancellationToken The cancellation token. Returns Task<MqttClientPublishResult> The PUBACK received from the MQTT broker. Remarks If this operation is interrupted by a connection loss, this client will automatically re-send it once the client has recovered the connection. This method may be called even when this client is not connected. The request will be sent once the connection is established. SubscribeAsync(MqttClientSubscribeOptions, CancellationToken) Send a SUBSCRIBE request to the MQTT broker. public override Task<MqttClientSubscribeResult> SubscribeAsync(MqttClientSubscribeOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientSubscribeOptions The details of the subscribe request. cancellationToken CancellationToken The cancellation token. Returns Task<MqttClientSubscribeResult> The SUBACK received from the MQTT broker. Remarks If this operation is interrupted by a connection loss, this client will automatically re-send it once the client has recovered the connection. This method may be called even when this client is not connected. The request will be sent once the connection is established. UnsubscribeAsync(MqttClientUnsubscribeOptions, CancellationToken) Send a UNSUBSCRIBE request to the MQTT broker. public override Task<MqttClientUnsubscribeResult> UnsubscribeAsync(MqttClientUnsubscribeOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientUnsubscribeOptions The details of the unsubscribe request. cancellationToken CancellationToken The cancellation token. Returns Task<MqttClientUnsubscribeResult> The UNSUBACK received from the MQTT broker. Remarks If this operation is interrupted by a connection loss, this client will automatically re-send it once the client has recovered the connection. This method may be called even when this client is not connected. The request will be sent once the connection is established. Events SessionLostAsync public event Func<MqttClientDisconnectedEventArgs, Task>? SessionLostAsync Event Type Func<MqttClientDisconnectedEventArgs, Task>"
  },
  "api/Azure.Iot.Operations.Mqtt.Session.MqttSessionClientOptions.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.Session.MqttSessionClientOptions.html",
    "title": "Class MqttSessionClientOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttSessionClientOptions Namespace Azure.Iot.Operations.Mqtt.Session Assembly Azure.Iot.Operations.Mqtt.dll The optional parameters that can be specified when creating a session client. public class MqttSessionClientOptions Inheritance object MqttSessionClientOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectionAttemptTimeout How long to wait for a single connection attempt to finish before abandoning it. public TimeSpan ConnectionAttemptTimeout { get; set; } Property Value TimeSpan Remarks This value allows for you to configure the connection attempt timeout for both initial connection and reconnection scenarios. Note that this value is ignored for the initial connect attempt if RetryOnFirstConnect is false. ConnectionRetryPolicy The retry policy that the session client will consult each time it attempts to reconnect and/or each time it attempts the initial connect. public IRetryPolicy ConnectionRetryPolicy { get; set; } Property Value IRetryPolicy Remarks By default, this is an ExponentialBackoffRetryPolicy that runs for around 4 minutes. Users may implement custom retry policies instead if they prefer to use a different retry algorithm. This value cannot be null. EnableMqttLogging True if you want the session client to enable MQTT-level logs. False if you do not want these logs. public bool EnableMqttLogging { get; set; } Property Value bool MaxPendingMessages The maximum number of publishes, subscribes, or unsubscribes that will be allowed to be enqueued locally at a time. public uint MaxPendingMessages { get; set; } Property Value uint Remarks Publishes, subscribes and unsubscribes all occupy separate queues, so this max value is for each of those queues.. PendingMessagesOverflowStrategy The strategy for the session client to use when deciding how to handle enqueueing a message when the queue is already full. public MqttPendingMessagesOverflowStrategy PendingMessagesOverflowStrategy { get; set; } Property Value MqttPendingMessagesOverflowStrategy RetryOnFirstConnect If true, this client will use the same retry policy when first connecting as it would during a reconnection. If false, this client will only make one attempt to connect when calling MqttSessionClient.ConnectAsync(MQTTnet.Client.MqttClientOptions, CancellationToken). public bool RetryOnFirstConnect { get; set; } Property Value bool Remarks Generally, this field should be set to true since you can expect mostly the same set of errors when initially connecting compared to when reconnecting. However, there are some exceptions that you are likely to see when initially connecting if you have a misconfiguration somewhere. This value is false by default so that these configuration errors are easier to catch."
  },
  "api/Azure.Iot.Operations.Mqtt.Session.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.Session.html",
    "title": "Namespace Azure.Iot.Operations.Mqtt.Session | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Mqtt.Session Namespaces Azure.Iot.Operations.Mqtt.Session.Exceptions Classes MqttSessionClient MqttSessionClientOptions The optional parameters that can be specified when creating a session client."
  },
  "api/Azure.Iot.Operations.Mqtt.html": {
    "href": "api/Azure.Iot.Operations.Mqtt.html",
    "title": "Namespace Azure.Iot.Operations.Mqtt | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Mqtt Namespaces Azure.Iot.Operations.Mqtt.Session Classes MqttConnectingFailedException MqttNetTraceLogger OrderedAckMqttClient A simple pass-through implementation of the IMqttPubSubClient interface that uses MQTTNet as the underlying MQTT client."
  },
  "api/Azure.Iot.Operations.Protocol.AkriMqttErrorKind.html": {
    "href": "api/Azure.Iot.Operations.Protocol.AkriMqttErrorKind.html",
    "title": "Enum AkriMqttErrorKind | Azure IoT Operations .NET SDK",
    "keywords": "Enum AkriMqttErrorKind Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public enum AkriMqttErrorKind Fields ArgumentInvalid = 1 A method was called with an invalid argument value. Cancellation = 8 An operation was canceled. ConfigurationInvalid = 0 A class property, configuration file, or environment variable has an invalid value. ExecutionException = 10 The command processor encountered an error while executing the command. HeaderInvalid = 3 An MQTT header property is has an invalid value. HeaderMissing = 2 A required MQTT header property is missing. InternalLogicError = 6 The client or service observed a condition that was thought to be impossible. InvocationException = 9 The command processor identified an error in the request. MqttError = 12 The MQTT communication encountered an error and failed. The exception message should be inspected for additional information. PayloadInvalid = 4 MQTT paylod cannot be deserialized. StateInvalid = 5 The current program state is invalid vis-a-vis the method that was called. Timeout = 7 An operation was aborted due to timeout. UnknownError = 11 The client or service caught an unexpected error from a dependent component. UnsupportedRequestVersion = 13 The request failed because the command executor did not support the protocol version specified by this request or this request specified a malformed protocol version. UnsupportedResponseVersion = 14 The request failed because the command executor's response to this request specified a protocol version not supported by this command invoker or specified a malformed protocol version."
  },
  "api/Azure.Iot.Operations.Protocol.AkriMqttException.html": {
    "href": "api/Azure.Iot.Operations.Protocol.AkriMqttException.html",
    "title": "Class AkriMqttException | Azure IoT Operations .NET SDK",
    "keywords": "Class AkriMqttException Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public class AkriMqttException : Exception, ISerializable Inheritance object Exception AkriMqttException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CommandName The name of a command relevant to the Azure.Iot.Operations.Protocol error being reported public string? CommandName { get; } Property Value string CorrelationId The correlation data used to connect a command response to a command request. public Guid? CorrelationId { get; } Property Value Guid? HeaderName The name of an MQTT header that is missing or has an invalid value public string? HeaderName { get; } Property Value string HeaderValue The value of an MQTT header that is invalid public string? HeaderValue { get; } Property Value string HttpStatusCode An HTTP status code received from a remote service that caused the Azure.Iot.Operations.Protocol error being reported public int? HttpStatusCode { get; } Property Value int? InApplication true if the error occurred in user-supplied code rather than the SDK or its dependent components public required bool InApplication { get; init; } Property Value bool IsRemote true if the error was detected by a remote component public required bool IsRemote { get; init; } Property Value bool IsShallow true if the error was identified immediately after the API was called, prior to any attempted network communication public required bool IsShallow { get; init; } Property Value bool Kind The specific kind of error that occurred public required AkriMqttErrorKind Kind { get; init; } Property Value AkriMqttErrorKind PropertyName The name of a method argument or a property in a class, configuration file, or environment variable that is missing or has an invalid value public string? PropertyName { get; } Property Value string PropertyValue The value of a method argument or a property in a class, configuration file, or environment variable that is invalid public object? PropertyValue { get; } Property Value object ProtocolVersion The protocol version that was not supported. Only provided if the error was either a UnsupportedRequestVersion kind or a UnsupportedResponseVersion kind. public string? ProtocolVersion { get; set; } Property Value string SupportedMajorProtocolVersions The list of supported protocol versions that can be used instead. Only provided if the error was either a UnsupportedRequestVersion kind or a UnsupportedResponseVersion kind. public int[]? SupportedMajorProtocolVersions { get; } Property Value int[] TimeoutName The name of a timeout condition that elapsed public string? TimeoutName { get; } Property Value string TimeoutValue The duration of a timeout condition that elapsed public TimeSpan? TimeoutValue { get; } Property Value TimeSpan? Methods GetPayloadInvalidException() public static AkriMqttException GetPayloadInvalidException() Returns AkriMqttException"
  },
  "api/Azure.Iot.Operations.Protocol.AkriSystemProperties.html": {
    "href": "api/Azure.Iot.Operations.Protocol.AkriSystemProperties.html",
    "title": "Class AkriSystemProperties | Azure IoT Operations .NET SDK",
    "keywords": "Class AkriSystemProperties Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll Static class that defines string values for MQTT User Properties. public static class AkriSystemProperties Inheritance object AkriSystemProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CommandInvokerId User Property indicating the MQTT Client ID of a Command invoker. public const string CommandInvokerId = \"__invId\" Field Value string IsApplicationError User property indicating if a non-200 Status is an application-level error. public const string IsApplicationError = \"__apErr\" Field Value string ReservedPrefix A reserved prefix for all user properties known to Azure.Iot.Operations.Protocol; custom properties from user code may not start with this prefix. public const string ReservedPrefix = \"__\" Field Value string Status User Property indicating an HTTP status code. public const string Status = \"__stat\" Field Value string StatusMessage User Property indicating a human-readable status message; used when Status != 200 (OK). public const string StatusMessage = \"__stMsg\" Field Value string TelemetrySenderId User Property indicating the MQTT Client ID of a Telemetry sender. public const string TelemetrySenderId = \"__sndId\" Field Value string"
  },
  "api/Azure.Iot.Operations.Protocol.CommandBehaviorAttribute.html": {
    "href": "api/Azure.Iot.Operations.Protocol.CommandBehaviorAttribute.html",
    "title": "Class CommandBehaviorAttribute | Azure IoT Operations .NET SDK",
    "keywords": "Class CommandBehaviorAttribute Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll [AttributeUsage(AttributeTargets.Class)] public class CommandBehaviorAttribute : Attribute Inheritance object Attribute CommandBehaviorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandBehaviorAttribute(bool, string) public CommandBehaviorAttribute(bool idempotent = false, string cacheTtl = \"PT0H0M0S\") Parameters idempotent bool cacheTtl string Properties CacheTtl public string CacheTtl { get; set; } Property Value string IsIdempotent public bool IsIdempotent { get; set; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Protocol.CommandTopicAttribute.html": {
    "href": "api/Azure.Iot.Operations.Protocol.CommandTopicAttribute.html",
    "title": "Class CommandTopicAttribute | Azure IoT Operations .NET SDK",
    "keywords": "Class CommandTopicAttribute Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll [AttributeUsage(AttributeTargets.Class)] public class CommandTopicAttribute : Attribute Inheritance object Attribute CommandTopicAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandTopicAttribute(string) public CommandTopicAttribute(string topic) Parameters topic string Properties RequestTopic public string RequestTopic { get; set; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Connection.MqttConnectionSettings.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Connection.MqttConnectionSettings.html",
    "title": "Class MqttConnectionSettings | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttConnectionSettings Namespace Azure.Iot.Operations.Protocol.Connection Assembly Azure.Iot.Operations.Protocol.dll public class MqttConnectionSettings Inheritance object MqttConnectionSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MqttConnectionSettings(IDictionary<string, string>, bool, bool) protected MqttConnectionSettings(IDictionary<string, string> connectionSettings, bool validateOptionalSettings, bool isSettingFromConnStr = false) Parameters connectionSettings IDictionary<string, string> validateOptionalSettings bool isSettingFromConnStr bool MqttConnectionSettings(string) public MqttConnectionSettings(string hostname) Parameters hostname string Properties CaFile public string? CaFile { get; set; } Property Value string CertFile public string? CertFile { get; set; } Property Value string CleanStart public bool CleanStart { get; set; } Property Value bool ClientCertificate public X509Certificate2? ClientCertificate { get; set; } Property Value X509Certificate2 ClientId public string? ClientId { get; set; } Property Value string HostName public string HostName { get; set; } Property Value string KeepAlive public TimeSpan KeepAlive { get; set; } Property Value TimeSpan KeyFile public string? KeyFile { get; set; } Property Value string KeyPasswordFile public string? KeyPasswordFile { get; set; } Property Value string ModelId public string? ModelId { get; set; } Property Value string PasswordFile public string? PasswordFile { get; set; } Property Value string SatAuthFile public string? SatAuthFile { get; set; } Property Value string SessionExpiry public TimeSpan SessionExpiry { get; set; } Property Value TimeSpan TcpPort public int TcpPort { get; set; } Property Value int TrustChain public X509Certificate2Collection? TrustChain { get; set; } Property Value X509Certificate2Collection UseTls public bool UseTls { get; set; } Property Value bool Username public string? Username { get; set; } Property Value string Methods FromConnectionString(string) public static MqttConnectionSettings FromConnectionString(string connectionString) Parameters connectionString string Returns MqttConnectionSettings FromEnvVars() public static MqttConnectionSettings FromEnvVars() Returns MqttConnectionSettings FromFileMount() This method is used to read the broker connection configuration files from CONFIGMAP_MOUNT_PATH. Files used: MQ_TARGET_ADDRESS, MQ_USE_TLS, MQ_SAT_MOUNT_PATH, MQ_TLS_CACERT_MOUNT_PATH MqttConnectionSettings are created from these settings to construct a session client. This is intended to integrate MQ connection information for Akri connectors and should only be used in the context of an operator deployment. public static MqttConnectionSettings FromFileMount() Returns MqttConnectionSettings GetBooleanValue(IDictionary<string, string>, string, bool) protected static bool GetBooleanValue(IDictionary<string, string> dict, string propertyName, bool defaultValue = false) Parameters dict IDictionary<string, string> propertyName string defaultValue bool Returns bool GetPositiveIntValueOrDefault(IDictionary<string, string>, string, int) protected static int GetPositiveIntValueOrDefault(IDictionary<string, string> dict, string propertyName, int defaultValue = 0) Parameters dict IDictionary<string, string> propertyName string defaultValue int Returns int GetStringValue(IDictionary<string, string>, string) protected static string? GetStringValue(IDictionary<string, string> dict, string propertyName) Parameters dict IDictionary<string, string> propertyName string Returns string GetTimeSpanValue(IDictionary<string, string>, string, TimeSpan) protected static TimeSpan GetTimeSpanValue(IDictionary<string, string> dict, string propertyName, TimeSpan defaultValue = default) Parameters dict IDictionary<string, string> propertyName string defaultValue TimeSpan Returns TimeSpan ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. ValidateMqttSettings(bool) protected void ValidateMqttSettings(bool validateOptionalSettings) Parameters validateOptionalSettings bool"
  },
  "api/Azure.Iot.Operations.Protocol.Connection.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Connection.html",
    "title": "Namespace Azure.Iot.Operations.Protocol.Connection | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Protocol.Connection Classes MqttConnectionSettings"
  },
  "api/Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Events.MqttApplicationMessageReceivedEventArgs.html",
    "title": "Class MqttApplicationMessageReceivedEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttApplicationMessageReceivedEventArgs Namespace Azure.Iot.Operations.Protocol.Events Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttApplicationMessageReceivedEventArgs : EventArgs Inheritance object EventArgs MqttApplicationMessageReceivedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttApplicationMessageReceivedEventArgs(string, MqttApplicationMessage, ushort, Func<MqttApplicationMessageReceivedEventArgs, CancellationToken, Task>) public MqttApplicationMessageReceivedEventArgs(string clientId, MqttApplicationMessage applicationMessage, ushort packetId, Func<MqttApplicationMessageReceivedEventArgs, CancellationToken, Task> acknowledgeHandler) Parameters clientId string applicationMessage MqttApplicationMessage packetId ushort acknowledgeHandler Func<MqttApplicationMessageReceivedEventArgs, CancellationToken, Task> Properties ApplicationMessage public MqttApplicationMessage ApplicationMessage { get; } Property Value MqttApplicationMessage AutoAcknowledge Gets or sets whether the library should send MQTT ACK packets automatically if required. public bool AutoAcknowledge { get; set; } Property Value bool ClientId Gets the client identifier. Hint: This identifier needs to be unique over all used clients / devices on the broker to avoid connection issues. public string ClientId { get; } Property Value string IsHandled Gets or sets whether this message was handled. This value can be used in user code for custom control flow. public bool IsHandled { get; set; } Property Value bool PacketIdentifier Gets the identifier of the MQTT packet public ushort PacketIdentifier { get; set; } Property Value ushort ReasonCode Gets or sets the reason code which will be sent to the server. public MqttApplicationMessageReceivedReasonCode ReasonCode { get; set; } Property Value MqttApplicationMessageReceivedReasonCode ResponseReasonString Gets or sets the reason string which will be sent to the server in the ACK packet. public string? ResponseReasonString { get; set; } Property Value string ResponseUserProperties Gets or sets the user properties which will be sent to the server in the ACK packet etc. public List<MqttUserProperty> ResponseUserProperties { get; } Property Value List<MqttUserProperty> Tag public object? Tag { get; set; } Property Value object Methods AcknowledgeAsync(CancellationToken) public Task AcknowledgeAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/Azure.Iot.Operations.Protocol.Events.MqttClientConnectedEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Events.MqttClientConnectedEventArgs.html",
    "title": "Class MqttClientConnectedEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientConnectedEventArgs Namespace Azure.Iot.Operations.Protocol.Events Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientConnectedEventArgs : EventArgs Inheritance object EventArgs MqttClientConnectedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientConnectedEventArgs(MqttClientConnectResult) public MqttClientConnectedEventArgs(MqttClientConnectResult connectResult) Parameters connectResult MqttClientConnectResult Properties ConnectResult Gets the authentication result. MQTT 5.0.0+ feature. public MqttClientConnectResult ConnectResult { get; } Property Value MqttClientConnectResult"
  },
  "api/Azure.Iot.Operations.Protocol.Events.MqttClientDisconnectedEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Events.MqttClientDisconnectedEventArgs.html",
    "title": "Class MqttClientDisconnectedEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientDisconnectedEventArgs Namespace Azure.Iot.Operations.Protocol.Events Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientDisconnectedEventArgs : EventArgs Inheritance object EventArgs MqttClientDisconnectedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientDisconnectedEventArgs(bool, MqttClientConnectResult?, MqttClientDisconnectReason, string?, List<MqttUserProperty>?, Exception?) public MqttClientDisconnectedEventArgs(bool clientWasConnected, MqttClientConnectResult? connectResult, MqttClientDisconnectReason reason, string? reasonString, List<MqttUserProperty>? userProperties, Exception? exception) Parameters clientWasConnected bool connectResult MqttClientConnectResult reason MqttClientDisconnectReason reasonString string userProperties List<MqttUserProperty> exception Exception Properties ClientWasConnected public bool ClientWasConnected { get; } Property Value bool ConnectResult Gets the authentication result. MQTT 5.0.0+ feature. public MqttClientConnectResult? ConnectResult { get; } Property Value MqttClientConnectResult Exception public Exception? Exception { get; } Property Value Exception Reason Gets or sets the reason. MQTT 5.0.0+ feature. public MqttClientDisconnectReason Reason { get; } Property Value MqttClientDisconnectReason ReasonString public string? ReasonString { get; } Property Value string UserProperties public List<MqttUserProperty>? UserProperties { get; } Property Value List<MqttUserProperty>"
  },
  "api/Azure.Iot.Operations.Protocol.Events.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Events.html",
    "title": "Namespace Azure.Iot.Operations.Protocol.Events | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Protocol.Events Classes MqttApplicationMessageReceivedEventArgs MqttClientConnectedEventArgs MqttClientDisconnectedEventArgs"
  },
  "api/Azure.Iot.Operations.Protocol.GuidExtensions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.GuidExtensions.html",
    "title": "Class GuidExtensions | Azure IoT Operations .NET SDK",
    "keywords": "Class GuidExtensions Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public static class GuidExtensions Inheritance object GuidExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TryParseBytes(byte[], out Guid?) public static bool TryParseBytes(byte[] bytes, out Guid? result) Parameters bytes byte[] result Guid? Returns bool"
  },
  "api/Azure.Iot.Operations.Protocol.HybridLogicalClock.html": {
    "href": "api/Azure.Iot.Operations.Protocol.HybridLogicalClock.html",
    "title": "Class HybridLogicalClock | Azure IoT Operations .NET SDK",
    "keywords": "Class HybridLogicalClock Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public class HybridLogicalClock Inheritance object HybridLogicalClock Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HybridLogicalClock(HybridLogicalClock) Copy construct a HybridLogicalClock from another HybridLogicalClock public HybridLogicalClock(HybridLogicalClock other) Parameters other HybridLogicalClock HybridLogicalClock(DateTime?, int, string?) Construct a HybridLogicalClock instance. public HybridLogicalClock(DateTime? timestamp = null, int counter = 0, string? nodeId = null) Parameters timestamp DateTime? The timestamp for this clock. This timestamp will be rounded down to the nearest millisecond. counter int The counter for this clock. nodeId string The node identifier for this clock. Properties Counter The counter for this hybrid logical clock. public int Counter { get; set; } Property Value int Remarks This counter is used in conjunction with the Timestamp to coordinate ordering of events within a distributed system where each device may have slightly different system clock times. NodeId A unique identifier for this node. public string NodeId { get; } Property Value string Remarks This is only used to break ties where both the counter and timestamp of two competing nodes are exactly the same. Timestamp The current timestamp for this hybrid logical clock. public DateTime Timestamp { get; set; } Property Value DateTime Remarks This value is used in conjunction with Counter to coordinate ordering of events within a distributed system where each device may have slightly different system clock times. This timestamp only allows for millisecond-level precision. Any provided value will automatically be rounded down to the nearest millisecond. Methods CompareTo(HybridLogicalClock) public int CompareTo(HybridLogicalClock other) Parameters other HybridLogicalClock Returns int Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetInstance() Get a HybridLogicalClock instance. public static HybridLogicalClock GetInstance() Returns HybridLogicalClock The single instantiation of HybridLogicalClock for the process. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Update(HybridLogicalClock?, TimeSpan?) Update this clock with details provided by another clock. public void Update(HybridLogicalClock? other = null, TimeSpan? maxClockDrift = null) Parameters other HybridLogicalClock The other clock. maxClockDrift TimeSpan? The maximum allowed clock drift. Exceptions AkriMqttException If the other clock has the same node Id, if the counter on this clock overflows, or if clock skew that exceeds the provided maxClockDrift is detected."
  },
  "api/Azure.Iot.Operations.Protocol.HybridLogicalClockException.html": {
    "href": "api/Azure.Iot.Operations.Protocol.HybridLogicalClockException.html",
    "title": "Class HybridLogicalClockException | Azure IoT Operations .NET SDK",
    "keywords": "Class HybridLogicalClockException Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll The exception type that is thrown when updating a HybridLogicalClock if an error occurs. public class HybridLogicalClockException : Exception, ISerializable Inheritance object Exception HybridLogicalClockException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HybridLogicalClockException() public HybridLogicalClockException() HybridLogicalClockException(string) public HybridLogicalClockException(string message) Parameters message string"
  },
  "api/Azure.Iot.Operations.Protocol.IDelayableQueueItem.html": {
    "href": "api/Azure.Iot.Operations.Protocol.IDelayableQueueItem.html",
    "title": "Interface IDelayableQueueItem | Azure IoT Operations .NET SDK",
    "keywords": "Interface IDelayableQueueItem Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Mqtt.dll The base interface for all elements used in a BlockingConcurrentDelayableQueue<T>. public interface IDelayableQueueItem Methods IsReady() Check if this queue item is ready to be dequeued. bool IsReady() Returns bool True if the queue item is ready to be dequeued. MarkAsReady() Mark this queue item as ready to be dequeued. void MarkAsReady()"
  },
  "api/Azure.Iot.Operations.Protocol.IMqttClient.html": {
    "href": "api/Azure.Iot.Operations.Protocol.IMqttClient.html",
    "title": "Interface IMqttClient | Azure IoT Operations .NET SDK",
    "keywords": "Interface IMqttClient Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll An MQTT client interface that allows for connection management as well as publishing, subscribing, and unsubscribing. public interface IMqttClient : IMqttPubSubClient, IAsyncDisposable Inherited Members IMqttPubSubClient.ApplicationMessageReceivedAsync IMqttPubSubClient.PublishAsync(MqttApplicationMessage, CancellationToken) IMqttPubSubClient.SubscribeAsync(MqttClientSubscribeOptions, CancellationToken) IMqttPubSubClient.UnsubscribeAsync(MqttClientUnsubscribeOptions, CancellationToken) IMqttPubSubClient.ClientId IMqttPubSubClient.ProtocolVersion IMqttPubSubClient.DisposeAsync(bool) IAsyncDisposable.DisposeAsync() Properties IsConnected Get if this MQTT client is currently connected or not. bool IsConnected { get; } Property Value bool Methods ConnectAsync(MqttConnectionSettings, CancellationToken) Connect this client to the MQTT broker configured in the provided connection settings. Task<MqttClientConnectResult> ConnectAsync(MqttConnectionSettings settings, CancellationToken cancellationToken = default) Parameters settings MqttConnectionSettings The details about the MQTT broker to connect to. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientConnectResult> The CONNACK returned by the MQTT broker. ConnectAsync(MqttClientOptions, CancellationToken) Connect this client to the MQTT broker configured in the provided connection options. Task<MqttClientConnectResult> ConnectAsync(MqttClientOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientOptions The details about the MQTT broker to connect to. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientConnectResult> The CONNACK returned by the MQTT broker. DisconnectAsync(MqttClientDisconnectOptions?, CancellationToken) Disconnect this client from the MQTT broker. Task DisconnectAsync(MqttClientDisconnectOptions? options = null, CancellationToken cancellationToken = default) Parameters options MqttClientDisconnectOptions The optional parameters to include in the DISCONNECT request. cancellationToken CancellationToken Cancellation token. Returns Task ReconnectAsync(CancellationToken) Reconnect the client if it is disconnected. This will use the MqttClientOptions last provided when connecting. Task ReconnectAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token. Returns Task SendExtendedAuthenticationExchangeDataAsync(MqttExtendedAuthenticationExchangeData, CancellationToken) Send additional authentication data. May be done on an active connection. Task SendExtendedAuthenticationExchangeDataAsync(MqttExtendedAuthenticationExchangeData data, CancellationToken cancellationToken = default) Parameters data MqttExtendedAuthenticationExchangeData The authentication data to send. cancellationToken CancellationToken Cancellation token. Returns Task Events ConnectedAsync An event that executes every time this client is connected. event Func<MqttClientConnectedEventArgs, Task>? ConnectedAsync Event Type Func<MqttClientConnectedEventArgs, Task> DisconnectedAsync An event that executes every time this client is disconnected. event Func<MqttClientDisconnectedEventArgs, Task>? DisconnectedAsync Event Type Func<MqttClientDisconnectedEventArgs, Task>"
  },
  "api/Azure.Iot.Operations.Protocol.IMqttPubSubClient.html": {
    "href": "api/Azure.Iot.Operations.Protocol.IMqttPubSubClient.html",
    "title": "Interface IMqttPubSubClient | Azure IoT Operations .NET SDK",
    "keywords": "Interface IMqttPubSubClient Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll An MQTT client interface that is intentionally limited to publish and subscribe operations. Implementations of this interface may provide connect/disconnect functions and may or may not include retry logic to handle when a publish or subscribe is attempted when disconnected. public interface IMqttPubSubClient : IAsyncDisposable Inherited Members IAsyncDisposable.DisposeAsync() Properties ClientId Returns the client Id used by this client. string? ClientId { get; } Property Value string Remarks If a client Id has not been assigned yet by the user or by the broker, this value is null. ProtocolVersion The version of the MQTT protocol that this client is using. MqttProtocolVersion ProtocolVersion { get; } Property Value MqttProtocolVersion Methods DisposeAsync(bool) ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask PublishAsync(MqttApplicationMessage, CancellationToken) Publish a message to the MQTT broker. Task<MqttClientPublishResult> PublishAsync(MqttApplicationMessage applicationMessage, CancellationToken cancellationToken = default) Parameters applicationMessage MqttApplicationMessage The message to publish cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientPublishResult> The result of the publish. Remarks The behavior of publishing when the MQTT client is disconnected will vary depending on the implementation. SubscribeAsync(MqttClientSubscribeOptions, CancellationToken) Subscribe to a topic on the MQTT broker. Task<MqttClientSubscribeResult> SubscribeAsync(MqttClientSubscribeOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientSubscribeOptions The details of the subscribe. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientSubscribeResult> The MQTT broker's response. Remarks The behavior of subscribing when the MQTT client is disconnected will vary depending on the implementation. UnsubscribeAsync(MqttClientUnsubscribeOptions, CancellationToken) Unsubscribe from a topic on the MQTT broker. Task<MqttClientUnsubscribeResult> UnsubscribeAsync(MqttClientUnsubscribeOptions options, CancellationToken cancellationToken = default) Parameters options MqttClientUnsubscribeOptions The details of the unsubscribe request. cancellationToken CancellationToken Cancellation token. Returns Task<MqttClientUnsubscribeResult> The MQTT broker's response. Remarks The behavior of unsubscribing when the MQTT client is disconnected will vary depending on the implementation. Events ApplicationMessageReceivedAsync The event that notifies you when this client receives a PUBLISH from the MQTT broker. event Func<MqttApplicationMessageReceivedEventArgs, Task>? ApplicationMessageReceivedAsync Event Type Func<MqttApplicationMessageReceivedEventArgs, Task> Remarks Users are responsible for acknowledging each received PUBLISH. Users must either automatically acknowledge the message by opting into automatically sending the acknowledgement by setting the AutoAcknowledge flag, or they can manually acknowledge the PUBLISH by invoking AcknowledgeAsync(CancellationToken). Note that this client sends PUBLISH acknowledgements in the order that the corresponding PUBLISH packets were received, so failing to acknowledge a PUBLISH will block sending acknowledgements for all subsequent PUBLISH packets received."
  },
  "api/Azure.Iot.Operations.Protocol.IPayloadSerializer.html": {
    "href": "api/Azure.Iot.Operations.Protocol.IPayloadSerializer.html",
    "title": "Interface IPayloadSerializer | Azure IoT Operations .NET SDK",
    "keywords": "Interface IPayloadSerializer Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public interface IPayloadSerializer Properties CharacterDataFormatIndicator int CharacterDataFormatIndicator { get; } Property Value int ContentType string ContentType { get; } Property Value string Methods FromBytes<T>(byte[]?) T FromBytes<T>(byte[]? payload) where T : class Parameters payload byte[] Returns T Type Parameters T ToBytes<T>(T?) byte[]? ToBytes<T>(T? payload) where T : class Parameters payload T Returns byte[] Type Parameters T"
  },
  "api/Azure.Iot.Operations.Protocol.IWallClock.html": {
    "href": "api/Azure.Iot.Operations.Protocol.IWallClock.html",
    "title": "Interface IWallClock | Azure IoT Operations .NET SDK",
    "keywords": "Interface IWallClock Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public interface IWallClock Properties UtcNow DateTime UtcNow { get; } Property Value DateTime Methods CreateCancellationTokenSource(TimeSpan) CancellationTokenSource CreateCancellationTokenSource(TimeSpan delay) Parameters delay TimeSpan Returns CancellationTokenSource WaitAsync<T>(Task<T>, TimeSpan, CancellationToken) Task<T> WaitAsync<T>(Task<T> task, TimeSpan timeout, CancellationToken cancellationToken) Parameters task Task<T> timeout TimeSpan cancellationToken CancellationToken Returns Task<T> Type Parameters T"
  },
  "api/Azure.Iot.Operations.Protocol.ModelIdAttribute.html": {
    "href": "api/Azure.Iot.Operations.Protocol.ModelIdAttribute.html",
    "title": "Class ModelIdAttribute | Azure IoT Operations .NET SDK",
    "keywords": "Class ModelIdAttribute Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll [AttributeUsage(AttributeTargets.Class)] public class ModelIdAttribute : Attribute Inheritance object Attribute ModelIdAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ModelIdAttribute(string) public ModelIdAttribute(string id) Parameters id string Properties Id public string Id { get; set; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.DefaultMqttCertificatesProvider.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.DefaultMqttCertificatesProvider.html",
    "title": "Class DefaultMqttCertificatesProvider | Azure IoT Operations .NET SDK",
    "keywords": "Class DefaultMqttCertificatesProvider Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class DefaultMqttCertificatesProvider : IMqttClientCertificatesProvider Inheritance object DefaultMqttCertificatesProvider Implements IMqttClientCertificatesProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultMqttCertificatesProvider(IEnumerable<X509Certificate>) public DefaultMqttCertificatesProvider(IEnumerable<X509Certificate> certificates) Parameters certificates IEnumerable<X509Certificate> DefaultMqttCertificatesProvider(X509Certificate2Collection) public DefaultMqttCertificatesProvider(X509Certificate2Collection certificates) Parameters certificates X509Certificate2Collection Methods GetCertificates() public X509CertificateCollection GetCertificates() Returns X509CertificateCollection"
  },
  "api/Azure.Iot.Operations.Protocol.Models.IMqttClientCertificatesProvider.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.IMqttClientCertificatesProvider.html",
    "title": "Interface IMqttClientCertificatesProvider | Azure IoT Operations .NET SDK",
    "keywords": "Interface IMqttClientCertificatesProvider Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public interface IMqttClientCertificatesProvider Methods GetCertificates() X509CertificateCollection GetCertificates() Returns X509CertificateCollection"
  },
  "api/Azure.Iot.Operations.Protocol.Models.IMqttClientChannelOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.IMqttClientChannelOptions.html",
    "title": "Interface IMqttClientChannelOptions | Azure IoT Operations .NET SDK",
    "keywords": "Interface IMqttClientChannelOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public interface IMqttClientChannelOptions Properties TlsOptions MqttClientTlsOptions TlsOptions { get; } Property Value MqttClientTlsOptions"
  },
  "api/Azure.Iot.Operations.Protocol.Models.IMqttClientCredentialsProvider.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.IMqttClientCredentialsProvider.html",
    "title": "Interface IMqttClientCredentialsProvider | Azure IoT Operations .NET SDK",
    "keywords": "Interface IMqttClientCredentialsProvider Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public interface IMqttClientCredentialsProvider Methods GetPassword(MqttClientOptions) byte[]? GetPassword(MqttClientOptions clientOptions) Parameters clientOptions MqttClientOptions Returns byte[] GetUserName(MqttClientOptions) string GetUserName(MqttClientOptions clientOptions) Parameters clientOptions MqttClientOptions Returns string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.IMqttExtendedAuthenticationExchangeHandler.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.IMqttExtendedAuthenticationExchangeHandler.html",
    "title": "Interface IMqttExtendedAuthenticationExchangeHandler | Azure IoT Operations .NET SDK",
    "keywords": "Interface IMqttExtendedAuthenticationExchangeHandler Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public interface IMqttExtendedAuthenticationExchangeHandler Methods HandleRequestAsync(MqttExtendedAuthenticationExchangeContext) Task HandleRequestAsync(MqttExtendedAuthenticationExchangeContext context) Parameters context MqttExtendedAuthenticationExchangeContext Returns Task"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttApplicationMessage.html",
    "title": "Class MqttApplicationMessage | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttApplicationMessage Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttApplicationMessage Inheritance object MqttApplicationMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttApplicationMessage(string, MqttQualityOfServiceLevel) public MqttApplicationMessage(string topic, MqttQualityOfServiceLevel qos = MqttQualityOfServiceLevel.AtLeastOnce) Parameters topic string qos MqttQualityOfServiceLevel Properties ContentType Gets or sets the content type. The content type must be a UTF-8 encoded string. The content type value identifies the kind of UTF-8 encoded payload. public string? ContentType { get; set; } Property Value string CorrelationData Gets or sets the correlation data. In order for the sender to know what sent message the response refers to it can also send correlation data with the published message. Hint: MQTT 5 feature only. public byte[]? CorrelationData { get; set; } Property Value byte[] Dup If the DUP flag is set to 0, it indicates that this is the first occasion that the Client or Server has attempted to send this MQTT PUBLISH Packet. If the DUP flag is set to 1, it indicates that this might be re-delivery of an earlier attempt to send the Packet. The DUP flag MUST be set to 1 by the Client or Server when it attempts to re-deliver a PUBLISH Packet [MQTT-3.3.1.-1]. The DUP flag MUST be set to 0 for all QoS 0 messages [MQTT-3.3.1-2]. public bool Dup { get; set; } Property Value bool MessageExpiryInterval Gets or sets the message expiry interval. A client can set the message expiry interval in seconds for each PUBLISH message individually. This interval defines the period of time that the broker stores the PUBLISH message for any matching subscribers that are not currently connected. When no message expiry interval is set, the broker must store the message for matching subscribers indefinitely. When the retained=true option is set on the PUBLISH message, this interval also defines how long a message is retained on a topic. Hint: MQTT 5 feature only. public uint MessageExpiryInterval { get; set; } Property Value uint PayloadFormatIndicator Gets or sets the payload format indicator. The payload format indicator is part of any MQTT packet that can contain a payload. The indicator is an optional byte value. A value of 0 indicates an “unspecified byte stream”. A value of 1 indicates a \"UTF-8 encoded payload\". If no payload format indicator is provided, the default value is 0. Hint: MQTT 5 feature only. public MqttPayloadFormatIndicator PayloadFormatIndicator { get; set; } Property Value MqttPayloadFormatIndicator PayloadSegment Get or set ArraySegment style of Payload. public ArraySegment<byte> PayloadSegment { get; set; } Property Value ArraySegment<byte> QualityOfServiceLevel Gets or sets the quality of service level. The Quality of Service (QoS) level is an agreement between the sender of a message and the receiver of a message that defines the guarantee of delivery for a specific message. There are 3 QoS levels in MQTT: At most once (0): Message gets delivered no time, once or multiple times. At least once (1): Message gets delivered at least once (one time or more often). Exactly once (2): Message gets delivered exactly once (It's ensured that the message only comes once). public MqttQualityOfServiceLevel QualityOfServiceLevel { get; set; } Property Value MqttQualityOfServiceLevel ResponseTopic Gets or sets the response topic. In MQTT 5 the ability to publish a response topic was added in the publish message which allows you to implement the request/response pattern between clients that is common in web applications. Hint: MQTT 5 feature only. public string? ResponseTopic { get; set; } Property Value string Retain Gets or sets a value indicating whether the message should be retained or not. A retained message is a normal MQTT message with the retained flag set to true. The broker stores the last retained message and the corresponding QoS for that topic. public bool Retain { get; set; } Property Value bool SubscriptionIdentifiers Gets or sets the subscription identifiers. The client can specify a subscription identifier when subscribing. The broker will establish and store the mapping relationship between this subscription and subscription identifier when successfully create or modify subscription. The broker will return the subscription identifier associated with this PUBLISH packet and the PUBLISH packet to the client when need to forward PUBLISH packets matching this subscription to this client. Hint: MQTT 5 feature only. public List<uint>? SubscriptionIdentifiers { get; set; } Property Value List<uint> Topic Gets or sets the MQTT topic. In MQTT, the word topic refers to an UTF-8 string that the broker uses to filter messages for each connected client. The topic consists of one or more topic levels. Each topic level is separated by a forward slash (topic level separator). public string Topic { get; set; } Property Value string TopicAlias Gets or sets the topic alias. Topic aliases were introduced are a mechanism for reducing the size of published packets by reducing the size of the topic field. A value of 0 indicates no topic alias is used. Hint: MQTT 5 feature only. public ushort TopicAlias { get; set; } Property Value ushort UserProperties Gets or sets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. Hint: MQTT 5 feature only. public List<MqttUserProperty>? UserProperties { get; set; } Property Value List<MqttUserProperty> Methods AddCloudEvents(CloudEvent) public void AddCloudEvents(CloudEvent md) Parameters md CloudEvent AddMetadata(OutgoingTelemetryMetadata) public void AddMetadata(OutgoingTelemetryMetadata md) Parameters md OutgoingTelemetryMetadata AddUserProperty(string, string) public void AddUserProperty(string key, string value) Parameters key string value string ConvertPayloadToString() public string? ConvertPayloadToString() Returns string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttApplicationMessageReceivedReasonCode.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttApplicationMessageReceivedReasonCode.html",
    "title": "Enum MqttApplicationMessageReceivedReasonCode | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttApplicationMessageReceivedReasonCode Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttApplicationMessageReceivedReasonCode Fields ImplementationSpecificError = 131 NoMatchingSubscribers = 16 NotAuthorized = 135 PacketIdentifierInUse = 145 PacketIdentifierNotFound = 146 PayloadFormatInvalid = 153 QuotaExceeded = 151 Success = 0 TopicNameInvalid = 144 UnspecifiedError = 128"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttAuthPacket.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttAuthPacket.html",
    "title": "Class MqttAuthPacket | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttAuthPacket Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttAuthPacket Inheritance object MqttAuthPacket Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationData public byte[]? AuthenticationData { get; set; } Property Value byte[] AuthenticationMethod public string? AuthenticationMethod { get; set; } Property Value string ReasonCode public MqttAuthenticateReasonCode ReasonCode { get; set; } Property Value MqttAuthenticateReasonCode ReasonString public string? ReasonString { get; set; } Property Value string UserProperties public List<MqttUserProperty>? UserProperties { get; set; } Property Value List<MqttUserProperty>"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttAuthenticateReasonCode.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttAuthenticateReasonCode.html",
    "title": "Enum MqttAuthenticateReasonCode | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttAuthenticateReasonCode Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttAuthenticateReasonCode Fields ContinueAuthentication = 24 ReAuthenticate = 25 Success = 0"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientCertificateSelectionEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientCertificateSelectionEventArgs.html",
    "title": "Class MqttClientCertificateSelectionEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientCertificateSelectionEventArgs Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientCertificateSelectionEventArgs : EventArgs Inheritance object EventArgs MqttClientCertificateSelectionEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientCertificateSelectionEventArgs(string, X509CertificateCollection, X509Certificate, string[], MqttClientTcpOptions) public MqttClientCertificateSelectionEventArgs(string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, string[] acceptableIssuers, MqttClientTcpOptions tcpOptions) Parameters targetHost string localCertificates X509CertificateCollection remoteCertificate X509Certificate acceptableIssuers string[] tcpOptions MqttClientTcpOptions Properties AcceptableIssuers public string[] AcceptableIssuers { get; } Property Value string[] LocalCertificates public X509CertificateCollection LocalCertificates { get; } Property Value X509CertificateCollection RemoteCertificate public X509Certificate RemoteCertificate { get; } Property Value X509Certificate TargetHost public string TargetHost { get; } Property Value string TcpOptions public MqttClientTcpOptions TcpOptions { get; } Property Value MqttClientTcpOptions"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientCertificateValidationEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientCertificateValidationEventArgs.html",
    "title": "Class MqttClientCertificateValidationEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientCertificateValidationEventArgs Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientCertificateValidationEventArgs : EventArgs Inheritance object EventArgs MqttClientCertificateValidationEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientCertificateValidationEventArgs(X509Certificate, X509Chain, SslPolicyErrors, IMqttClientChannelOptions) public MqttClientCertificateValidationEventArgs(X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors, IMqttClientChannelOptions clientOptions) Parameters certificate X509Certificate chain X509Chain sslPolicyErrors SslPolicyErrors clientOptions IMqttClientChannelOptions Properties Certificate public X509Certificate Certificate { get; } Property Value X509Certificate Chain public X509Chain Chain { get; } Property Value X509Chain ClientOptions public IMqttClientChannelOptions ClientOptions { get; } Property Value IMqttClientChannelOptions SslPolicyErrors public SslPolicyErrors SslPolicyErrors { get; } Property Value SslPolicyErrors"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientConnectResult.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientConnectResult.html",
    "title": "Class MqttClientConnectResult | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientConnectResult Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientConnectResult Inheritance object MqttClientConnectResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties AssignedClientIdentifier Gets the client identifier which was chosen by the server. MQTTv5 only. public string? AssignedClientIdentifier { get; init; } Property Value string AuthenticationData Gets the authentication data. MQTTv5 only. public byte[]? AuthenticationData { get; init; } Property Value byte[] AuthenticationMethod Gets the authentication method. MQTTv5 only. public string? AuthenticationMethod { get; init; } Property Value string IsSessionPresent Gets a value indicating whether a session was already available or not. MQTTv5 only. public bool IsSessionPresent { get; init; } Property Value bool MaximumPacketSize public uint? MaximumPacketSize { get; init; } Property Value uint? MaximumQoS Gets the maximum QoS which is supported by the server. MQTTv5 only. public MqttQualityOfServiceLevel MaximumQoS { get; init; } Property Value MqttQualityOfServiceLevel ReasonString Gets the reason string. MQTTv5 only. public string? ReasonString { get; init; } Property Value string ReceiveMaximum public ushort? ReceiveMaximum { get; init; } Property Value ushort? ResponseInformation Gets the response information. MQTTv5 only. public string? ResponseInformation { get; init; } Property Value string ResultCode Gets the result code. MQTTv5 only. public MqttClientConnectResultCode ResultCode { get; init; } Property Value MqttClientConnectResultCode RetainAvailable Gets whether the server supports retained messages. MQTTv5 only. public bool RetainAvailable { get; init; } Property Value bool ServerKeepAlive MQTTv5 only. Gets the keep alive interval which was chosen by the server instead of the keep alive interval from the client CONNECT packet. A value of 0 indicates that the feature is not used. public ushort ServerKeepAlive { get; init; } Property Value ushort ServerReference Gets an alternate server which should be used instead of the current one. MQTTv5 only. public string? ServerReference { get; init; } Property Value string SessionExpiryInterval public uint? SessionExpiryInterval { get; init; } Property Value uint? SharedSubscriptionAvailable Gets a value indicating whether the shared subscriptions are available or not. MQTTv5 only. public bool SharedSubscriptionAvailable { get; init; } Property Value bool SubscriptionIdentifiersAvailable Gets a value indicating whether the subscription identifiers are available or not. MQTTv5 only. public bool SubscriptionIdentifiersAvailable { get; init; } Property Value bool TopicAliasMaximum Gets the maximum value for a topic alias. 0 means not supported. MQTTv5 only. public ushort TopicAliasMaximum { get; init; } Property Value ushort UserProperties Gets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. MQTTv5 only. public List<MqttUserProperty> UserProperties { get; init; } Property Value List<MqttUserProperty> WildcardSubscriptionAvailable Gets a value indicating whether wildcards can be used in subscriptions at the current server. MQTTv5 only. public bool WildcardSubscriptionAvailable { get; init; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientConnectResultCode.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientConnectResultCode.html",
    "title": "Enum MqttClientConnectResultCode | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttClientConnectResultCode Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttClientConnectResultCode Fields BadAuthenticationMethod = 140 BadUserNameOrPassword = 134 Banned = 138 ClientIdentifierNotValid = 133 ConnectionRateExceeded = 159 ImplementationSpecificError = 131 MalformedPacket = 129 NotAuthorized = 135 PacketTooLarge = 149 PayloadFormatInvalid = 153 ProtocolError = 130 QoSNotSupported = 155 QuotaExceeded = 151 RetainNotSupported = 154 ServerBusy = 137 ServerMoved = 157 ServerUnavailable = 136 Success = 0 TopicNameInvalid = 144 UnspecifiedError = 128 UnsupportedProtocolVersion = 132 UseAnotherServer = 156"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientCredentials.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientCredentials.html",
    "title": "Class MqttClientCredentials | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientCredentials Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientCredentials : IMqttClientCredentialsProvider Inheritance object MqttClientCredentials Implements IMqttClientCredentialsProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientCredentials(string, byte[]?) public MqttClientCredentials(string userName, byte[]? password = null) Parameters userName string password byte[] Methods GetPassword(MqttClientOptions) public byte[]? GetPassword(MqttClientOptions clientOptions) Parameters clientOptions MqttClientOptions Returns byte[] GetUserName(MqttClientOptions) public string GetUserName(MqttClientOptions clientOptions) Parameters clientOptions MqttClientOptions Returns string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientDisconnectOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientDisconnectOptions.html",
    "title": "Class MqttClientDisconnectOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientDisconnectOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientDisconnectOptions Inheritance object MqttClientDisconnectOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Reason Gets or sets the reason code. MQTT 5.0.0+ feature. public MqttClientDisconnectOptionsReason Reason { get; set; } Property Value MqttClientDisconnectOptionsReason ReasonString Gets or sets the reason string. MQTT 5.0.0+ feature. public string? ReasonString { get; set; } Property Value string SessionExpiryInterval Gets or sets the session expiry interval. MQTT 5.0.0+ feature. public uint SessionExpiryInterval { get; set; } Property Value uint UserProperties Gets or sets the user properties. MQTT 5.0.0+ feature. public List<MqttUserProperty>? UserProperties { get; set; } Property Value List<MqttUserProperty> Methods AddUserProperty(string, string) public void AddUserProperty(string name, string value) Parameters name string value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientDisconnectOptionsReason.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientDisconnectOptionsReason.html",
    "title": "Enum MqttClientDisconnectOptionsReason | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttClientDisconnectOptionsReason Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttClientDisconnectOptionsReason Fields AdministrativeAction = 152 DisconnectWithWillMessage = 4 ImplementationSpecificError = 131 MalformedPacket = 129 MessageRateTooHigh = 150 NormalDisconnection = 0 PacketTooLarge = 149 PayloadFormatInvalid = 153 ProtocolError = 130 QuotaExceeded = 151 ReceiveMaximumExceeded = 147 TopicAliasInvalid = 148 TopicNameInvalid = 144 UnspecifiedError = 128"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientDisconnectReason.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientDisconnectReason.html",
    "title": "Enum MqttClientDisconnectReason | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttClientDisconnectReason Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttClientDisconnectReason Fields AdministrativeAction = 152 BadAuthenticationMethod = 140 ConnectionRateExceeded = 159 DisconnectWithWillMessage = 4 ImplementationSpecificError = 131 KeepAliveTimeout = 141 MalformedPacket = 129 MaximumConnectTime = 160 MessageRateTooHigh = 150 NormalDisconnection = 0 NotAuthorized = 135 PacketTooLarge = 149 PayloadFormatInvalid = 153 ProtocolError = 130 QosNotSupported = 155 QuotaExceeded = 151 ReceiveMaximumExceeded = 147 RetainNotSupported = 154 ServerBusy = 137 ServerMoved = 157 ServerShuttingDown = 139 SessionTakenOver = 142 SharedSubscriptionsNotSupported = 158 SubscriptionIdentifiersNotSupported = 161 TopicAliasInvalid = 148 TopicFilterInvalid = 143 TopicNameInvalid = 144 UnspecifiedError = 128 UseAnotherServer = 156 WildcardSubscriptionsNotSupported = 162"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientOptions.html",
    "title": "Class MqttClientOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientOptions Inheritance object MqttClientOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientOptions(MqttConnectionSettings) public MqttClientOptions(MqttConnectionSettings cs) Parameters cs MqttConnectionSettings MqttClientOptions(MqttClientTcpOptions) public MqttClientOptions(MqttClientTcpOptions tcpOptions) Parameters tcpOptions MqttClientTcpOptions MqttClientOptions(MqttClientWebSocketOptions) public MqttClientOptions(MqttClientWebSocketOptions websocketOptions) Parameters websocketOptions MqttClientWebSocketOptions Properties AllowPacketFragmentation Usually the MQTT packets can be send partially. This is done by using multiple TCP packets or WebSocket frames etc. Unfortunately not all brokers (like Amazon Web Services (AWS)) do support this feature and will close the connection when receiving such packets. If such a service is used this flag must be set to false. public bool AllowPacketFragmentation { get; set; } Property Value bool AuthenticationData Gets or sets the authentication data. MQTT 5.0.0+ feature. public byte[]? AuthenticationData { get; set; } Property Value byte[] AuthenticationMethod Gets or sets the authentication method. MQTT 5.0.0+ feature. public string? AuthenticationMethod { get; set; } Property Value string ChannelOptions public IMqttClientChannelOptions ChannelOptions { get; set; } Property Value IMqttClientChannelOptions CleanSession Gets or sets a value indicating whether clean sessions are used or not. When a client connects to a broker it can connect using either a non persistent connection (clean session) or a persistent connection. With a non persistent connection the broker doesn't store any subscription information or undelivered messages for the client. This mode is ideal when the client only publishes messages. It can also connect as a durable client using a persistent connection. In this mode, the broker will store subscription information, and undelivered messages for the client. public bool CleanSession { get; set; } Property Value bool ClientId Gets the client identifier. Hint: This identifier needs to be unique over all used clients / devices on the broker to avoid connection issues. public string ClientId { get; set; } Property Value string Credentials public IMqttClientCredentialsProvider? Credentials { get; set; } Property Value IMqttClientCredentialsProvider ExtendedAuthenticationExchangeHandler public IMqttExtendedAuthenticationExchangeHandler? ExtendedAuthenticationExchangeHandler { get; set; } Property Value IMqttExtendedAuthenticationExchangeHandler KeepAlivePeriod Gets or sets the keep alive period. The connection is normally left open by the client so that is can send and receive data at any time. If no data flows over an open connection for a certain time period then the client will generate a PINGREQ and expect to receive a PINGRESP from the broker. This message exchange confirms that the connection is open and working. This period is known as the keep alive period. public TimeSpan KeepAlivePeriod { get; set; } Property Value TimeSpan MaximumPacketSize Gets or sets the maximum packet size. MQTT 5.0.0+ feature. public uint MaximumPacketSize { get; set; } Property Value uint ProtocolVersion public MqttProtocolVersion ProtocolVersion { get; set; } Property Value MqttProtocolVersion ReceiveMaximum Gets or sets the receive maximum. This gives the maximum length of the receive messages. MQTT 5.0.0+ feature. public ushort ReceiveMaximum { get; set; } Property Value ushort RequestProblemInformation Gets or sets the request problem information. MQTT 5.0.0+ feature. public bool RequestProblemInformation { get; set; } Property Value bool RequestResponseInformation Gets or sets the request response information. MQTT 5.0.0+ feature. public bool RequestResponseInformation { get; set; } Property Value bool SessionExpiryInterval Gets or sets the session expiry interval. The time after a session expires when it's not actively used. MQTT 5.0.0+ feature. public uint SessionExpiryInterval { get; set; } Property Value uint ThrowOnNonSuccessfulConnectResponse Gets or sets whether an exception should be thrown when the server has sent a non success ACK packet. public bool ThrowOnNonSuccessfulConnectResponse { get; set; } Property Value bool Timeout Gets or sets the timeout which will be applied at socket level and internal operations. The default value is the same as for sockets in .NET in general. public TimeSpan Timeout { get; set; } Property Value TimeSpan TopicAliasMaximum Gets or sets the topic alias maximum. This gives the maximum length of the topic alias. MQTT 5.0.0+ feature. public ushort TopicAliasMaximum { get; set; } Property Value ushort TryPrivate If set to true, the bridge will attempt to indicate to the remote broker that it is a bridge not an ordinary client. If successful, this means that loop detection will be more effective and that retained messages will be propagated correctly. Not all brokers support this feature so it may be necessary to set it to false if your bridge does not connect properly. public bool TryPrivate { get; set; } Property Value bool UserProperties Gets or sets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. MQTT 5.0.0+ feature. public List<MqttUserProperty> UserProperties { get; set; } Property Value List<MqttUserProperty> ValidateFeatures When this feature is enabled the client will check if used properties are supported in the selected protocol version. This feature can be validated if an application message is generated one time but sent via different protocol versions. Default values are applied if the validation is off and features are not supported. public bool ValidateFeatures { get; set; } Property Value bool WillContentType Gets or sets the content type of the will message. MQTT 5.0.0+ feature. public string? WillContentType { get; set; } Property Value string WillCorrelationData Gets or sets the correlation data of the will message. MQTT 5.0.0+ feature. public byte[]? WillCorrelationData { get; set; } Property Value byte[] WillDelayInterval Gets or sets the will delay interval. This is the time between the client disconnect and the time the will message will be sent. MQTT 5.0.0+ feature. public uint WillDelayInterval { get; set; } Property Value uint WillMessageExpiryInterval Gets or sets the message expiry interval of the will message. MQTT 5.0.0+ feature. public uint WillMessageExpiryInterval { get; set; } Property Value uint WillPayload Gets or sets the payload of the will message. public byte[]? WillPayload { get; set; } Property Value byte[] WillPayloadFormatIndicator Gets or sets the payload format indicator of the will message. MQTT 5.0.0+ feature. public MqttPayloadFormatIndicator WillPayloadFormatIndicator { get; set; } Property Value MqttPayloadFormatIndicator WillQualityOfServiceLevel Gets or sets the QoS level of the will message. public MqttQualityOfServiceLevel WillQualityOfServiceLevel { get; set; } Property Value MqttQualityOfServiceLevel WillResponseTopic Gets or sets the response topic of the will message. MQTT 5.0.0+ feature. public string? WillResponseTopic { get; set; } Property Value string WillRetain Gets or sets the retain flag of the will message. public bool WillRetain { get; set; } Property Value bool WillTopic Gets or sets the topic of the will message. public string? WillTopic { get; set; } Property Value string WillUserProperties Gets or sets the user properties of the will message. MQTT 5.0.0+ feature. public List<MqttUserProperty> WillUserProperties { get; set; } Property Value List<MqttUserProperty> WriterBufferSize Gets or sets the default and initial size of the packet write buffer. It is recommended to set this to a value close to the usual expected packet size * 1.5. Do not change this value when no memory issues are experienced. public int WriterBufferSize { get; set; } Property Value int WriterBufferSizeMax Gets or sets the maximum size of the buffer writer. The writer will reduce its internal buffer to this value after serializing a packet. Do not change this value when no memory issues are experienced. public int WriterBufferSizeMax { get; set; } Property Value int Methods AddUserProperty(string, string) public void AddUserProperty(string name, string value) Parameters name string value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientPublishReasonCode.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientPublishReasonCode.html",
    "title": "Enum MqttClientPublishReasonCode | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttClientPublishReasonCode Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttClientPublishReasonCode Fields ImplementationSpecificError = 131 NoMatchingSubscribers = 16 NotAuthorized = 135 PacketIdentifierInUse = 145 PayloadFormatInvalid = 153 QuotaExceeded = 151 Success = 0 TopicNameInvalid = 144 UnspecifiedError = 128"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientPublishResult.html",
    "title": "Class MqttClientPublishResult | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientPublishResult Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientPublishResult Inheritance object MqttClientPublishResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientPublishResult(ushort?, MqttClientPublishReasonCode, string, IReadOnlyCollection<MqttUserProperty>) public MqttClientPublishResult(ushort? packetIdentifier, MqttClientPublishReasonCode reasonCode, string reasonString, IReadOnlyCollection<MqttUserProperty> userProperties) Parameters packetIdentifier ushort? reasonCode MqttClientPublishReasonCode reasonString string userProperties IReadOnlyCollection<MqttUserProperty> Properties IsSuccess Returns if the overall status of the publish is a success. This can be the reason code Success or NoMatchingSubscribers. NoMatchingSubscribers usually indicates only that no other client is interested in the topic but overall transmit to the server etc. was a success. public bool IsSuccess { get; } Property Value bool PacketIdentifier Gets the packet identifier which was used for this publish. public ushort? PacketIdentifier { get; } Property Value ushort? ReasonCode Gets or sets the reason code. MQTT 5.0.0+ feature. public MqttClientPublishReasonCode ReasonCode { get; } Property Value MqttClientPublishReasonCode ReasonString Gets or sets the reason string. MQTT 5.0.0+ feature. public string ReasonString { get; } Property Value string UserProperties Gets or sets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. MQTT 5.0.0+ feature. public IReadOnlyCollection<MqttUserProperty> UserProperties { get; } Property Value IReadOnlyCollection<MqttUserProperty>"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeOptions.html",
    "title": "Class MqttClientSubscribeOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientSubscribeOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientSubscribeOptions Inheritance object MqttClientSubscribeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientSubscribeOptions() public MqttClientSubscribeOptions() MqttClientSubscribeOptions(MqttTopicFilter) public MqttClientSubscribeOptions(MqttTopicFilter mqttTopicFilter) Parameters mqttTopicFilter MqttTopicFilter MqttClientSubscribeOptions(string, MqttQualityOfServiceLevel) public MqttClientSubscribeOptions(string topic, MqttQualityOfServiceLevel qos = MqttQualityOfServiceLevel.AtLeastOnce) Parameters topic string qos MqttQualityOfServiceLevel Properties SubscriptionIdentifier Gets or sets the subscription identifier. The client can specify a subscription identifier when subscribing. The broker will establish and store the mapping relationship between this subscription and subscription identifier when successfully create or modify subscription. The broker will return the subscription identifier associated with this PUBLISH packet and the PUBLISH packet to the client when need to forward PUBLISH packets matching this subscription to this client. MQTT 5.0.0+ feature. public uint SubscriptionIdentifier { get; set; } Property Value uint TopicFilters Gets or sets a list of topic filters the client wants to subscribe to. Topic filters can include regular topics or wild cards. public List<MqttTopicFilter> TopicFilters { get; set; } Property Value List<MqttTopicFilter> UserProperties Gets or sets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. MQTT 5.0.0+ feature. public List<MqttUserProperty>? UserProperties { get; set; } Property Value List<MqttUserProperty> Methods AddUserProperty(string, string) public void AddUserProperty(string key, string value) Parameters key string value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeReasonCode.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeReasonCode.html",
    "title": "Enum MqttClientSubscribeReasonCode | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttClientSubscribeReasonCode Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttClientSubscribeReasonCode Fields GrantedQoS0 = 0 GrantedQoS1 = 1 GrantedQoS2 = 2 ImplementationSpecificError = 131 NotAuthorized = 135 PacketIdentifierInUse = 145 QuotaExceeded = 151 SharedSubscriptionsNotSupported = 158 SubscriptionIdentifiersNotSupported = 161 TopicFilterInvalid = 143 UnspecifiedError = 128 WildcardSubscriptionsNotSupported = 162"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResult.html",
    "title": "Class MqttClientSubscribeResult | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientSubscribeResult Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientSubscribeResult Inheritance object MqttClientSubscribeResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientSubscribeResult(ushort, IReadOnlyCollection<MqttClientSubscribeResultItem>, string, IReadOnlyCollection<MqttUserProperty>) public MqttClientSubscribeResult(ushort packetIdentifier, IReadOnlyCollection<MqttClientSubscribeResultItem> items, string reasonString, IReadOnlyCollection<MqttUserProperty> userProperties) Parameters packetIdentifier ushort items IReadOnlyCollection<MqttClientSubscribeResultItem> reasonString string userProperties IReadOnlyCollection<MqttUserProperty> Properties Items Gets the result for every topic filter item. public IReadOnlyCollection<MqttClientSubscribeResultItem> Items { get; } Property Value IReadOnlyCollection<MqttClientSubscribeResultItem> PacketIdentifier Gets the packet identifier which was used. public ushort PacketIdentifier { get; } Property Value ushort ReasonString Gets the reason string. MQTT 5.0.0+ feature. public string ReasonString { get; } Property Value string UserProperties Gets the user properties which were part of the SUBACK packet. MQTT 5.0.0+ feature. public IReadOnlyCollection<MqttUserProperty> UserProperties { get; } Property Value IReadOnlyCollection<MqttUserProperty> Methods IsSubAckSuccessful(MqttQualityOfServiceLevel) public bool IsSubAckSuccessful(MqttQualityOfServiceLevel requestedQos) Parameters requestedQos MqttQualityOfServiceLevel Returns bool ThrowIfNotSuccessSubAck(MqttQualityOfServiceLevel, string?) public void ThrowIfNotSuccessSubAck(MqttQualityOfServiceLevel requestedQos, string? commandName = null) Parameters requestedQos MqttQualityOfServiceLevel commandName string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResultItem.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientSubscribeResultItem.html",
    "title": "Class MqttClientSubscribeResultItem | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientSubscribeResultItem Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientSubscribeResultItem Inheritance object MqttClientSubscribeResultItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientSubscribeResultItem(MqttTopicFilter, MqttClientSubscribeReasonCode) public MqttClientSubscribeResultItem(MqttTopicFilter topicFilter, MqttClientSubscribeReasonCode reasonCode) Parameters topicFilter MqttTopicFilter reasonCode MqttClientSubscribeReasonCode Properties ReasonCode Gets or sets the result code. MQTT 5.0.0+ feature. public MqttClientSubscribeReasonCode ReasonCode { get; } Property Value MqttClientSubscribeReasonCode TopicFilter Gets or sets the topic filter. The topic filter can contain topics and wildcards. public MqttTopicFilter TopicFilter { get; } Property Value MqttTopicFilter"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientTcpOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientTcpOptions.html",
    "title": "Class MqttClientTcpOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientTcpOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientTcpOptions : IMqttClientChannelOptions Inheritance object MqttClientTcpOptions Implements IMqttClientChannelOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientTcpOptions(string, int) public MqttClientTcpOptions(string host, int port) Parameters host string port int Properties AddressFamily public AddressFamily AddressFamily { get; set; } Property Value AddressFamily BufferSize public int BufferSize { get; set; } Property Value int DualMode Gets or sets whether the underlying socket should run in dual mode. Leaving this null will avoid setting this value at socket level. Setting this a value other than null will throw an exception when only IPv4 is supported on the machine. public bool? DualMode { get; set; } Property Value bool? Host public string Host { get; set; } Property Value string LingerState public LingerOption LingerState { get; set; } Property Value LingerOption LocalEndpoint Gets the local endpoint (network card) which is used by the client. Set it to null to let the OS select the network card. public EndPoint? LocalEndpoint { get; set; } Property Value EndPoint NoDelay Enables or disables the Nagle algorithm for the socket. This is only supported for TCP. For other protocol types the value is ignored. Default: true public bool NoDelay { get; set; } Property Value bool Port public int Port { get; set; } Property Value int ProtocolType The MQTT transport is usually TCP but when using other endpoint types like unix sockets it must be changed (IP for unix sockets). public ProtocolType ProtocolType { get; set; } Property Value ProtocolType TlsOptions public MqttClientTlsOptions TlsOptions { get; set; } Property Value MqttClientTlsOptions"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientTlsOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientTlsOptions.html",
    "title": "Class MqttClientTlsOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientTlsOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientTlsOptions Inheritance object MqttClientTlsOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowRenegotiation public bool AllowRenegotiation { get; set; } Property Value bool AllowUntrustedCertificates public bool AllowUntrustedCertificates { get; set; } Property Value bool ApplicationProtocols public List<SslApplicationProtocol>? ApplicationProtocols { get; set; } Property Value List<SslApplicationProtocol> CertificateSelectionHandler public Func<MqttClientCertificateSelectionEventArgs, X509Certificate>? CertificateSelectionHandler { get; set; } Property Value Func<MqttClientCertificateSelectionEventArgs, X509Certificate> CertificateValidationHandler public Func<MqttClientCertificateValidationEventArgs, bool>? CertificateValidationHandler { get; set; } Property Value Func<MqttClientCertificateValidationEventArgs, bool> CipherSuitesPolicy public CipherSuitesPolicy? CipherSuitesPolicy { get; set; } Property Value CipherSuitesPolicy ClientCertificatesProvider Gets or sets the provider for certificates. This provider gets called whenever the client wants to connect with the server and requires certificates for authentication. The implementation may return different certificates each time. public IMqttClientCertificatesProvider? ClientCertificatesProvider { get; set; } Property Value IMqttClientCertificatesProvider EncryptionPolicy public EncryptionPolicy EncryptionPolicy { get; set; } Property Value EncryptionPolicy IgnoreCertificateChainErrors public bool IgnoreCertificateChainErrors { get; set; } Property Value bool IgnoreCertificateRevocationErrors public bool IgnoreCertificateRevocationErrors { get; set; } Property Value bool RevocationMode public X509RevocationMode RevocationMode { get; set; } Property Value X509RevocationMode SslProtocol public SslProtocols SslProtocol { get; set; } Property Value SslProtocols TargetHost Gets or sets the target host. If the value is null or empty the same host as the TCP socket host will be used. public string? TargetHost { get; set; } Property Value string TrustChain public X509Certificate2Collection? TrustChain { get; set; } Property Value X509Certificate2Collection UseTls public bool UseTls { get; set; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeOptions.html",
    "title": "Class MqttClientUnsubscribeOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientUnsubscribeOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientUnsubscribeOptions Inheritance object MqttClientUnsubscribeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientUnsubscribeOptions() public MqttClientUnsubscribeOptions() MqttClientUnsubscribeOptions(MqttTopicFilter) public MqttClientUnsubscribeOptions(MqttTopicFilter mqttTopicFilter) Parameters mqttTopicFilter MqttTopicFilter MqttClientUnsubscribeOptions(string) public MqttClientUnsubscribeOptions(string topic) Parameters topic string Properties TopicFilters Gets or sets a list of topic filters the client wants to unsubscribe from. Topic filters can include regular topics or wild cards. public List<string> TopicFilters { get; set; } Property Value List<string> UserProperties Gets or sets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. MQTT 5.0.0+ feature. public List<MqttUserProperty>? UserProperties { get; set; } Property Value List<MqttUserProperty> Methods AddUserProperty(string, string) public void AddUserProperty(string key, string value) Parameters key string value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeReasonCode.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeReasonCode.html",
    "title": "Enum MqttClientUnsubscribeReasonCode | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttClientUnsubscribeReasonCode Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttClientUnsubscribeReasonCode Fields ImplementationSpecificError = 131 NoSubscriptionExisted = 17 NotAuthorized = 135 PacketIdentifierInUse = 145 Success = 0 TopicFilterInvalid = 143 UnspecifiedError = 128"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResult.html",
    "title": "Class MqttClientUnsubscribeResult | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientUnsubscribeResult Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientUnsubscribeResult Inheritance object MqttClientUnsubscribeResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientUnsubscribeResult(ushort, IReadOnlyCollection<MqttClientUnsubscribeResultItem>, string, IReadOnlyCollection<MqttUserProperty>) public MqttClientUnsubscribeResult(ushort packetIdentifier, IReadOnlyCollection<MqttClientUnsubscribeResultItem> items, string reasonString, IReadOnlyCollection<MqttUserProperty> userProperties) Parameters packetIdentifier ushort items IReadOnlyCollection<MqttClientUnsubscribeResultItem> reasonString string userProperties IReadOnlyCollection<MqttUserProperty> Properties Items Gets the result for every topic filter item. public IReadOnlyCollection<MqttClientUnsubscribeResultItem> Items { get; } Property Value IReadOnlyCollection<MqttClientUnsubscribeResultItem> PacketIdentifier Gets the packet identifier which was used. public ushort PacketIdentifier { get; } Property Value ushort ReasonString Gets the reason string. MQTT 5.0.0+ feature. public string ReasonString { get; } Property Value string UserProperties Gets the user properties which were part of the UNSUBACK packet. MQTT 5.0.0+ feature. public IReadOnlyCollection<MqttUserProperty> UserProperties { get; set; } Property Value IReadOnlyCollection<MqttUserProperty> Methods IsUnsubAckSuccessful() public bool IsUnsubAckSuccessful() Returns bool ThrowIfNotSuccessUnsubAck(string?) public void ThrowIfNotSuccessUnsubAck(string? commandName = null) Parameters commandName string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResultItem.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientUnsubscribeResultItem.html",
    "title": "Class MqttClientUnsubscribeResultItem | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientUnsubscribeResultItem Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttClientUnsubscribeResultItem Inheritance object MqttClientUnsubscribeResultItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientUnsubscribeResultItem(string, MqttClientUnsubscribeReasonCode) public MqttClientUnsubscribeResultItem(string topicFilter, MqttClientUnsubscribeReasonCode reasonCode) Parameters topicFilter string reasonCode MqttClientUnsubscribeReasonCode Properties ReasonCode Gets or sets the result code. MQTT 5.0.0+ feature. public MqttClientUnsubscribeReasonCode ReasonCode { get; } Property Value MqttClientUnsubscribeReasonCode TopicFilter Gets or sets the topic filter. The topic filter can contain topics and wildcards. public string TopicFilter { get; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientWebSocketOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientWebSocketOptions.html",
    "title": "Class MqttClientWebSocketOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientWebSocketOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientWebSocketOptions : IMqttClientChannelOptions Inheritance object MqttClientWebSocketOptions Implements IMqttClientChannelOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Properties CookieContainer public CookieContainer? CookieContainer { get; set; } Property Value CookieContainer Credentials public ICredentials? Credentials { get; set; } Property Value ICredentials KeepAliveInterval Gets or sets the keep alive interval for the Web Socket connection. This is not related to the keep alive interval for the MQTT protocol. public TimeSpan KeepAliveInterval { get; set; } Property Value TimeSpan ProxyOptions public MqttClientWebSocketProxyOptions? ProxyOptions { get; set; } Property Value MqttClientWebSocketProxyOptions RequestHeaders public IDictionary<string, string> RequestHeaders { get; set; } Property Value IDictionary<string, string> SubProtocols public ICollection<string> SubProtocols { get; set; } Property Value ICollection<string> TlsOptions public MqttClientTlsOptions TlsOptions { get; set; } Property Value MqttClientTlsOptions Uri public required string Uri { get; set; } Property Value string UseDefaultCredentials Gets or sets whether the default (system) credentials should be used when connecting via Web Socket connection. This is not related to the credentials which are used for the MQTT protocol. public bool UseDefaultCredentials { get; set; } Property Value bool Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttClientWebSocketProxyOptions.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttClientWebSocketProxyOptions.html",
    "title": "Class MqttClientWebSocketProxyOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttClientWebSocketProxyOptions Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public sealed class MqttClientWebSocketProxyOptions Inheritance object MqttClientWebSocketProxyOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MqttClientWebSocketProxyOptions(string) public MqttClientWebSocketProxyOptions(string address) Parameters address string Properties Address public string Address { get; set; } Property Value string BypassList public string[]? BypassList { get; set; } Property Value string[] BypassOnLocal public bool BypassOnLocal { get; set; } Property Value bool Domain public string? Domain { get; set; } Property Value string Password public string? Password { get; set; } Property Value string UseDefaultCredentials public bool UseDefaultCredentials { get; set; } Property Value bool Username public string? Username { get; set; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttExtendedAuthenticationExchangeContext.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttExtendedAuthenticationExchangeContext.html",
    "title": "Class MqttExtendedAuthenticationExchangeContext | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttExtendedAuthenticationExchangeContext Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttExtendedAuthenticationExchangeContext Inheritance object MqttExtendedAuthenticationExchangeContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttExtendedAuthenticationExchangeContext(MqttAuthenticateReasonCode) public MqttExtendedAuthenticationExchangeContext(MqttAuthenticateReasonCode reasonCode) Parameters reasonCode MqttAuthenticateReasonCode Properties AuthenticationData Gets the authentication data. Hint: MQTT 5 feature only. public byte[]? AuthenticationData { get; init; } Property Value byte[] AuthenticationMethod Gets the authentication method. Hint: MQTT 5 feature only. public string? AuthenticationMethod { get; init; } Property Value string ReasonCode Gets the reason code. Hint: MQTT 5 feature only. public MqttAuthenticateReasonCode ReasonCode { get; init; } Property Value MqttAuthenticateReasonCode ReasonString Gets the reason string. Hint: MQTT 5 feature only. public string? ReasonString { get; init; } Property Value string UserProperties Gets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. Hint: MQTT 5 feature only. public List<MqttUserProperty> UserProperties { get; init; } Property Value List<MqttUserProperty>"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttExtendedAuthenticationExchangeData.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttExtendedAuthenticationExchangeData.html",
    "title": "Class MqttExtendedAuthenticationExchangeData | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttExtendedAuthenticationExchangeData Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttExtendedAuthenticationExchangeData Inheritance object MqttExtendedAuthenticationExchangeData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationData Gets or sets the authentication data. Authentication data is binary information used to transmit multiple iterations of cryptographic secrets of protocol steps. The content of the authentication data is highly dependent on the specific implementation of the authentication method. Hint: MQTT 5 feature only. public byte[]? AuthenticationData { get; set; } Property Value byte[] ReasonCode Gets or sets the reason code. Hint: MQTT 5 feature only. public MqttAuthenticateReasonCode ReasonCode { get; set; } Property Value MqttAuthenticateReasonCode ReasonString Gets or sets the reason string. Hint: MQTT 5 feature only. public string? ReasonString { get; set; } Property Value string UserProperties Gets or sets the user properties. In MQTT 5, user properties are basic UTF-8 string key-value pairs that you can append to almost every type of MQTT packet. As long as you don’t exceed the maximum message size, you can use an unlimited number of user properties to add metadata to MQTT messages and pass information between publisher, broker, and subscriber. The feature is very similar to the HTTP header concept. Hint: MQTT 5 feature only. public List<MqttUserProperty>? UserProperties { get; } Property Value List<MqttUserProperty>"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttPayloadFormatIndicator.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttPayloadFormatIndicator.html",
    "title": "Enum MqttPayloadFormatIndicator | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttPayloadFormatIndicator Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttPayloadFormatIndicator Fields CharacterData = 1 Unspecified = 0"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttPendingMessagesOverflowStrategy.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttPendingMessagesOverflowStrategy.html",
    "title": "Enum MqttPendingMessagesOverflowStrategy | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttPendingMessagesOverflowStrategy Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttPendingMessagesOverflowStrategy Fields DropNewMessage = 1 DropOldestQueuedMessage = 0"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttProtocolVersion.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttProtocolVersion.html",
    "title": "Enum MqttProtocolVersion | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttProtocolVersion Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttProtocolVersion Fields Unknown = 0 V310 = 3 V311 = 4 V500 = 5"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttQualityOfServiceLevel.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttQualityOfServiceLevel.html",
    "title": "Enum MqttQualityOfServiceLevel | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttQualityOfServiceLevel Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttQualityOfServiceLevel Fields AtLeastOnce = 1 AtMostOnce = 0 ExactlyOnce = 2"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttRetainHandling.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttRetainHandling.html",
    "title": "Enum MqttRetainHandling | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttRetainHandling Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttRetainHandling Fields DoNotSendOnSubscribe = 2 SendAtSubscribe = 0 SendAtSubscribeIfNewSubscriptionOnly = 1"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttTopicFilter.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttTopicFilter.html",
    "title": "Class MqttTopicFilter | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttTopicFilter Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttTopicFilter Inheritance object MqttTopicFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttTopicFilter(string, MqttQualityOfServiceLevel) public MqttTopicFilter(string topic, MqttQualityOfServiceLevel qos = MqttQualityOfServiceLevel.AtLeastOnce) Parameters topic string qos MqttQualityOfServiceLevel Properties NoLocal Gets or sets a value indicating whether the sender will not receive its own published application messages. MQTT 5.0.0+ feature. public bool NoLocal { get; set; } Property Value bool QualityOfServiceLevel Gets or sets the quality of service level. The Quality of Service (QoS) level is an agreement between the sender of a message and the receiver of a message that defines the guarantee of delivery for a specific message. There are 3 QoS levels in MQTT: At most once (0): Message gets delivered no time, once or multiple times. At least once (1): Message gets delivered at least once (one time or more often). Exactly once (2): Message gets delivered exactly once (It's ensured that the message only comes once). public MqttQualityOfServiceLevel QualityOfServiceLevel { get; set; } Property Value MqttQualityOfServiceLevel RetainAsPublished Gets or sets a value indicating whether messages are retained as published or not. MQTT 5.0.0+ feature. public bool RetainAsPublished { get; set; } Property Value bool RetainHandling Gets or sets the retain handling. MQTT 5.0.0+ feature. public MqttRetainHandling RetainHandling { get; set; } Property Value MqttRetainHandling Topic Gets or sets the MQTT topic. In MQTT, the word topic refers to an UTF-8 string that the broker uses to filter messages for each connected client. The topic consists of one or more topic levels. Each topic level is separated by a forward slash (topic level separator). public string Topic { get; set; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttTopicFilterCompareResult.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttTopicFilterCompareResult.html",
    "title": "Enum MqttTopicFilterCompareResult | Azure IoT Operations .NET SDK",
    "keywords": "Enum MqttTopicFilterCompareResult Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public enum MqttTopicFilterCompareResult Fields FilterInvalid = 2 IsMatch = 1 NoMatch = 0 TopicInvalid = 3"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttTopicFilterComparer.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttTopicFilterComparer.html",
    "title": "Class MqttTopicFilterComparer | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttTopicFilterComparer Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public static class MqttTopicFilterComparer Inheritance object MqttTopicFilterComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LevelSeparator public const char LevelSeparator = '/' Field Value char MultiLevelWildcard public const char MultiLevelWildcard = '#' Field Value char ReservedTopicPrefix public const char ReservedTopicPrefix = '$' Field Value char SingleLevelWildcard public const char SingleLevelWildcard = '+' Field Value char Methods Compare(string, string) public static MqttTopicFilterCompareResult Compare(string topic, string filter) Parameters topic string filter string Returns MqttTopicFilterCompareResult"
  },
  "api/Azure.Iot.Operations.Protocol.Models.MqttUserProperty.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.MqttUserProperty.html",
    "title": "Class MqttUserProperty | Azure IoT Operations .NET SDK",
    "keywords": "Class MqttUserProperty Namespace Azure.Iot.Operations.Protocol.Models Assembly Azure.Iot.Operations.Protocol.dll public class MqttUserProperty Inheritance object MqttUserProperty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MqttUserProperty(string, string) public MqttUserProperty(string name, string value) Parameters name string value string Properties Name public string Name { get; } Property Value string Value public string Value { get; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Models.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Models.html",
    "title": "Namespace Azure.Iot.Operations.Protocol.Models | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Protocol.Models Classes DefaultMqttCertificatesProvider MqttApplicationMessage MqttAuthPacket MqttClientCertificateSelectionEventArgs MqttClientCertificateValidationEventArgs MqttClientConnectResult MqttClientCredentials MqttClientDisconnectOptions MqttClientOptions MqttClientPublishResult MqttClientSubscribeOptions MqttClientSubscribeResult MqttClientSubscribeResultItem MqttClientTcpOptions MqttClientTlsOptions MqttClientUnsubscribeOptions MqttClientUnsubscribeResult MqttClientUnsubscribeResultItem MqttClientWebSocketOptions MqttClientWebSocketProxyOptions MqttExtendedAuthenticationExchangeContext MqttExtendedAuthenticationExchangeData MqttTopicFilter MqttTopicFilterComparer MqttUserProperty Interfaces IMqttClientCertificatesProvider IMqttClientChannelOptions IMqttClientCredentialsProvider IMqttExtendedAuthenticationExchangeHandler Enums MqttApplicationMessageReceivedReasonCode MqttAuthenticateReasonCode MqttClientConnectResultCode MqttClientDisconnectOptionsReason MqttClientDisconnectReason MqttClientPublishReasonCode MqttClientSubscribeReasonCode MqttClientUnsubscribeReasonCode MqttPayloadFormatIndicator MqttPendingMessagesOverflowStrategy MqttProtocolVersion MqttQualityOfServiceLevel MqttRetainHandling MqttTopicFilterCompareResult"
  },
  "api/Azure.Iot.Operations.Protocol.PatternValidity.html": {
    "href": "api/Azure.Iot.Operations.Protocol.PatternValidity.html",
    "title": "Enum PatternValidity | Azure IoT Operations .NET SDK",
    "keywords": "Enum PatternValidity Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public enum PatternValidity Fields InvalidPattern = 1 InvalidResidentReplacement = 4 InvalidToken = 2 InvalidTransientReplacement = 5 MissingReplacement = 3 Valid = 0"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.CommandExecutor-2.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.CommandExecutor-2.html",
    "title": "Class CommandExecutor<TReq, TResp> | Azure IoT Operations .NET SDK",
    "keywords": "Class CommandExecutor<TReq, TResp> Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll public abstract class CommandExecutor<TReq, TResp> : IAsyncDisposable where TReq : class where TResp : class Type Parameters TReq TResp Inheritance object CommandExecutor<TReq, TResp> Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandExecutor(IMqttPubSubClient, string, IPayloadSerializer) public CommandExecutor(IMqttPubSubClient mqttClient, string commandName, IPayloadSerializer serializer) Parameters mqttClient IMqttPubSubClient commandName string serializer IPayloadSerializer Properties CacheTtl The cache time-to-live that will be used for reusing a previously computed response for duplicate or equivalent idempotent command requests. public TimeSpan CacheTtl { get; init; } Property Value TimeSpan Remarks Idempotent commands will cache the response of duplicate requests until the maximum of cache time-to-live or the command request expiration. Idempotent commands will cache the response of equivalent requests until the cache time-to-live. The cache could be cleared before the time-to-live expires if the cost-weighted benefit is too low and the cache is under size pressure. Two requests are considered to be duplicate when the requests have identical correlation ID. Two requests are considered to be equivalent when they have the same payload, parameters and topic, but different correlation ID. EffectiveTopicTokenMap Gets a dictionary used by this class's code for substituting tokens in request and response topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. protected virtual IReadOnlyDictionary<string, string> EffectiveTopicTokenMap { get; } Property Value IReadOnlyDictionary<string, string> ExecutionTimeout public TimeSpan ExecutionTimeout { get; set; } Property Value TimeSpan ExecutorId public string? ExecutorId { get; init; } Property Value string IsIdempotent public bool IsIdempotent { get; init; } Property Value bool OnCommandReceived public required Func<ExtendedRequest<TReq>, CancellationToken, Task<ExtendedResponse<TResp>>> OnCommandReceived { get; set; } Property Value Func<ExtendedRequest<TReq>, CancellationToken, Task<ExtendedResponse<TResp>>> RequestTopicPattern public string RequestTopicPattern { get; init; } Property Value string ServiceGroupId public string ServiceGroupId { get; init; } Property Value string TopicNamespace public string? TopicNamespace { get; set; } Property Value string TopicTokenMap Gets a dictionary for adding token keys and their replacement strings, which will be substituted in request and response topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. public virtual Dictionary<string, string> TopicTokenMap { get; } Property Value Dictionary<string, string> Methods DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public virtual ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public virtual ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask DisposeAsyncCore(bool) protected virtual ValueTask DisposeAsyncCore(bool disposing) Parameters disposing bool Returns ValueTask StartAsync(int?, IReadOnlyDictionary<string, string>?, CancellationToken) public Task StartAsync(int? preferredDispatchConcurrency = null, IReadOnlyDictionary<string, string>? transientTopicTokenMap = null, CancellationToken cancellationToken = default) Parameters preferredDispatchConcurrency int? transientTopicTokenMap IReadOnlyDictionary<string, string> cancellationToken CancellationToken Returns Task StopAsync(CancellationToken) public Task StopAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.CommandInvoker-2.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.CommandInvoker-2.html",
    "title": "Class CommandInvoker<TReq, TResp> | Azure IoT Operations .NET SDK",
    "keywords": "Class CommandInvoker<TReq, TResp> Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll public abstract class CommandInvoker<TReq, TResp> : IAsyncDisposable where TReq : class where TResp : class Type Parameters TReq TResp Inheritance object CommandInvoker<TReq, TResp> Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandInvoker(IMqttPubSubClient, string, IPayloadSerializer) public CommandInvoker(IMqttPubSubClient mqttClient, string commandName, IPayloadSerializer serializer) Parameters mqttClient IMqttPubSubClient commandName string serializer IPayloadSerializer Properties EffectiveTopicTokenMap Gets a dictionary used by this class's code for substituting tokens in request and response topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. protected virtual IReadOnlyDictionary<string, string> EffectiveTopicTokenMap { get; } Property Value IReadOnlyDictionary<string, string> GetResponseTopic public Func<string, string>? GetResponseTopic { get; set; } Property Value Func<string, string> RequestTopicPattern public string RequestTopicPattern { get; init; } Property Value string ResponseTopicPrefix public string? ResponseTopicPrefix { get; set; } Property Value string ResponseTopicSuffix public string? ResponseTopicSuffix { get; set; } Property Value string TopicNamespace public string? TopicNamespace { get; set; } Property Value string TopicTokenMap Gets a dictionary for adding token keys and their replacement strings, which will be substituted in request and response topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. public virtual Dictionary<string, string> TopicTokenMap { get; } Property Value Dictionary<string, string> Methods DisposeAsync() Dispose this object and the underlying mqtt client. public ValueTask DisposeAsync() Returns ValueTask Remarks To avoid disposing the underlying mqtt client, use DisposeAsync(bool). DisposeAsync(bool) Dispose this object and choose whether to dispose the underlying mqtt client as well. public ValueTask DisposeAsync(bool disposing) Parameters disposing bool If true, this call will dispose the underlying mqtt client. If false, this call will not dispose the underlying mqtt client. Returns ValueTask DisposeAsyncCore(bool) protected virtual ValueTask DisposeAsyncCore(bool disposing) Parameters disposing bool Returns ValueTask InvokeCommandAsync(TReq, CommandRequestMetadata?, IReadOnlyDictionary<string, string>?, TimeSpan?, CancellationToken) public Task<ExtendedResponse<TResp>> InvokeCommandAsync(TReq request, CommandRequestMetadata? metadata = null, IReadOnlyDictionary<string, string>? transientTopicTokenMap = null, TimeSpan? commandTimeout = null, CancellationToken cancellationToken = default) Parameters request TReq metadata CommandRequestMetadata transientTopicTokenMap IReadOnlyDictionary<string, string> commandTimeout TimeSpan? cancellationToken CancellationToken Returns Task<ExtendedResponse<TResp>>"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.CommandRequestMetadata.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.CommandRequestMetadata.html",
    "title": "Class CommandRequestMetadata | Azure IoT Operations .NET SDK",
    "keywords": "Class CommandRequestMetadata Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll public class CommandRequestMetadata Inheritance object CommandRequestMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandRequestMetadata() Construct CommandRequestMetadata in user code, for passing to a command invocation. public CommandRequestMetadata() Remarks The CorrelationData field will be set to a new GUID; if the CommandRequestMetadata is passed to a command invocation, this value will be used as the correlation date for the request. The InvokerClientId field will be set to null; user code can obtain the MQTT client ID directly from the MQTT client. The Timestamp field will be set to the current HybridLogicalClock time for the process. The FencingToken field will be initialized to null; this can be set by user code if desired. The UserData field will be initialized with an empty dictionary; entries in this dictionary can be set by user code as desired. Properties CorrelationId The correlation data used to connect a command response to a command request. When CommandRequestMetadata is constructed by user code that will invoke a command, the CorrelationData is set to a new GUID. When CommandRequestMetadata is passed by a CommandExecutor into a user-code execution function, the Correlation Data is set from the request message. public Guid CorrelationId { get; } Property Value Guid FencingToken A fencing token attached to the request. When CommandRequestMetadata is constructed by user code that will invoke a command, the FencingToken is initialized to null, and it can be set by user code. When CommandRequestMetadata is passed by a CommandExecutor into a user-code execution function, the FencingToken is set from the request message; this will be null if the message contains no fencing token header. public HybridLogicalClock? FencingToken { get; set; } Property Value HybridLogicalClock InvokerClientId The MQTT Client ID of the Command invoker that sends the request. This property has no meaning to user code that will invoke a command; the InvokerClientId is set to null on construction. When CommandRequestMetadata is passed by a CommandExecutor into a user-code execution function, the InvokerClientId is set from the request message. public string? InvokerClientId { get; } Property Value string Partition The partition attached to the request. When CommandRequestMetadata is constructed by user code that will invoke a command, the partition is initialized to null, and it can be set by user code. When CommandRequestMetadata is passed by a CommandExecutor into a user-code execution function, the partition is set from the request message; this will be null if the message contains no partition header. public string? Partition { get; } Property Value string Timestamp The timestamp attached to the request. When CommandRequestMetadata is constructed by user code that will invoke a command, the Timestamp is set from the updated HybridLogicalClock of the CommandInvoker. When CommandRequestMetadata is passed by a CommandExecutor into a user-code execution function, the Timestamp is set from the request message; this will be null if the message contains no timestamp header. public HybridLogicalClock? Timestamp { get; } Property Value HybridLogicalClock UserData A dictionary of user properties that are sent along with the request from the CommandInvoker to the CommandExecutor. When CommandRequestMetadata is constructed by user code that will invoke a command, the UserData is initialized with an empty dictionary. When CommandRequestMetadata is passed by a CommandExecutor into a user-code execution function, the UserData is set from the request message. public Dictionary<string, string> UserData { get; } Property Value Dictionary<string, string>"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.CommandResponseMetadata.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.CommandResponseMetadata.html",
    "title": "Class CommandResponseMetadata | Azure IoT Operations .NET SDK",
    "keywords": "Class CommandResponseMetadata Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll public class CommandResponseMetadata Inheritance object CommandResponseMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandResponseMetadata() Construct CommandResponseMetadata in user code, presumably within an execution function that will include the metadata in its return value. public CommandResponseMetadata() Remarks The CorrelationData field will be set to null; if the user-code execution function wants to know the correlation data, it should use the CommandRequestMetadata passed in by the CommandExecutor. The Status field will be set to null; the command status will not be determined until after execution completes. The StatusMessage field will be set to null; the command status will not be determined until after execution completes. The IsApplicationError field will be set to null; the command status will not be determined until after execution completes. The Timestamp field will be set to the current HybridLogicalClock time for the process. The UserData field will be initialized with an empty dictionary; entries in this dictionary can be set by user code as desired. Properties CorrelationId The correlation data used to connect a command response to a command request. This property has no meaning to a user-code execution function on the CommandExecutor; the CorrelationData is set to null on construction. When CommandResponseMetadata is returned by command invocation on the CommandInvoker, the CorrelationData is set from the response message. public Guid? CorrelationId { get; } Property Value Guid? Timestamp The timestamp attached to the response. When CommandResponseMetadata is constructed within a user-code execution function on the CommandExecutor, the Timestamp is set from the HybridLogicalClock of the CommandExecutor. When CommandResponseMetadata is returned by command invocation on the CommandInvoker, the Timestamp is set from the response message; this will be null if the message contains no timestamp header. public HybridLogicalClock? Timestamp { get; } Property Value HybridLogicalClock UserData A dictionary of user properties that are sent along with the response from the CommandExecutor to the CommandInvoker. When CommandResponseMetadata is constructed within a user-code execution function on the CommandExecutor, the UserData is initialized with an empty dictionary. When CommandResponseMetadata is returned by command invocation on the CommandInvoker, the UserData is set from the resonse message. public Dictionary<string, string> UserData { get; set; } Property Value Dictionary<string, string> Methods MarshalTo(MqttApplicationMessage) public void MarshalTo(MqttApplicationMessage message) Parameters message MqttApplicationMessage"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.CommandStatusCode.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.CommandStatusCode.html",
    "title": "Enum CommandStatusCode | Azure IoT Operations .NET SDK",
    "keywords": "Enum CommandStatusCode Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll HTTP status codes used to indicate the status of a Command. public enum CommandStatusCode Fields BadRequest = 400 Bad Request. Header or payload is missing or invalid. InternalServerError = 500 Internal Server. Unknown error, internal logic error, or command processor error other than InvocationException. NoContent = 204 No Content. There is no content to send for this request. NotSupportedVersion = 505 The request failed because the remote party did not support the requested protocol version. OK = 200 OK. No error. RequestTimeout = 408 Request Timeout. The request timeout out before a response could be received from the command processor. ServiceUnavailable = 503 Service Unavailable. Invalid service state preventing command from executing properly. UnprocessableContent = 422 Unprocessable Content. The request was well-formed but was unable to be followed due to semantic errors, as indicated via an InvocationException. UnsupportedMediaType = 415 Unsupported Media Type. The content type specified in the request is not supported by this implementation."
  },
  "api/Azure.Iot.Operations.Protocol.RPC.ExtendedRequest-1.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.ExtendedRequest-1.html",
    "title": "Struct ExtendedRequest<TReq> | Azure IoT Operations .NET SDK",
    "keywords": "Struct ExtendedRequest<TReq> Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll public struct ExtendedRequest<TReq> where TReq : class Type Parameters TReq Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Request public TReq Request { readonly get; set; } Property Value TReq RequestMetadata public CommandRequestMetadata RequestMetadata { readonly get; set; } Property Value CommandRequestMetadata"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.ExtendedResponse-1.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.ExtendedResponse-1.html",
    "title": "Struct ExtendedResponse<TResp> | Azure IoT Operations .NET SDK",
    "keywords": "Struct ExtendedResponse<TResp> Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll public struct ExtendedResponse<TResp> where TResp : class Type Parameters TResp Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Response public TResp Response { readonly get; set; } Property Value TResp ResponseMetadata public CommandResponseMetadata? ResponseMetadata { readonly get; set; } Property Value CommandResponseMetadata Methods CreateFromResponse(TResp) public static ExtendedResponse<TResp> CreateFromResponse(TResp response) Parameters response TResp Returns ExtendedResponse<TResp>"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.InvocationException.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.InvocationException.html",
    "title": "Class InvocationException | Azure IoT Operations .NET SDK",
    "keywords": "Class InvocationException Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll An Exception to be thrown by Command execution code when an invalid request is processed. public class InvocationException : Exception, ISerializable Inheritance object Exception InvocationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvocationException(string?, string?, string?) Initializes a new instance of the InvocationException class. public InvocationException(string? statusMessage = null, string? propertyName = null, string? propertyValue = null) Parameters statusMessage string An optional human-readable status message. propertyName string An optional name of the property that is invalid. propertyValue string An optional string representation of the invalid property value. Properties InvalidPropertyName An optional name of the property that is invalid. public string? InvalidPropertyName { get; } Property Value string InvalidPropertyValue An optional string representation of the invalid property value. public string? InvalidPropertyValue { get; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.RpcCallAsync-1.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.RpcCallAsync-1.html",
    "title": "Struct RpcCallAsync<TResp> | Azure IoT Operations .NET SDK",
    "keywords": "Struct RpcCallAsync<TResp> Namespace Azure.Iot.Operations.Protocol.RPC Assembly Azure.Iot.Operations.Protocol.dll public struct RpcCallAsync<TResp> where TResp : class Type Parameters TResp Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors RpcCallAsync(Task<ExtendedResponse<TResp>>, Guid) public RpcCallAsync(Task<ExtendedResponse<TResp>> task, Guid requestCorrelationData) Parameters task Task<ExtendedResponse<TResp>> requestCorrelationData Guid Properties ExtendedAsync public readonly Task<ExtendedResponse<TResp>> ExtendedAsync { get; } Property Value Task<ExtendedResponse<TResp>> RequestCorrelationData public readonly Guid RequestCorrelationData { get; } Property Value Guid Methods GetAwaiter() public TaskAwaiter<TResp> GetAwaiter() Returns TaskAwaiter<TResp> WithMetadata() public Task<ExtendedResponse<TResp>> WithMetadata() Returns Task<ExtendedResponse<TResp>>"
  },
  "api/Azure.Iot.Operations.Protocol.RPC.html": {
    "href": "api/Azure.Iot.Operations.Protocol.RPC.html",
    "title": "Namespace Azure.Iot.Operations.Protocol.RPC | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Protocol.RPC Classes CommandExecutor<TReq, TResp> CommandInvoker<TReq, TResp> CommandRequestMetadata CommandResponseMetadata InvocationException An Exception to be thrown by Command execution code when an invalid request is processed. Structs ExtendedRequest<TReq> ExtendedResponse<TResp> RpcCallAsync<TResp> Enums CommandStatusCode HTTP status codes used to indicate the status of a Command."
  },
  "api/Azure.Iot.Operations.Protocol.Retry.ExponentialBackoffRetryPolicy.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Retry.ExponentialBackoffRetryPolicy.html",
    "title": "Class ExponentialBackoffRetryPolicy | Azure IoT Operations .NET SDK",
    "keywords": "Class ExponentialBackoffRetryPolicy Namespace Azure.Iot.Operations.Protocol.Retry Assembly Azure.Iot.Operations.Protocol.dll public class ExponentialBackoffRetryPolicy : IRetryPolicy Inheritance object ExponentialBackoffRetryPolicy Implements IRetryPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExponentialBackoffRetryPolicy(uint, TimeSpan, bool) Creates an instance of this class. public ExponentialBackoffRetryPolicy(uint maxRetries, TimeSpan maxWait, bool useJitter = true) Parameters maxRetries uint The maximum number of retry attempts maxWait TimeSpan The maximum amount of time to wait between retries. useJitter bool Whether to add a small, random adjustment to the retry delay to avoid synchronicity in clients retrying. Methods ShouldRetry(uint, Exception, out TimeSpan) Method called by the client when an operation fails to determine if a retry should be attempted, and how long to wait until retrying the operation. public bool ShouldRetry(uint currentRetryCount, Exception lastException, out TimeSpan retryDelay) Parameters currentRetryCount uint The number of times the current operation has been attempted. lastException Exception The exception that prompted this retry policy check. retryDelay TimeSpan Set this to the desired time to delay before the next attempt. Returns bool True if the operation should be retried; otherwise false. Examples class CustomRetryPolicy : IRetryPolicy { public bool ShouldRetry(uint currentRetryCount, Exception lastException, out TimeSpan retryDelay) { // Add custom logic as needed upon determining if it should retry and set the retryDelay out parameter } } UpdateWithJitter(double) Gets jitter between 95% and 105% of the base time. protected TimeSpan UpdateWithJitter(double baseTimeMs) Parameters baseTimeMs double Returns TimeSpan"
  },
  "api/Azure.Iot.Operations.Protocol.Retry.IRetryPolicy.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Retry.IRetryPolicy.html",
    "title": "Interface IRetryPolicy | Azure IoT Operations .NET SDK",
    "keywords": "Interface IRetryPolicy Namespace Azure.Iot.Operations.Protocol.Retry Assembly Azure.Iot.Operations.Protocol.dll public interface IRetryPolicy Methods ShouldRetry(uint, Exception, out TimeSpan) Method called by the client when an operation fails to determine if a retry should be attempted, and how long to wait until retrying the operation. bool ShouldRetry(uint currentRetryCount, Exception lastException, out TimeSpan retryDelay) Parameters currentRetryCount uint The number of times the current operation has been attempted. lastException Exception The exception that prompted this retry policy check. retryDelay TimeSpan Set this to the desired time to delay before the next attempt. Returns bool True if the operation should be retried; otherwise false. Examples class CustomRetryPolicy : IRetryPolicy { public bool ShouldRetry(uint currentRetryCount, Exception lastException, out TimeSpan retryDelay) { // Add custom logic as needed upon determining if it should retry and set the retryDelay out parameter } }"
  },
  "api/Azure.Iot.Operations.Protocol.Retry.NoRetryPolicy.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Retry.NoRetryPolicy.html",
    "title": "Class NoRetryPolicy | Azure IoT Operations .NET SDK",
    "keywords": "Class NoRetryPolicy Namespace Azure.Iot.Operations.Protocol.Retry Assembly Azure.Iot.Operations.Protocol.dll A retry policy that will never retry. public class NoRetryPolicy : IRetryPolicy Inheritance object NoRetryPolicy Implements IRetryPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NoRetryPolicy() Creates a retry policy that will never retry. public NoRetryPolicy() Methods ShouldRetry(uint, Exception, out TimeSpan) Method called by the client when an operation fails to determine if a retry should be attempted, and how long to wait until retrying the operation. public bool ShouldRetry(uint currentRetryCount, Exception lastException, out TimeSpan retryDelay) Parameters currentRetryCount uint The number of times the current operation has been attempted. lastException Exception The exception that prompted this retry policy check. retryDelay TimeSpan Set this to the desired time to delay before the next attempt. Returns bool True if the operation should be retried; otherwise false. Examples class CustomRetryPolicy : IRetryPolicy { public bool ShouldRetry(uint currentRetryCount, Exception lastException, out TimeSpan retryDelay) { // Add custom logic as needed upon determining if it should retry and set the retryDelay out parameter } }"
  },
  "api/Azure.Iot.Operations.Protocol.Retry.RetryExpiredException.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Retry.RetryExpiredException.html",
    "title": "Class RetryExpiredException | Azure IoT Operations .NET SDK",
    "keywords": "Class RetryExpiredException Namespace Azure.Iot.Operations.Protocol.Retry Assembly Azure.Iot.Operations.Protocol.dll This exception is thrown when an operation is cancelled because the configured retry policy dictated that the operation shouldn't retry any longer. public class RetryExpiredException : Exception, ISerializable Inheritance object Exception RetryExpiredException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RetryExpiredException() public RetryExpiredException() RetryExpiredException(string?) public RetryExpiredException(string? message) Parameters message string RetryExpiredException(string?, Exception?) public RetryExpiredException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Azure.Iot.Operations.Protocol.Retry.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Retry.html",
    "title": "Namespace Azure.Iot.Operations.Protocol.Retry | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Protocol.Retry Classes ExponentialBackoffRetryPolicy NoRetryPolicy A retry policy that will never retry. RetryExpiredException This exception is thrown when an operation is cancelled because the configured retry policy dictated that the operation shouldn't retry any longer. Interfaces IRetryPolicy"
  },
  "api/Azure.Iot.Operations.Protocol.ServiceGroupIdAttribute.html": {
    "href": "api/Azure.Iot.Operations.Protocol.ServiceGroupIdAttribute.html",
    "title": "Class ServiceGroupIdAttribute | Azure IoT Operations .NET SDK",
    "keywords": "Class ServiceGroupIdAttribute Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll [AttributeUsage(AttributeTargets.Class)] public class ServiceGroupIdAttribute : Attribute Inheritance object Attribute ServiceGroupIdAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ServiceGroupIdAttribute(string) public ServiceGroupIdAttribute(string id) Parameters id string Properties Id public string Id { get; set; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Telemetry.CloudEvent.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Telemetry.CloudEvent.html",
    "title": "Class CloudEvent | Azure IoT Operations .NET SDK",
    "keywords": "Class CloudEvent Namespace Azure.Iot.Operations.Protocol.Telemetry Assembly Azure.Iot.Operations.Protocol.dll Implements the CloudEvent spec 1.0. The required fields are source, type, id and specversion. Id is required but we want to update it in the same instance. See CloudEvent Spec public class CloudEvent Inheritance object CloudEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CloudEvent(Uri, string, string) Implements the CloudEvent spec 1.0. The required fields are source, type, id and specversion. Id is required but we want to update it in the same instance. See CloudEvent Spec public CloudEvent(Uri source, string type = \"ms.aio.telemetry\", string specversion = \"1.0\") Parameters source Uri Source type string Type specversion string SpecVersion Properties DataContentType Content type of data value. This attribute enables data to carry any type of content, whereby format and encoding might differ from that of the chosen event format. public string? DataContentType { get; } Property Value string DataSchema Identifies the schema that data adheres to. Incompatible changes to the schema SHOULD be reflected by a different URI. public string? DataSchema { get; set; } Property Value string Id Identifies the event. Producers MUST ensure that source + id is unique for each distinct event. If a duplicate event is re-sent (e.g. due to a network error) it MAY have the same id. Consumers MAY assume that Events with identical source and id are duplicates. public string? Id { get; } Property Value string Source Identifies the context in which an event happened. Often this will include information such as the type of the event source, the organization publishing the event or the process that produced the event. The exact syntax and semantics behind the data encoded in the URI is defined by the event producer. public Uri? Source { get; } Property Value Uri SpecVersion The version of the CloudEvents specification which the event uses. This enables the interpretation of the context. Compliant event producers MUST use a value of 1.0 when referring to this version of the specification. public string SpecVersion { get; } Property Value string Subject Identifies the subject of the event in the context of the event producer (identified by source). In publish-subscribe scenarios, a subscriber will typically subscribe to events emitted by a source, but the source identifier alone might not be sufficient as a qualifier for any specific event if the source context has internal sub-structure. public string? Subject { get; } Property Value string Time Timestamp of when the occurrence happened. If the time of the occurrence cannot be determined then this attribute MAY be set to some other time (such as the current time) by the CloudEvents producer, however all producers for the same source MUST be consistent in this respect. public DateTime? Time { get; } Property Value DateTime? Type Contains a value describing the type of event related to the originating occurrence. Often this attribute is used for routing, observability, policy enforcement, etc. The format of this is producer defined and might include information such as the version of the type public string Type { get; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.Telemetry.IncomingTelemetryMetadata.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Telemetry.IncomingTelemetryMetadata.html",
    "title": "Class IncomingTelemetryMetadata | Azure IoT Operations .NET SDK",
    "keywords": "Class IncomingTelemetryMetadata Namespace Azure.Iot.Operations.Protocol.Telemetry Assembly Azure.Iot.Operations.Protocol.dll The metadata associated with every message received by a TelemetryReceiver<T>. public class IncomingTelemetryMetadata Inheritance object IncomingTelemetryMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Some metadata should be expected if it was sent by a TelemetrySender<T> but may not be present if the message was sent by something else. Properties CloudEvent Provides metadata about the CloudEvents header in the message. public CloudEvent? CloudEvent { get; } Property Value CloudEvent PacketId The Id of the received MQTT packet. This value can be used to acknowledge a received message via TelemetryReceiver<T>.AcknowledgeAsync(uint). public uint PacketId { get; } Property Value uint Timestamp A timestamp attached to the telemetry message. public HybridLogicalClock? Timestamp { get; } Property Value HybridLogicalClock Remarks This value is nullable only because a received message may not have sent it. Any message sent by TelemetrySender<T> will include a non-null timestamp. A message sent by anything else may or may not include this timestamp. UserData A dictionary of user properties that are sent along with the telemetry message from the TelemetrySender. public Dictionary<string, string> UserData { get; } Property Value Dictionary<string, string>"
  },
  "api/Azure.Iot.Operations.Protocol.Telemetry.OutgoingTelemetryMetadata.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Telemetry.OutgoingTelemetryMetadata.html",
    "title": "Class OutgoingTelemetryMetadata | Azure IoT Operations .NET SDK",
    "keywords": "Class OutgoingTelemetryMetadata Namespace Azure.Iot.Operations.Protocol.Telemetry Assembly Azure.Iot.Operations.Protocol.dll The metadata that can be sent with every publish packet sent by a TelemetrySender<T>. public class OutgoingTelemetryMetadata Inheritance object OutgoingTelemetryMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OutgoingTelemetryMetadata() Construct an instance with the default values. public OutgoingTelemetryMetadata() Remarks The CorrelationData field will be set to a new, random GUID. The Timestamp field will be set to the current HybridLogicalClock time for the process. The UserData field will be initialized with an empty dictionary; entries in this dictionary can be set by user code as desired. Properties CloudEvent public CloudEvent? CloudEvent { get; set; } Property Value CloudEvent Timestamp A mandatory timestamp attached to the telemetry message. public HybridLogicalClock Timestamp { get; } Property Value HybridLogicalClock Remarks A message sent by a TelemetrySender<T> will include a non-null timestamp. A message sent by anything else may or may not include this timestamp. UserData A dictionary of user properties that are sent along with the telemetry message from the TelemetrySender. public Dictionary<string, string> UserData { get; } Property Value Dictionary<string, string>"
  },
  "api/Azure.Iot.Operations.Protocol.Telemetry.TelemetryReceiver-1.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Telemetry.TelemetryReceiver-1.html",
    "title": "Class TelemetryReceiver<T> | Azure IoT Operations .NET SDK",
    "keywords": "Class TelemetryReceiver<T> Namespace Azure.Iot.Operations.Protocol.Telemetry Assembly Azure.Iot.Operations.Protocol.dll public abstract class TelemetryReceiver<T> : IAsyncDisposable where T : class Type Parameters T Inheritance object TelemetryReceiver<T> Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TelemetryReceiver(IMqttPubSubClient, string?, IPayloadSerializer) public TelemetryReceiver(IMqttPubSubClient mqttClient, string? telemetryName, IPayloadSerializer serializer) Parameters mqttClient IMqttPubSubClient telemetryName string serializer IPayloadSerializer Properties EffectiveTopicTokenMap Gets a dictionary used by this class's code for substituting tokens in telemetry topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. protected virtual IReadOnlyDictionary<string, string> EffectiveTopicTokenMap { get; } Property Value IReadOnlyDictionary<string, string> OnTelemetryReceived public Func<string, T, IncomingTelemetryMetadata, Task>? OnTelemetryReceived { get; set; } Property Value Func<string, T, IncomingTelemetryMetadata, Task> ServiceGroupId public string ServiceGroupId { get; init; } Property Value string TopicNamespace public string? TopicNamespace { get; set; } Property Value string TopicPattern public string TopicPattern { get; init; } Property Value string TopicTokenMap Gets a dictionary for adding token keys and their replacement strings, which will be substituted in telemetry topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. public virtual Dictionary<string, string> TopicTokenMap { get; } Property Value Dictionary<string, string> Methods DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public virtual ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public virtual ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask DisposeAsyncCore(bool) protected virtual ValueTask DisposeAsyncCore(bool disposing) Parameters disposing bool Returns ValueTask StartAsync(CancellationToken) public Task StartAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task StopAsync(CancellationToken) public Task StopAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/Azure.Iot.Operations.Protocol.Telemetry.TelemetrySender-1.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Telemetry.TelemetrySender-1.html",
    "title": "Class TelemetrySender<T> | Azure IoT Operations .NET SDK",
    "keywords": "Class TelemetrySender<T> Namespace Azure.Iot.Operations.Protocol.Telemetry Assembly Azure.Iot.Operations.Protocol.dll public abstract class TelemetrySender<T> : IAsyncDisposable where T : class Type Parameters T Inheritance object TelemetrySender<T> Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TelemetrySender(IMqttPubSubClient, string?, IPayloadSerializer) public TelemetrySender(IMqttPubSubClient mqttClient, string? telemetryName, IPayloadSerializer serializer) Parameters mqttClient IMqttPubSubClient telemetryName string serializer IPayloadSerializer Properties DataSchema Gets or sets the data schema used in a cloud event when one is associated with the telemetry. public string? DataSchema { get; set; } Property Value string EffectiveTopicTokenMap Gets a dictionary used by this class's code for substituting tokens in telemetry topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. protected virtual IReadOnlyDictionary<string, string> EffectiveTopicTokenMap { get; } Property Value IReadOnlyDictionary<string, string> TopicNamespace public string? TopicNamespace { get; set; } Property Value string TopicPattern public string TopicPattern { get; init; } Property Value string TopicTokenMap Gets a dictionary for adding token keys and their replacement strings, which will be substituted in telemetry topic patterns. Can be overridden by a derived class, enabling the key/value pairs to be augmented and/or combined with other key/value pairs. public virtual Dictionary<string, string> TopicTokenMap { get; } Property Value Dictionary<string, string> Methods DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public virtual ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public virtual ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask DisposeAsyncCore(bool) protected virtual ValueTask DisposeAsyncCore(bool disposing) Parameters disposing bool Returns ValueTask SendTelemetryAsync(T, MqttQualityOfServiceLevel, TimeSpan?, CancellationToken) public Task SendTelemetryAsync(T telemetry, MqttQualityOfServiceLevel qos = MqttQualityOfServiceLevel.AtLeastOnce, TimeSpan? telemetryTimeout = null, CancellationToken cancellationToken = default) Parameters telemetry T qos MqttQualityOfServiceLevel telemetryTimeout TimeSpan? cancellationToken CancellationToken Returns Task SendTelemetryAsync(T, OutgoingTelemetryMetadata, MqttQualityOfServiceLevel, TimeSpan?, CancellationToken) public Task SendTelemetryAsync(T telemetry, OutgoingTelemetryMetadata metadata, MqttQualityOfServiceLevel qos = MqttQualityOfServiceLevel.AtLeastOnce, TimeSpan? messageExpiryInterval = null, CancellationToken cancellationToken = default) Parameters telemetry T metadata OutgoingTelemetryMetadata qos MqttQualityOfServiceLevel messageExpiryInterval TimeSpan? cancellationToken CancellationToken Returns Task"
  },
  "api/Azure.Iot.Operations.Protocol.Telemetry.html": {
    "href": "api/Azure.Iot.Operations.Protocol.Telemetry.html",
    "title": "Namespace Azure.Iot.Operations.Protocol.Telemetry | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Protocol.Telemetry Classes CloudEvent Implements the CloudEvent spec 1.0. The required fields are source, type, id and specversion. Id is required but we want to update it in the same instance. See CloudEvent Spec IncomingTelemetryMetadata The metadata associated with every message received by a TelemetryReceiver<T>. OutgoingTelemetryMetadata The metadata that can be sent with every publish packet sent by a TelemetrySender<T>. TelemetryReceiver<T> TelemetrySender<T>"
  },
  "api/Azure.Iot.Operations.Protocol.TelemetryTopicAttribute.html": {
    "href": "api/Azure.Iot.Operations.Protocol.TelemetryTopicAttribute.html",
    "title": "Class TelemetryTopicAttribute | Azure IoT Operations .NET SDK",
    "keywords": "Class TelemetryTopicAttribute Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll [AttributeUsage(AttributeTargets.Class)] public class TelemetryTopicAttribute : Attribute Inheritance object Attribute TelemetryTopicAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TelemetryTopicAttribute(string) public TelemetryTopicAttribute(string topic) Parameters topic string Properties Topic public string Topic { get; set; } Property Value string"
  },
  "api/Azure.Iot.Operations.Protocol.WallClock.html": {
    "href": "api/Azure.Iot.Operations.Protocol.WallClock.html",
    "title": "Class WallClock | Azure IoT Operations .NET SDK",
    "keywords": "Class WallClock Namespace Azure.Iot.Operations.Protocol Assembly Azure.Iot.Operations.Protocol.dll public class WallClock : IWallClock Inheritance object WallClock Implements IWallClock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UtcNow public DateTime UtcNow { get; } Property Value DateTime Methods CreateCancellationTokenSource(TimeSpan) public CancellationTokenSource CreateCancellationTokenSource(TimeSpan delay) Parameters delay TimeSpan Returns CancellationTokenSource WaitAsync<T>(Task<T>, TimeSpan, CancellationToken) public Task<T> WaitAsync<T>(Task<T> task, TimeSpan timeout, CancellationToken cancellationToken) Parameters task Task<T> timeout TimeSpan cancellationToken CancellationToken Returns Task<T> Type Parameters T"
  },
  "api/Azure.Iot.Operations.Protocol.html": {
    "href": "api/Azure.Iot.Operations.Protocol.html",
    "title": "Namespace Azure.Iot.Operations.Protocol | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Protocol Namespaces Azure.Iot.Operations.Protocol.Connection Azure.Iot.Operations.Protocol.Events Azure.Iot.Operations.Protocol.Models Azure.Iot.Operations.Protocol.RPC Azure.Iot.Operations.Protocol.Retry Azure.Iot.Operations.Protocol.Telemetry Classes AkriMqttException AkriSystemProperties Static class that defines string values for MQTT User Properties. CommandBehaviorAttribute CommandTopicAttribute GuidExtensions HybridLogicalClock HybridLogicalClockException The exception type that is thrown when updating a HybridLogicalClock if an error occurs. ModelIdAttribute ServiceGroupIdAttribute TelemetryTopicAttribute WallClock Interfaces IDelayableQueueItem The base interface for all elements used in a BlockingConcurrentDelayableQueue<T>. IMqttClient An MQTT client interface that allows for connection management as well as publishing, subscribing, and unsubscribing. IMqttPubSubClient An MQTT client interface that is intentionally limited to publish and subscribe operations. Implementations of this interface may provide connect/disconnect functions and may or may not include retry logic to handle when a publish or subscribe is attempted when disconnected. IPayloadSerializer IWallClock Enums AkriMqttErrorKind PatternValidity"
  },
  "api/Azure.Iot.Operations.Services.Akri.CombinedPrefixedReadOnlyDictionary-1.html": {
    "href": "api/Azure.Iot.Operations.Services.Akri.CombinedPrefixedReadOnlyDictionary-1.html",
    "title": "Class CombinedPrefixedReadOnlyDictionary<TValue> | Azure IoT Operations .NET SDK",
    "keywords": "Class CombinedPrefixedReadOnlyDictionary<TValue> Namespace Azure.Iot.Operations.Services.Akri Assembly Azure.Iot.Operations.Services.dll An implementation of IReadOnlyDictionary that combines two IReadOnlyDictionary objects by prefixng their string keys. public class CombinedPrefixedReadOnlyDictionary<TValue> : IReadOnlyDictionary<string, TValue>, IReadOnlyCollection<KeyValuePair<string, TValue>>, IEnumerable<KeyValuePair<string, TValue>>, IEnumerable Type Parameters TValue The type of values in the combined dictionary. Inheritance object CombinedPrefixedReadOnlyDictionary<TValue> Implements IReadOnlyDictionary<string, TValue> IReadOnlyCollection<KeyValuePair<string, TValue>> IEnumerable<KeyValuePair<string, TValue>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CombinedPrefixedReadOnlyDictionary(string, IReadOnlyDictionary<string, TValue>, string, IReadOnlyDictionary<string, TValue>) Initializes a new instance of the CombinedPrefixedReadOnlyDictionary<TValue> class. public CombinedPrefixedReadOnlyDictionary(string prefix1, IReadOnlyDictionary<string, TValue> dict1, string prefix2, IReadOnlyDictionary<string, TValue> dict2) Parameters prefix1 string The prefix for keys in dict1. dict1 IReadOnlyDictionary<string, TValue> One of the IReadOnlyDictionary objects to combine. prefix2 string The prefix for keys in dict2. dict2 IReadOnlyDictionary<string, TValue> The other IReadOnlyDictionary object to combine."
  },
  "api/Azure.Iot.Operations.Services.Akri.DecimalString.html": {
    "href": "api/Azure.Iot.Operations.Services.Akri.DecimalString.html",
    "title": "Class DecimalString | Azure IoT Operations .NET SDK",
    "keywords": "Class DecimalString Namespace Azure.Iot.Operations.Services.Akri Assembly Azure.Iot.Operations.Services.dll public class DecimalString Inheritance object DecimalString Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DecimalString() public DecimalString() DecimalString(string) public DecimalString(string value) Parameters value string Methods Equals(DecimalString?) public virtual bool Equals(DecimalString? other) Parameters other DecimalString Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. TryParse(string, out DecimalString?) public static bool TryParse(string value, out DecimalString? decimalString) Parameters value string decimalString DecimalString Returns bool Operators operator ==(DecimalString?, DecimalString?) public static bool operator ==(DecimalString? x, DecimalString? y) Parameters x DecimalString y DecimalString Returns bool explicit operator DecimalString(double) public static explicit operator DecimalString(double doubleVal) Parameters doubleVal double Returns DecimalString explicit operator DecimalString(string) public static explicit operator DecimalString(string stringVal) Parameters stringVal string Returns DecimalString implicit operator double(DecimalString) public static implicit operator double(DecimalString decimalString) Parameters decimalString DecimalString Returns double implicit operator string(DecimalString) public static implicit operator string(DecimalString decimalString) Parameters decimalString DecimalString Returns string operator !=(DecimalString?, DecimalString?) public static bool operator !=(DecimalString? x, DecimalString? y) Parameters x DecimalString y DecimalString Returns bool"
  },
  "api/Azure.Iot.Operations.Services.Akri.DiscoveredAssetResourcesClient.html": {
    "href": "api/Azure.Iot.Operations.Services.Akri.DiscoveredAssetResourcesClient.html",
    "title": "Class DiscoveredAssetResourcesClient | Azure IoT Operations .NET SDK",
    "keywords": "Class DiscoveredAssetResourcesClient Namespace Azure.Iot.Operations.Services.Akri Assembly Azure.Iot.Operations.Services.dll public class DiscoveredAssetResourcesClient : IDiscoveredAssetResourcesClient, IAsyncDisposable Inheritance object DiscoveredAssetResourcesClient Implements IDiscoveredAssetResourcesClient IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DiscoveredAssetResourcesClient(IMqttPubSubClient) public DiscoveredAssetResourcesClient(IMqttPubSubClient pubSubClient) Parameters pubSubClient IMqttPubSubClient Methods DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask"
  },
  "api/Azure.Iot.Operations.Services.Akri.EmptyJson.html": {
    "href": "api/Azure.Iot.Operations.Services.Akri.EmptyJson.html",
    "title": "Class EmptyJson | Azure IoT Operations .NET SDK",
    "keywords": "Class EmptyJson Namespace Azure.Iot.Operations.Services.Akri Assembly Azure.Iot.Operations.Services.dll public class EmptyJson Inheritance object EmptyJson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Azure.Iot.Operations.Services.Akri.IDiscoveredAssetResourcesClient.html": {
    "href": "api/Azure.Iot.Operations.Services.Akri.IDiscoveredAssetResourcesClient.html",
    "title": "Interface IDiscoveredAssetResourcesClient | Azure IoT Operations .NET SDK",
    "keywords": "Interface IDiscoveredAssetResourcesClient Namespace Azure.Iot.Operations.Services.Akri Assembly Azure.Iot.Operations.Services.dll Interface for creating discovered assets and asset endpoint profiles. public interface IDiscoveredAssetResourcesClient : IAsyncDisposable Inherited Members IAsyncDisposable.DisposeAsync()"
  },
  "api/Azure.Iot.Operations.Services.Akri.Utf8JsonSerializer.html": {
    "href": "api/Azure.Iot.Operations.Services.Akri.Utf8JsonSerializer.html",
    "title": "Class Utf8JsonSerializer | Azure IoT Operations .NET SDK",
    "keywords": "Class Utf8JsonSerializer Namespace Azure.Iot.Operations.Services.Akri Assembly Azure.Iot.Operations.Services.dll public class Utf8JsonSerializer : IPayloadSerializer Inheritance object Utf8JsonSerializer Implements IPayloadSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields jsonSerializerOptions protected static readonly JsonSerializerOptions jsonSerializerOptions Field Value JsonSerializerOptions Properties CharacterDataFormatIndicator public int CharacterDataFormatIndicator { get; } Property Value int ContentType public string ContentType { get; } Property Value string Methods FromBytes<T>(byte[]?) public T FromBytes<T>(byte[]? payload) where T : class Parameters payload byte[] Returns T Type Parameters T ToBytes<T>(T?) public byte[]? ToBytes<T>(T? payload) where T : class Parameters payload T Returns byte[] Type Parameters T"
  },
  "api/Azure.Iot.Operations.Services.Akri.html": {
    "href": "api/Azure.Iot.Operations.Services.Akri.html",
    "title": "Namespace Azure.Iot.Operations.Services.Akri | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Services.Akri Classes CombinedPrefixedReadOnlyDictionary<TValue> An implementation of IReadOnlyDictionary that combines two IReadOnlyDictionary objects by prefixng their string keys. DecimalString DiscoveredAssetResourcesClient EmptyJson Utf8JsonSerializer Interfaces IDiscoveredAssetResourcesClient Interface for creating discovered assets and asset endpoint profiles."
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.CampaignRequestOptions.html",
    "title": "Class CampaignRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class CampaignRequestOptions Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public class CampaignRequestOptions Inheritance object CampaignRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SessionId The optional value to include in the lock's value. If not provided, the lock's value will equal the candidate's name. If it is provided, the lock's value will equal {candidate name}:{sessionId} public string? SessionId { get; set; } Property Value string Remarks If this value is provided, then you'll need to provide the same value to SessionId or attempts to resign will fail. By providing a unique sessionId, an application can use the same candidate name and/or the same MQTT client in different threads to campaign to be leader on the same lock without worrying about accidentally allowing two clients to both be leader at the same time."
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.CampaignResponse.html",
    "title": "Class CampaignResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class CampaignResponse Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public class CampaignResponse Inheritance object CampaignResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FencingToken public HybridLogicalClock? FencingToken { get; } Property Value HybridLogicalClock IsLeader public bool IsLeader { get; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.GetCurrentLeaderResponse.html",
    "title": "Class GetCurrentLeaderResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class GetCurrentLeaderResponse Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public class GetCurrentLeaderResponse Inheritance object GetCurrentLeaderResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentLeader The current leader. public LeaderElectionCandidate? CurrentLeader { get; set; } Property Value LeaderElectionCandidate Remarks This value is null if there is no current leader."
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.LeaderElectionAutomaticRenewalOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.LeaderElectionAutomaticRenewalOptions.html",
    "title": "Class LeaderElectionAutomaticRenewalOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class LeaderElectionAutomaticRenewalOptions Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public class LeaderElectionAutomaticRenewalOptions Inheritance object LeaderElectionAutomaticRenewalOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AutomaticRenewal If true, this client will automatically run for re-election until this value is set to false or when the client calls ResignAsync(ResignationRequestOptions?, CancellationToken) with CancelAutomaticRenewal set to true. public bool AutomaticRenewal { get; set; } Property Value bool ElectionTerm The length of each term that this client will automatically campaign for. public TimeSpan ElectionTerm { get; set; } Property Value TimeSpan Remarks This value only has millisecond-level precision. RenewalPeriod The period to wait between each attempt to campaign to be leader. public TimeSpan RenewalPeriod { get; set; } Property Value TimeSpan"
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.LeaderElectionCandidate.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.LeaderElectionCandidate.html",
    "title": "Class LeaderElectionCandidate | Azure IoT Operations .NET SDK",
    "keywords": "Class LeaderElectionCandidate Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll A single candidate that may be a leader. public class LeaderElectionCandidate : IEquatable<LeaderElectionCandidate> Inheritance object LeaderElectionCandidate Implements IEquatable<LeaderElectionCandidate> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Bytes public byte[] Bytes { get; } Property Value byte[] Methods Equals(LeaderElectionCandidate?) Indicates whether the current object is equal to another object of the same type. public bool Equals(LeaderElectionCandidate? other) Parameters other LeaderElectionCandidate An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetString() public string GetString() Returns string Operators implicit operator LeaderElectionCandidate?(string?) public static implicit operator LeaderElectionCandidate?(string? value) Parameters value string Returns LeaderElectionCandidate"
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.LeaderElectionClient.html",
    "title": "Class LeaderElectionClient | Azure IoT Operations .NET SDK",
    "keywords": "Class LeaderElectionClient Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll A client that uses the distributed State Store to perform leader election. public class LeaderElectionClient : IAsyncDisposable Inheritance object LeaderElectionClient Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Once elected, this client will not automatically renew its position by default. This client allows you to opt-in to auto-renew with AutomaticRenewalOptions, though. When a leader is elected via CampaignAsync(long, CampaignRequestOptions?, CancellationToken), the service will respond with a fencing token via FencingToken. This fencing token allows for State Store set/delete operations on shared resources without risk of race conditions. Constructors LeaderElectionClient(IMqttPubSubClient, string, string?) Construct a new leader election client. public LeaderElectionClient(IMqttPubSubClient mqttClient, string leadershipPositionId, string? candidateName = null) Parameters mqttClient IMqttPubSubClient The mqtt client to use for I/O. leadershipPositionId string The identifier of the leadership position that this client can campaign for. Each client that will campaign for the same leadership role must share the same value for this parameter. candidateName string The name to represent this client. Other clients can look up the current leader's name. Properties AutomaticRenewalOptions The options for automatically re-campaigning to be leader at the end of a term as leader. By default, no automatic renewing happens. public LeaderElectionAutomaticRenewalOptions AutomaticRenewalOptions { get; set; } Property Value LeaderElectionAutomaticRenewalOptions Remarks These options must be set before calling CampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken). Once set, the automatic renewal will begin after the first call to CampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken). The result of automatic renewals can be accessed via LastKnownCampaignResult. CandidateName The name of this client that is used when campaigning to be leader. public string CandidateName { get; } Property Value string LastKnownCampaignResult The result of the most recently run campaign. public CampaignResponse? LastKnownCampaignResult { get; } Property Value CampaignResponse Remarks This value captures the result of automatic re-campaigning with AutomaticRenewalOptions. Methods CampaignAndUpdateValueAsync(StateStoreKey, Func<StateStoreValue?, StateStoreValue?>, TimeSpan?, CancellationToken) public Task CampaignAndUpdateValueAsync(StateStoreKey key, Func<StateStoreValue?, StateStoreValue?> updateValueFunc, TimeSpan? maximumTermLength = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey updateValueFunc Func<StateStoreValue, StateStoreValue> maximumTermLength TimeSpan? cancellationToken CancellationToken Returns Task CampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken) Await until this client is elected leader or cancellation is requested. public virtual Task<CampaignResponse> CampaignAsync(TimeSpan electionTerm, CampaignRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters electionTerm TimeSpan How long the client will be leader if elected. This value only has millisecond-level precision. options CampaignRequestOptions The optional parameters for this request. cancellationToken CancellationToken Cancellation token Returns Task<CampaignResponse> The result of the campaign. Remarks Once elected, this client will not automatically renew its position by default. This client allows you to opt-in to auto-renew with AutomaticRenewalOptions, though. DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask DisposeAsyncCore(bool) protected virtual ValueTask DisposeAsyncCore(bool disposing) Parameters disposing bool Returns ValueTask GetCurrentLeaderAsync(CancellationToken) Get the name of the current leader. public virtual Task<GetCurrentLeaderResponse> GetCurrentLeaderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token. Returns Task<GetCurrentLeaderResponse> The details about the current leader. ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions?, CancellationToken) Start receiving notifications when the leader changes. public virtual Task ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters options ObserveLeadershipChangesRequestOptions The optional parameters for this request. cancellationToken CancellationToken Cancellation token. Returns Task Remarks Users who want to watch lock holder change events must first set one or more handlers on LeadershipChangeEventReceivedAsync, then call this function. To stop watching lock holder change events, call UnobserveLeadershipChangesAsync(CancellationToken) and then remove any handlers from LeadershipChangeEventReceivedAsync. ResignAsync(ResignationRequestOptions?, CancellationToken) Resign from being the leader. public virtual Task<ResignationResponse> ResignAsync(ResignationRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters options ResignationRequestOptions The optional parameters for this request. cancellationToken CancellationToken Cancellation token. Returns Task<ResignationResponse> The result of the attempted resignation. TryCampaignAsync(TimeSpan, CampaignRequestOptions?, CancellationToken) Make a single attempt to campaign to be leader. public virtual Task<CampaignResponse> TryCampaignAsync(TimeSpan electionTerm, CampaignRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters electionTerm TimeSpan How long the client will be leader if elected. This value only has millisecond-level precision. options CampaignRequestOptions The optional parameters for this request. cancellationToken CancellationToken Cancellation token Returns Task<CampaignResponse> The result of the campaign. Remarks Once elected, this client will not automatically renew its position by default. This client allows you to opt-in to auto-renew with AutomaticRenewalOptions, though. UnobserveLeadershipChangesAsync(CancellationToken) Stop receiving notifications when the leader changes. public virtual Task UnobserveLeadershipChangesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token. Returns Task Remarks Users who want to watch lock holder change events must first set one or more handlers on LeadershipChangeEventReceivedAsync, then call ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions?, CancellationToken). To stop watching lock holder change events, call this function and then remove any handlers from LeadershipChangeEventReceivedAsync. Events LeadershipChangeEventReceivedAsync The callback that executes whenever the current leader changes. public event Func<object?, LeadershipChangeEventArgs, Task>? LeadershipChangeEventReceivedAsync Event Type Func<object, LeadershipChangeEventArgs, Task> Remarks Users who want to watch leadership change events must first set this callback, then call ObserveLeadershipChangesAsync(ObserveLeadershipChangesRequestOptions?, CancellationToken). To stop watching leadership change events, call UnobserveLeadershipChangesAsync(CancellationToken) and then remove any handlers from this object."
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.LeadershipChangeEventArgs.html",
    "title": "Class LeadershipChangeEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class LeadershipChangeEventArgs Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public sealed class LeadershipChangeEventArgs : EventArgs Inheritance object EventArgs LeadershipChangeEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties NewLeader The new leader. This value is null if this update is that the previous leader resigned or ended their term. public LeaderElectionCandidate? NewLeader { get; } Property Value LeaderElectionCandidate NewState The new state of the leadership position. public LeadershipPositionState NewState { get; } Property Value LeadershipPositionState Timestamp The timestamp associated with this event. public HybridLogicalClock Timestamp { get; } Property Value HybridLogicalClock"
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.LeadershipPositionState.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.LeadershipPositionState.html",
    "title": "Enum LeadershipPositionState | Azure IoT Operations .NET SDK",
    "keywords": "Enum LeadershipPositionState Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll The state of the leadership position public enum LeadershipPositionState Fields LeaderElected = 0 A leader was just elected. NoLeader = 1 A leader just resigned or their term just ended. A new leader can be elected at this time."
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.ObserveLeadershipChangesRequestOptions.html",
    "title": "Class ObserveLeadershipChangesRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class ObserveLeadershipChangesRequestOptions Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public class ObserveLeadershipChangesRequestOptions Inheritance object ObserveLeadershipChangesRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GetNewLeader If true, notifications about this leadership position changing will include the new leader after the change. If false, notifications about this lock changing will not include the new leader. public bool GetNewLeader { get; set; } Property Value bool Remarks The new value will be set in NewLeader"
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.ResignationRequestOptions.html",
    "title": "Class ResignationRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class ResignationRequestOptions Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public class ResignationRequestOptions Inheritance object ResignationRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CancelAutomaticRenewal If true, this operation will also stop any auto-renewing configured by AutomaticRenewalOptions. If false, any auto-renewing will continue as-is. public bool CancelAutomaticRenewal { get; set; } Property Value bool Remarks By default, auto-renewal will be cancelled. SessionId The optional value to include in the lock's value. public string? SessionId { get; set; } Property Value string Remarks Only provide this value if the sessionId was set when campaigning to be leader in SessionId. If the sessionId was set when campaigning, but not when resigning (or vice versa), then attempts to resign will fail. By providing a unique sessionId, an application can use the same candidate name and/or the same MQTT client in different threads to campaign to be leader on the same lock without worrying about accidentally allowing two clients to both be leader at the same time."
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.ResignationResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.ResignationResponse.html",
    "title": "Class ResignationResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class ResignationResponse Namespace Azure.Iot.Operations.Services.LeaderElection Assembly Azure.Iot.Operations.Services.dll public class ResignationResponse Inheritance object ResignationResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Success True if the lock was successfully released and false otherwise. public bool Success { get; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Services.LeaderElection.html": {
    "href": "api/Azure.Iot.Operations.Services.LeaderElection.html",
    "title": "Namespace Azure.Iot.Operations.Services.LeaderElection | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Services.LeaderElection Classes CampaignRequestOptions CampaignResponse GetCurrentLeaderResponse LeaderElectionAutomaticRenewalOptions LeaderElectionCandidate A single candidate that may be a leader. LeaderElectionClient A client that uses the distributed State Store to perform leader election. LeadershipChangeEventArgs ObserveLeadershipChangesRequestOptions ResignationRequestOptions ResignationResponse Enums LeadershipPositionState The state of the leadership position"
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.AcquireLockRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.AcquireLockRequestOptions.html",
    "title": "Class AcquireLockRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class AcquireLockRequestOptions Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll Optional fields for an acquire lock request. public class AcquireLockRequestOptions Inheritance object AcquireLockRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SessionId The optional value to include in the lock's value. If not provided, the lock's value will equal the lock holder name. If it is provided, the lock's value will equal {holderName}:{sessionId} public string? SessionId { get; set; } Property Value string Remarks If this value is provided, then you'll need to provide the same value to SessionId or attempts to release the lock will fail. By providing a unique sessionId, an application can use the same holderName and/or the same MQTT client in different threads to acquire the same lock without worrying about accidentally allowing two clients to both own a lock at the same time."
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.AcquireLockResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.AcquireLockResponse.html",
    "title": "Class AcquireLockResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class AcquireLockResponse Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll The fields returned by the service in response to an acquire lock request. public class AcquireLockResponse Inheritance object AcquireLockResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FencingToken The fencing token returned by the service if the lock was successfully acquired. If the lock was not successfully acquired, then this value will be null. public HybridLogicalClock? FencingToken { get; } Property Value HybridLogicalClock Success True if the lock was successfully acquired and false otherwise. public bool Success { get; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.GetLockHolderResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.GetLockHolderResponse.html",
    "title": "Class GetLockHolderResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class GetLockHolderResponse Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll public class GetLockHolderResponse Inheritance object GetLockHolderResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LockHolder The current lock holder. public LeasedLockHolder? LockHolder { get; } Property Value LeasedLockHolder Remarks This value is null if no one is currently holding the lock. A lock holder's value is set when a LeasedLockClient is constructed."
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.LeasedLockAutomaticRenewalOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.LeasedLockAutomaticRenewalOptions.html",
    "title": "Class LeasedLockAutomaticRenewalOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class LeasedLockAutomaticRenewalOptions Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll public class LeasedLockAutomaticRenewalOptions Inheritance object LeasedLockAutomaticRenewalOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AutomaticRenewal If true, this client will automatically attempt to renew ownership of a lock until this value is set to false or when the client calls ReleaseLockAsync(ReleaseLockRequestOptions?, CancellationToken) with CancelAutomaticRenewal set to true. public bool AutomaticRenewal { get; set; } Property Value bool LeaseTermLength The length of each lease that this client will automatically re-acquire the lock for. public TimeSpan LeaseTermLength { get; set; } Property Value TimeSpan Remarks This value only has millisecond-level precision. RenewalPeriod The period to wait between each attempt to re-acquire the lock. public TimeSpan RenewalPeriod { get; set; } Property Value TimeSpan"
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.LeasedLockClient.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.LeasedLockClient.html",
    "title": "Class LeasedLockClient | Azure IoT Operations .NET SDK",
    "keywords": "Class LeasedLockClient Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll A client to facilitate leased lock operations on a specific, provided lock name. public class LeasedLockClient : IAsyncDisposable Inheritance object LeasedLockClient Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Once acquired, a lock will not be automatically renewed by default. This client allows you to opt-in to auto-renew with AutomaticRenewalOptions, though. When a lock is granted via AcquireLockAsync(TimeSpan, AcquireLockRequestOptions?, CancellationToken), the service will respond with a fencing token via FencingToken. This fencing token allows for State Store set/delete operations on shared resources without risk of race conditions. Constructors LeasedLockClient(IMqttPubSubClient, string, string?) Construct a new leased lock client. public LeasedLockClient(IMqttPubSubClient mqttClient, string lockName, string? lockHolderName = null) Parameters mqttClient IMqttPubSubClient The client to use for I/O operations. lockName string The name of the lock to acquire/release. lockHolderName string The name for this client that will hold a lock. Other processes will be able to check which client holds a lock by name. By default, this is set to the MQTT client ID. LeasedLockClient(IStateStoreClient, string, string) public LeasedLockClient(IStateStoreClient stateStoreClient, string lockName, string lockHolderName) Parameters stateStoreClient IStateStoreClient lockName string lockHolderName string Properties AutomaticRenewalOptions The options for automatically re-acquiring a lock before the previous lease expires. By default, no automatic re-acquiring happens. public LeasedLockAutomaticRenewalOptions AutomaticRenewalOptions { get; set; } Property Value LeasedLockAutomaticRenewalOptions Remarks These options must be set before calling AcquireLockAsync(TimeSpan, AcquireLockRequestOptions?, CancellationToken). Once set, the automatic renewal will begin after the first call to AcquireLockAsync(TimeSpan, AcquireLockRequestOptions?, CancellationToken). The result of automatic renewals can be accessed via MostRecentAcquireLockResponse. LockHolderName The name this client uses when trying to acquire the leased lock. public string LockHolderName { get; } Property Value string MostRecentAcquireLockResponse The result of the most recent attempt at acquiring the lock. public AcquireLockResponse? MostRecentAcquireLockResponse { get; } Property Value AcquireLockResponse Remarks This value captures the result of automatic re-renewing of the lock with AutomaticRenewalOptions. Methods AcquireLockAndUpdateValueAsync(StateStoreKey, Func<StateStoreValue?, StateStoreValue?>, TimeSpan?, CancellationToken) Block until the lock is acquired, update the value of the state store resource based on its current value, then release the lock. public Task AcquireLockAndUpdateValueAsync(StateStoreKey key, Func<StateStoreValue?, StateStoreValue?> updateValueFunc, TimeSpan? maximumLeaseDuration = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The state store key whose value will be updated. updateValueFunc Func<StateStoreValue, StateStoreValue> The function to execute after the lock is acquired. The parameter of this function contains the current value of the state store key. The return value of this function is the new value that you wish the state store key to have. maximumLeaseDuration TimeSpan? The maximum length of time that the client will lease the lock for once acquired. Under normal circumstances, this function will release the lock after updating the value of the shared resource, but it is possible that this client is interrupted or encounters a fatal exception. By setting a low value for this field, you limit how long the lock can be acquired for before it is released automatically by the service. cancellationToken CancellationToken Cancellation token. Returns Task Remarks This function will always release the lock if it was acquired. Even if cancellation is requested when the lock is acquired, this function will release the lock. AcquireLockAsync(TimeSpan, AcquireLockRequestOptions?, CancellationToken) public virtual Task<AcquireLockResponse> AcquireLockAsync(TimeSpan leaseDuration, AcquireLockRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters leaseDuration TimeSpan options AcquireLockRequestOptions cancellationToken CancellationToken Returns Task<AcquireLockResponse> DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask DisposeAsyncCore(bool) protected virtual ValueTask DisposeAsyncCore(bool disposing) Parameters disposing bool Returns ValueTask GetLockHolderAsync(CancellationToken) Get the current holder of the lock. public virtual Task<GetLockHolderResponse> GetLockHolderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token. Returns Task<GetLockHolderResponse> The details about the current holder of the lock. Remarks When acquired, a lock has a value assigned to it which follows the format: {lockHolderName}:{sessionId}. This function will return this value so that the owner of the lock can be identified by one or both of these fields. ObserveLockAsync(ObserveLockRequestOptions?, CancellationToken) Start receiving notifications when the lock holder changes for this leased lock. public virtual Task ObserveLockAsync(ObserveLockRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters options ObserveLockRequestOptions The optional parameters for this request. cancellationToken CancellationToken Cancellation token. Returns Task Remarks Users who want to watch lock holder change events must first set one or more handlers on LockChangeEventReceivedAsync, then call this function. To stop watching lock holder change events, call UnobserveLockAsync(CancellationToken) and then remove any handlers from LockChangeEventReceivedAsync. ReleaseLockAsync(ReleaseLockRequestOptions?, CancellationToken) Attempt to release a lock with the provided name. public virtual Task<ReleaseLockResponse> ReleaseLockAsync(ReleaseLockRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters options ReleaseLockRequestOptions cancellationToken CancellationToken Returns Task<ReleaseLockResponse> The response to the request. TryAcquireLockAsync(TimeSpan, AcquireLockRequestOptions?, CancellationToken) Attempt to acquire a lock with the provided name. public virtual Task<AcquireLockResponse> TryAcquireLockAsync(TimeSpan leaseDuration, AcquireLockRequestOptions? options = null, CancellationToken cancellationToken = default) Parameters leaseDuration TimeSpan The duration for which the lock will be held. This value only has millisecond-level precision. options AcquireLockRequestOptions cancellationToken CancellationToken Returns Task<AcquireLockResponse> AcquireLockResponse object with result (and fencing token if the lock was successfully acquired.) Remarks Once acquired, a lock will not be automatically renewed by default. This client allows you to opt-in to auto-renew with AutomaticRenewalOptions, though. When acquired, a lock has a value assigned to it which follows either the format {lockHolderName}:{sessionId} if a sessionId is provided by options or just {lockHolderName} if no sessionId is provided. The lock holder name is chosen when constructing this client and a sessionId can be chosen (or omitted, by default) each attempt to acquire a lock. UnobserveLockAsync(CancellationToken) Stop receiving notifications when the lock holder changes. public virtual Task UnobserveLockAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token. Returns Task Remarks Users who want to watch lock holder change events must first set one or more handlers on LockChangeEventReceivedAsync, then call ObserveLockAsync(ObserveLockRequestOptions?, CancellationToken). To stop watching lock holder change events, call this function and then remove any handlers from LockChangeEventReceivedAsync. Events LockChangeEventReceivedAsync The callback that executes whenever the current holder of the lock changes. public event Func<object?, LockChangeEventArgs, Task>? LockChangeEventReceivedAsync Event Type Func<object, LockChangeEventArgs, Task> Remarks Users who want to watch lock holder change events must first set this callback, then call ObserveLockAsync(ObserveLockRequestOptions?, CancellationToken) To stop watching lock holder change events, call UnobserveLockAsync(CancellationToken) and then remove any handlers from this object."
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.LeasedLockHolder.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.LeasedLockHolder.html",
    "title": "Class LeasedLockHolder | Azure IoT Operations .NET SDK",
    "keywords": "Class LeasedLockHolder Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll A single entity that may hold a leased lock. public class LeasedLockHolder : IEquatable<LeasedLockHolder> Inheritance object LeasedLockHolder Implements IEquatable<LeasedLockHolder> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Bytes public byte[] Bytes { get; } Property Value byte[] Methods Equals(LeasedLockHolder?) Indicates whether the current object is equal to another object of the same type. public bool Equals(LeasedLockHolder? other) Parameters other LeasedLockHolder An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetString() public string GetString() Returns string Operators implicit operator LeasedLockHolder(string) public static implicit operator LeasedLockHolder(string value) Parameters value string Returns LeasedLockHolder"
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.LockChangeEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.LockChangeEventArgs.html",
    "title": "Class LockChangeEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class LockChangeEventArgs Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll public sealed class LockChangeEventArgs : EventArgs Inheritance object EventArgs LockChangeEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties NewLockHolder The new holder of the lock. This value is null if this update is that the lock was released. public LeasedLockHolder? NewLockHolder { get; } Property Value LeasedLockHolder NewState The new state of the lock. public LockState NewState { get; } Property Value LockState Timestamp The timestamp associated with this event. public HybridLogicalClock Timestamp { get; } Property Value HybridLogicalClock"
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.LockState.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.LockState.html",
    "title": "Enum LockState | Azure IoT Operations .NET SDK",
    "keywords": "Enum LockState Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll The state of the leased lock. public enum LockState Fields Acquired = 0 The lock was just acquired. Released = 1 The lock was released, or the previous lease on the lock expired. The lock is available to acquire at this time."
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.ObserveLockRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.ObserveLockRequestOptions.html",
    "title": "Class ObserveLockRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class ObserveLockRequestOptions Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll public class ObserveLockRequestOptions Inheritance object ObserveLockRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GetNewValue If true, notifications about this lock changing will include the new holder of the lock after the change. If false, notifications about this lock changing will not include the new holder. public bool GetNewValue { get; set; } Property Value bool Remarks The new value will be set in NewLockHolder"
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.ReleaseLockRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.ReleaseLockRequestOptions.html",
    "title": "Class ReleaseLockRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class ReleaseLockRequestOptions Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll Optional fields for a release lock request. public class ReleaseLockRequestOptions Inheritance object ReleaseLockRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CancelAutomaticRenewal If true, this operation will also stop any auto-renewing configured by AutomaticRenewalOptions. If false, any auto-renewing will continue as-is. public bool CancelAutomaticRenewal { get; set; } Property Value bool Remarks By default, auto-renewal will be cancelled. SessionId The optional value to include in the lock's value. public string? SessionId { get; set; } Property Value string Remarks Only provide this value if the sessionId was set when acquiring the lock in SessionId. If the sessionId was set when acquiring the lock, but not when releasing the lock (or vice versa), then attempts to release the lock will fail. By providing a unique sessionId, an application can use the same holderName and/or the same MQTT client in different threads to acquire the same lock without worrying about accidentally allowing two clients to both own a lock at the same time."
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.ReleaseLockResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.ReleaseLockResponse.html",
    "title": "Class ReleaseLockResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class ReleaseLockResponse Namespace Azure.Iot.Operations.Services.LeasedLock Assembly Azure.Iot.Operations.Services.dll The fields returned by the service in response to a release lock request. public class ReleaseLockResponse Inheritance object ReleaseLockResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Success True if the lock was successfully released and false otherwise. public bool Success { get; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Services.LeasedLock.html": {
    "href": "api/Azure.Iot.Operations.Services.LeasedLock.html",
    "title": "Namespace Azure.Iot.Operations.Services.LeasedLock | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Services.LeasedLock Classes AcquireLockRequestOptions Optional fields for an acquire lock request. AcquireLockResponse The fields returned by the service in response to an acquire lock request. GetLockHolderResponse LeasedLockAutomaticRenewalOptions LeasedLockClient A client to facilitate leased lock operations on a specific, provided lock name. LeasedLockHolder A single entity that may hold a leased lock. LockChangeEventArgs ObserveLockRequestOptions ReleaseLockRequestOptions Optional fields for a release lock request. ReleaseLockResponse The fields returned by the service in response to a release lock request. Enums LockState The state of the leased lock."
  },
  "api/Azure.Iot.Operations.Services.SchemaRegistry.CombinedPrefixedReadOnlyDictionary-1.html": {
    "href": "api/Azure.Iot.Operations.Services.SchemaRegistry.CombinedPrefixedReadOnlyDictionary-1.html",
    "title": "Class CombinedPrefixedReadOnlyDictionary<TValue> | Azure IoT Operations .NET SDK",
    "keywords": "Class CombinedPrefixedReadOnlyDictionary<TValue> Namespace Azure.Iot.Operations.Services.SchemaRegistry Assembly Azure.Iot.Operations.Services.dll An implementation of IReadOnlyDictionary that combines two IReadOnlyDictionary objects by prefixng their string keys. public class CombinedPrefixedReadOnlyDictionary<TValue> : IReadOnlyDictionary<string, TValue>, IReadOnlyCollection<KeyValuePair<string, TValue>>, IEnumerable<KeyValuePair<string, TValue>>, IEnumerable Type Parameters TValue The type of values in the combined dictionary. Inheritance object CombinedPrefixedReadOnlyDictionary<TValue> Implements IReadOnlyDictionary<string, TValue> IReadOnlyCollection<KeyValuePair<string, TValue>> IEnumerable<KeyValuePair<string, TValue>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CombinedPrefixedReadOnlyDictionary(string, IReadOnlyDictionary<string, TValue>, string, IReadOnlyDictionary<string, TValue>) Initializes a new instance of the CombinedPrefixedReadOnlyDictionary<TValue> class. public CombinedPrefixedReadOnlyDictionary(string prefix1, IReadOnlyDictionary<string, TValue> dict1, string prefix2, IReadOnlyDictionary<string, TValue> dict2) Parameters prefix1 string The prefix for keys in dict1. dict1 IReadOnlyDictionary<string, TValue> One of the IReadOnlyDictionary objects to combine. prefix2 string The prefix for keys in dict2. dict2 IReadOnlyDictionary<string, TValue> The other IReadOnlyDictionary object to combine."
  },
  "api/Azure.Iot.Operations.Services.SchemaRegistry.EmptyJson.html": {
    "href": "api/Azure.Iot.Operations.Services.SchemaRegistry.EmptyJson.html",
    "title": "Class EmptyJson | Azure IoT Operations .NET SDK",
    "keywords": "Class EmptyJson Namespace Azure.Iot.Operations.Services.SchemaRegistry Assembly Azure.Iot.Operations.Services.dll public class EmptyJson Inheritance object EmptyJson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Azure.Iot.Operations.Services.SchemaRegistry.ISchemaRegistryClient.html": {
    "href": "api/Azure.Iot.Operations.Services.SchemaRegistry.ISchemaRegistryClient.html",
    "title": "Interface ISchemaRegistryClient | Azure IoT Operations .NET SDK",
    "keywords": "Interface ISchemaRegistryClient Namespace Azure.Iot.Operations.Services.SchemaRegistry Assembly Azure.Iot.Operations.Services.dll public interface ISchemaRegistryClient : IAsyncDisposable Inherited Members IAsyncDisposable.DisposeAsync() Methods GetAsync(string, string, TimeSpan?, CancellationToken) Task<Object_Ms_Adr_SchemaRegistry_Schema__1?> GetAsync(string schemaId, string version = \"1.0.0\", TimeSpan? timeout = null, CancellationToken cancellationToken = default) Parameters schemaId string version string timeout TimeSpan? cancellationToken CancellationToken Returns Task<Object_Ms_Adr_SchemaRegistry_Schema__1>"
  },
  "api/Azure.Iot.Operations.Services.SchemaRegistry.SchemaRegistryClient.html": {
    "href": "api/Azure.Iot.Operations.Services.SchemaRegistry.SchemaRegistryClient.html",
    "title": "Class SchemaRegistryClient | Azure IoT Operations .NET SDK",
    "keywords": "Class SchemaRegistryClient Namespace Azure.Iot.Operations.Services.SchemaRegistry Assembly Azure.Iot.Operations.Services.dll public class SchemaRegistryClient : ISchemaRegistryClient, IAsyncDisposable Inheritance object SchemaRegistryClient Implements ISchemaRegistryClient IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SchemaRegistryClient(IMqttPubSubClient) public SchemaRegistryClient(IMqttPubSubClient pubSubClient) Parameters pubSubClient IMqttPubSubClient Methods DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. GetAsync(string, string, TimeSpan?, CancellationToken) public Task<Object_Ms_Adr_SchemaRegistry_Schema__1?> GetAsync(string schemaId, string version = \"1.0.0\", TimeSpan? timeout = null, CancellationToken cancellationToken = default) Parameters schemaId string version string timeout TimeSpan? cancellationToken CancellationToken Returns Task<Object_Ms_Adr_SchemaRegistry_Schema__1>"
  },
  "api/Azure.Iot.Operations.Services.SchemaRegistry.Utf8JsonSerializer.html": {
    "href": "api/Azure.Iot.Operations.Services.SchemaRegistry.Utf8JsonSerializer.html",
    "title": "Class Utf8JsonSerializer | Azure IoT Operations .NET SDK",
    "keywords": "Class Utf8JsonSerializer Namespace Azure.Iot.Operations.Services.SchemaRegistry Assembly Azure.Iot.Operations.Services.dll public class Utf8JsonSerializer : IPayloadSerializer Inheritance object Utf8JsonSerializer Implements IPayloadSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields jsonSerializerOptions protected static readonly JsonSerializerOptions jsonSerializerOptions Field Value JsonSerializerOptions Properties CharacterDataFormatIndicator public int CharacterDataFormatIndicator { get; } Property Value int ContentType public string ContentType { get; } Property Value string Methods FromBytes<T>(byte[]?) public T FromBytes<T>(byte[]? payload) where T : class Parameters payload byte[] Returns T Type Parameters T ToBytes<T>(T?) public byte[]? ToBytes<T>(T? payload) where T : class Parameters payload T Returns byte[] Type Parameters T"
  },
  "api/Azure.Iot.Operations.Services.SchemaRegistry.html": {
    "href": "api/Azure.Iot.Operations.Services.SchemaRegistry.html",
    "title": "Namespace Azure.Iot.Operations.Services.SchemaRegistry | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Services.SchemaRegistry Classes CombinedPrefixedReadOnlyDictionary<TValue> An implementation of IReadOnlyDictionary that combines two IReadOnlyDictionary objects by prefixng their string keys. EmptyJson SchemaRegistryClient Utf8JsonSerializer Interfaces ISchemaRegistryClient"
  },
  "api/Azure.Iot.Operations.Services.StateStore.CombinedPrefixedReadOnlyDictionary-1.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.CombinedPrefixedReadOnlyDictionary-1.html",
    "title": "Class CombinedPrefixedReadOnlyDictionary<TValue> | Azure IoT Operations .NET SDK",
    "keywords": "Class CombinedPrefixedReadOnlyDictionary<TValue> Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll An implementation of IReadOnlyDictionary that combines two IReadOnlyDictionary objects by prefixng their string keys. public class CombinedPrefixedReadOnlyDictionary<TValue> : IReadOnlyDictionary<string, TValue>, IReadOnlyCollection<KeyValuePair<string, TValue>>, IEnumerable<KeyValuePair<string, TValue>>, IEnumerable Type Parameters TValue The type of values in the combined dictionary. Inheritance object CombinedPrefixedReadOnlyDictionary<TValue> Implements IReadOnlyDictionary<string, TValue> IReadOnlyCollection<KeyValuePair<string, TValue>> IEnumerable<KeyValuePair<string, TValue>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CombinedPrefixedReadOnlyDictionary(string, IReadOnlyDictionary<string, TValue>, string, IReadOnlyDictionary<string, TValue>) Initializes a new instance of the CombinedPrefixedReadOnlyDictionary<TValue> class. public CombinedPrefixedReadOnlyDictionary(string prefix1, IReadOnlyDictionary<string, TValue> dict1, string prefix2, IReadOnlyDictionary<string, TValue> dict2) Parameters prefix1 string The prefix for keys in dict1. dict1 IReadOnlyDictionary<string, TValue> One of the IReadOnlyDictionary objects to combine. prefix2 string The prefix for keys in dict2. dict2 IReadOnlyDictionary<string, TValue> The other IReadOnlyDictionary object to combine."
  },
  "api/Azure.Iot.Operations.Services.StateStore.IStateStoreClient.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.IStateStoreClient.html",
    "title": "Interface IStateStoreClient | Azure IoT Operations .NET SDK",
    "keywords": "Interface IStateStoreClient Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll The interface for interacting with a generic state store. public interface IStateStoreClient : IAsyncDisposable Inherited Members IAsyncDisposable.DisposeAsync() Remarks StateStoreClient provides an implementation of this interface for the state store that is part of Akri MQ. Methods DeleteAsync(StateStoreKey, StateStoreDeleteRequestOptions?, TimeSpan?, CancellationToken) Delete the provided key from the State Store. Task<StateStoreDeleteResponse> DeleteAsync(StateStoreKey key, StateStoreDeleteRequestOptions? options = null, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to delete from the State Store. options StateStoreDeleteRequestOptions The optional parameters for this request. OnlyDeleteIfValueEquals allows for conditional deletion. requestTimeout TimeSpan? cancellationToken CancellationToken Cancellation token. Returns Task<StateStoreDeleteResponse> The details of the service response. DisposeAsync(bool) ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask GetAsync(StateStoreKey, TimeSpan?, CancellationToken) Get the value of a key from the State Store. Task<StateStoreGetResponse> GetAsync(StateStoreKey key, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to get the value of. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task<StateStoreGetResponse> The service response containing the current value of the key in the State Store. ObserveAsync(StateStoreKey, StateStoreObserveRequestOptions?, TimeSpan?, CancellationToken) Begin receiving events each time the provided key is updated, deleted, or created. Events will be delivered via KeyChangeMessageReceivedAsync. Task ObserveAsync(StateStoreKey key, StateStoreObserveRequestOptions? options = null, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to receive notifications about. options StateStoreObserveRequestOptions The optional parameters for this request. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task Remarks This method does not support using wildcard characters to subscribe to multiple keys at once. SetAsync(StateStoreKey, StateStoreValue, StateStoreSetRequestOptions?, TimeSpan?, CancellationToken) Set the value of a key in the State Store. Task<StateStoreSetResponse> SetAsync(StateStoreKey key, StateStoreValue value, StateStoreSetRequestOptions? options = null, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to set in the State Store. value StateStoreValue The value to assign key in the State Store. options StateStoreSetRequestOptions The parameters for this request including the key and value to use. Condition allows for conditional setting/overwriting of values. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task<StateStoreSetResponse> The service response detailing if the operation succeeded and (optionally) the previous value of this key. UnobserveAsync(StateStoreKey, TimeSpan?, CancellationToken) Stop receiving events each time the provided key is updated, created, or deleted. Task UnobserveAsync(StateStoreKey key, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to stop receiving events about. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task Remarks This method does not support using wildcard characters to unsubscribe from multiple keys at once. Events KeyChangeMessageReceivedAsync The event that executes each time an observed key is changed. event Func<object?, KeyChangeMessageReceivedEventArgs, Task>? KeyChangeMessageReceivedAsync Event Type Func<object, KeyChangeMessageReceivedEventArgs, Task>"
  },
  "api/Azure.Iot.Operations.Services.StateStore.KeyChangeMessageReceivedEventArgs.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.KeyChangeMessageReceivedEventArgs.html",
    "title": "Class KeyChangeMessageReceivedEventArgs | Azure IoT Operations .NET SDK",
    "keywords": "Class KeyChangeMessageReceivedEventArgs Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public sealed class KeyChangeMessageReceivedEventArgs : EventArgs Inheritance object EventArgs KeyChangeMessageReceivedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties ChangedKey The key that was created, updated, or deleted. public StateStoreKey ChangedKey { get; } Property Value StateStoreKey NewState The new state of the key. public KeyState NewState { get; } Property Value KeyState NewValue The new value of the key. This value is null if this update is that the key was deleted. public StateStoreValue? NewValue { get; } Property Value StateStoreValue Timestamp The timestamp attached to the key change event. public HybridLogicalClock Timestamp { get; } Property Value HybridLogicalClock"
  },
  "api/Azure.Iot.Operations.Services.StateStore.KeyState.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.KeyState.html",
    "title": "Enum KeyState | Azure IoT Operations .NET SDK",
    "keywords": "Enum KeyState Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public enum KeyState Fields Deleted = 0 The key was deleted. Updated = 1 The key's value changed."
  },
  "api/Azure.Iot.Operations.Services.StateStore.PassthroughSerializer.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.PassthroughSerializer.html",
    "title": "Class PassthroughSerializer | Azure IoT Operations .NET SDK",
    "keywords": "Class PassthroughSerializer Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public class PassthroughSerializer : IPayloadSerializer Inheritance object PassthroughSerializer Implements IPayloadSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CharacterDataFormatIndicator public int CharacterDataFormatIndicator { get; } Property Value int ContentType public string ContentType { get; } Property Value string Methods FromBytes<T>(byte[]?) public T FromBytes<T>(byte[]? payload) where T : class Parameters payload byte[] Returns T Type Parameters T ToBytes<T>(T?) public byte[]? ToBytes<T>(T? payload) where T : class Parameters payload T Returns byte[] Type Parameters T"
  },
  "api/Azure.Iot.Operations.Services.StateStore.ServiceError.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.ServiceError.html",
    "title": "Enum ServiceError | Azure IoT Operations .NET SDK",
    "keywords": "Enum ServiceError Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public enum ServiceError Fields FencingTokenLowerVersion = 3 FencingTokenSkew = 2 KeyLengthZero = 11 KeyQuotaExceeded = 4 MissingFencingToken = 1 NotAuthorized = 6 SyntaxError = 5 TimestampMalformed = 10 TimestampMissing = 9 TimestampSkew = 0 Unknown = 12 UnknownCommand = 7 WrongNumberOfArguments = 8"
  },
  "api/Azure.Iot.Operations.Services.StateStore.SetCondition.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.SetCondition.html",
    "title": "Enum SetCondition | Azure IoT Operations .NET SDK",
    "keywords": "Enum SetCondition Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public enum SetCondition Fields OnlyIfEqualOrNotSet = 1 The set operation will only execute if the State Store does not have this key or it has this key and the value in the State Store is equal to the value provided for this set operation. OnlyIfNotSet = 0 The set operation will only execute if the State Store does not have this key already. Unconditional = 2 The set operation will execute regardless of if the key exists already and regardless of the value of this key in the State Store."
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreClient.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreClient.html",
    "title": "Class StateStoreClient | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreClient Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll A client for interacting with the Akri MQ distributed state store. public class StateStoreClient : IStateStoreClient, IAsyncDisposable Inheritance object StateStoreClient Implements IStateStoreClient IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StateStoreClient(IMqttPubSubClient) public StateStoreClient(IMqttPubSubClient mqttClient) Parameters mqttClient IMqttPubSubClient Methods DeleteAsync(StateStoreKey, StateStoreDeleteRequestOptions?, TimeSpan?, CancellationToken) Delete the provided key from the State Store. public virtual Task<StateStoreDeleteResponse> DeleteAsync(StateStoreKey key, StateStoreDeleteRequestOptions? options = null, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to delete from the State Store. options StateStoreDeleteRequestOptions The optional parameters for this request. OnlyDeleteIfValueEquals allows for conditional deletion. requestTimeout TimeSpan? cancellationToken CancellationToken Cancellation token. Returns Task<StateStoreDeleteResponse> The details of the service response. DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) public ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask DisposeAsyncCore(bool) protected virtual ValueTask DisposeAsyncCore(bool disposing) Parameters disposing bool Returns ValueTask GetAsync(StateStoreKey, TimeSpan?, CancellationToken) Get the value of a key from the State Store. public virtual Task<StateStoreGetResponse> GetAsync(StateStoreKey key, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to get the value of. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task<StateStoreGetResponse> The service response containing the current value of the key in the State Store. ObserveAsync(StateStoreKey, StateStoreObserveRequestOptions?, TimeSpan?, CancellationToken) Begin receiving events each time the provided key is updated, deleted, or created. Events will be delivered via KeyChangeMessageReceivedAsync. public virtual Task ObserveAsync(StateStoreKey key, StateStoreObserveRequestOptions? options = null, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to receive notifications about. options StateStoreObserveRequestOptions The optional parameters for this request. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task Remarks This method does not support using wildcard characters to subscribe to multiple keys at once. SetAsync(StateStoreKey, StateStoreValue, StateStoreSetRequestOptions?, TimeSpan?, CancellationToken) Set the value of a key in the State Store. public virtual Task<StateStoreSetResponse> SetAsync(StateStoreKey key, StateStoreValue value, StateStoreSetRequestOptions? options = null, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to set in the State Store. value StateStoreValue The value to assign key in the State Store. options StateStoreSetRequestOptions The parameters for this request including the key and value to use. Condition allows for conditional setting/overwriting of values. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task<StateStoreSetResponse> The service response detailing if the operation succeeded and (optionally) the previous value of this key. UnobserveAsync(StateStoreKey, TimeSpan?, CancellationToken) Stop receiving events each time the provided key is updated, created, or deleted. public virtual Task UnobserveAsync(StateStoreKey key, TimeSpan? requestTimeout = null, CancellationToken cancellationToken = default) Parameters key StateStoreKey The key to stop receiving events about. requestTimeout TimeSpan? The optional timeout for this request. cancellationToken CancellationToken Cancellation token. Returns Task Remarks This method does not support using wildcard characters to unsubscribe from multiple keys at once. Events KeyChangeMessageReceivedAsync The event that executes each time an observed key is changed. public event Func<object?, KeyChangeMessageReceivedEventArgs, Task>? KeyChangeMessageReceivedAsync Event Type Func<object, KeyChangeMessageReceivedEventArgs, Task>"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreDeleteRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreDeleteRequestOptions.html",
    "title": "Class StateStoreDeleteRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreDeleteRequestOptions Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll The optional parameters for a Delete request. public class StateStoreDeleteRequestOptions Inheritance object StateStoreDeleteRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FencingToken The optional fencing token to include in the request. public HybridLogicalClock? FencingToken { get; set; } Property Value HybridLogicalClock OnlyDeleteIfValueEquals If provided, the delete operation will only execute if the value in the State Store matches this value. If not provided, the delete operation will execute unconditionally. public StateStoreValue? OnlyDeleteIfValueEquals { get; set; } Property Value StateStoreValue"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreDeleteResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreDeleteResponse.html",
    "title": "Class StateStoreDeleteResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreDeleteResponse Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public class StateStoreDeleteResponse Inheritance object StateStoreDeleteResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeletedItemsCount The number of items deleted by the request. If StateStoreDeleteRequestOptions.GetPreviousValue was set, then this value is null. public int? DeletedItemsCount { get; } Property Value int? Remarks If this delete operation was conditional on OnlyDeleteIfValueEquals and the request was not carried out because of that condition, then this value will be -1."
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreErrorKind.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreErrorKind.html",
    "title": "Enum StateStoreErrorKind | Azure IoT Operations .NET SDK",
    "keywords": "Enum StateStoreErrorKind Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public enum StateStoreErrorKind Fields AIOProtocolError = 0 InvalidArgument = 4 KeyLengthZero = 2 SerializationError = 3 ServiceError = 1 UnexpectedPayload = 5"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreGetResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreGetResponse.html",
    "title": "Class StateStoreGetResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreGetResponse Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public class StateStoreGetResponse : StateStoreResponse Inheritance object StateStoreResponse StateStoreGetResponse Inherited Members StateStoreResponse.Version object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Value The requested value associated with the key. public StateStoreValue? Value { get; } Property Value StateStoreValue Remarks This value is null if the requested key isn't in the State Store."
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreKey.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreKey.html",
    "title": "Class StateStoreKey | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreKey Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public class StateStoreKey : StateStoreObject, IEquatable<StateStoreObject> Inheritance object StateStoreObject StateStoreKey Implements IEquatable<StateStoreObject> Inherited Members StateStoreObject.Bytes StateStoreObject.GetString() StateStoreObject.Equals(StateStoreObject) StateStoreObject.Equals(object) StateStoreObject.GetHashCode() StateStoreObject.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StateStoreKey(ArraySegment<byte>) public StateStoreKey(ArraySegment<byte> value) Parameters value ArraySegment<byte> StateStoreKey(byte[]) public StateStoreKey(byte[] key) Parameters key byte[] StateStoreKey(IEnumerable<byte>) public StateStoreKey(IEnumerable<byte> value) Parameters value IEnumerable<byte> StateStoreKey(Stream) public StateStoreKey(Stream value) Parameters value Stream StateStoreKey(Stream, long) public StateStoreKey(Stream value, long length) Parameters value Stream length long StateStoreKey(string) public StateStoreKey(string key) Parameters key string Properties Version The version of the key. public HybridLogicalClock? Version { get; } Property Value HybridLogicalClock Remarks The State Store service tracks the version of each key and updates it each time it is set. The value of this version for a particular key is returned in the response for each get or set request via Version. Operators implicit operator StateStoreKey(string) public static implicit operator StateStoreKey(string value) Parameters value string Returns StateStoreKey"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreObject.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreObject.html",
    "title": "Class StateStoreObject | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreObject Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public abstract class StateStoreObject : IEquatable<StateStoreObject> Inheritance object StateStoreObject Implements IEquatable<StateStoreObject> Derived StateStoreKey StateStoreValue Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StateStoreObject(ArraySegment<byte>) public StateStoreObject(ArraySegment<byte> value) Parameters value ArraySegment<byte> StateStoreObject(byte[]) public StateStoreObject(byte[] value) Parameters value byte[] StateStoreObject(IEnumerable<byte>) public StateStoreObject(IEnumerable<byte> value) Parameters value IEnumerable<byte> StateStoreObject(Stream) public StateStoreObject(Stream value) Parameters value Stream StateStoreObject(Stream, long) public StateStoreObject(Stream value, long length) Parameters value Stream length long StateStoreObject(string) public StateStoreObject(string value) Parameters value string Properties Bytes public byte[] Bytes { get; } Property Value byte[] Methods Equals(StateStoreObject?) Indicates whether the current object is equal to another object of the same type. public bool Equals(StateStoreObject? other) Parameters other StateStoreObject An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetString() public string GetString() Returns string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreObserveRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreObserveRequestOptions.html",
    "title": "Class StateStoreObserveRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreObserveRequestOptions Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll The optional parameters for an Observe request. public class StateStoreObserveRequestOptions Inheritance object StateStoreObserveRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GetNewValue If true, notifications about this key changing will include the new value of the key after the change. If false, notifications about this key changing will not include the new value. public bool GetNewValue { get; set; } Property Value bool Remarks The new value will be set in NewValue"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreOperationException.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreOperationException.html",
    "title": "Class StateStoreOperationException | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreOperationException Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public class StateStoreOperationException : Exception, ISerializable Inheritance object Exception StateStoreOperationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StateStoreOperationException(string) public StateStoreOperationException(string message) Parameters message string StateStoreOperationException(string, Exception) public StateStoreOperationException(string message, Exception innerException) Parameters message string innerException Exception StateStoreOperationException(string, Exception, ServiceError) public StateStoreOperationException(string message, Exception innerException, ServiceError reason) Parameters message string innerException Exception reason ServiceError Properties Reason public ServiceError Reason { get; } Property Value ServiceError"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreResponse.html",
    "title": "Class StateStoreResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreResponse Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public abstract class StateStoreResponse Inheritance object StateStoreResponse Derived StateStoreGetResponse StateStoreSetResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Version The version of the key returned by the service, if applicable. public HybridLogicalClock? Version { get; set; } Property Value HybridLogicalClock Remarks In cases where no key is returned by the service (such as when getting a key that isn't present in the store), this value is null."
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreSetRequestOptions.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreSetRequestOptions.html",
    "title": "Class StateStoreSetRequestOptions | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreSetRequestOptions Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll The optional parameters for a Set request to the State Store public class StateStoreSetRequestOptions Inheritance object StateStoreSetRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Condition The condition by which this operation will execute. By default, it will execute unconditionally. public SetCondition Condition { get; set; } Property Value SetCondition ExpiryTime How long this new value will last in the State Store. If null, the value will never expire. public TimeSpan? ExpiryTime { get; set; } Property Value TimeSpan? Remarks This value only has millisecond-level precision. FencingToken The optional fencing token to include in the request. public HybridLogicalClock? FencingToken { get; set; } Property Value HybridLogicalClock"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreSetResponse.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreSetResponse.html",
    "title": "Class StateStoreSetResponse | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreSetResponse Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public class StateStoreSetResponse : StateStoreResponse Inheritance object StateStoreResponse StateStoreSetResponse Inherited Members StateStoreResponse.Version object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Success True if the set request executed successfully. False otherwise. public bool Success { get; } Property Value bool"
  },
  "api/Azure.Iot.Operations.Services.StateStore.StateStoreValue.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.StateStoreValue.html",
    "title": "Class StateStoreValue | Azure IoT Operations .NET SDK",
    "keywords": "Class StateStoreValue Namespace Azure.Iot.Operations.Services.StateStore Assembly Azure.Iot.Operations.Services.dll public class StateStoreValue : StateStoreObject, IEquatable<StateStoreObject> Inheritance object StateStoreObject StateStoreValue Implements IEquatable<StateStoreObject> Inherited Members StateStoreObject.Bytes StateStoreObject.GetString() StateStoreObject.Equals(StateStoreObject) StateStoreObject.Equals(object) StateStoreObject.GetHashCode() StateStoreObject.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StateStoreValue(ArraySegment<byte>) public StateStoreValue(ArraySegment<byte> value) Parameters value ArraySegment<byte> StateStoreValue(byte[]) public StateStoreValue(byte[] value) Parameters value byte[] StateStoreValue(IEnumerable<byte>) public StateStoreValue(IEnumerable<byte> value) Parameters value IEnumerable<byte> StateStoreValue(Stream) public StateStoreValue(Stream value) Parameters value Stream StateStoreValue(Stream, long) public StateStoreValue(Stream value, long length) Parameters value Stream length long StateStoreValue(string) public StateStoreValue(string value) Parameters value string Operators implicit operator StateStoreValue(string) public static implicit operator StateStoreValue(string value) Parameters value string Returns StateStoreValue"
  },
  "api/Azure.Iot.Operations.Services.StateStore.html": {
    "href": "api/Azure.Iot.Operations.Services.StateStore.html",
    "title": "Namespace Azure.Iot.Operations.Services.StateStore | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Services.StateStore Classes CombinedPrefixedReadOnlyDictionary<TValue> An implementation of IReadOnlyDictionary that combines two IReadOnlyDictionary objects by prefixng their string keys. KeyChangeMessageReceivedEventArgs PassthroughSerializer StateStoreClient A client for interacting with the Akri MQ distributed state store. StateStoreDeleteRequestOptions The optional parameters for a Delete request. StateStoreDeleteResponse StateStoreGetResponse StateStoreKey StateStoreObject StateStoreObserveRequestOptions The optional parameters for an Observe request. StateStoreOperationException StateStoreResponse StateStoreSetRequestOptions The optional parameters for a Set request to the State Store StateStoreSetResponse StateStoreValue Interfaces IStateStoreClient The interface for interacting with a generic state store. Enums KeyState ServiceError SetCondition StateStoreErrorKind"
  },
  "api/Azure.Iot.Operations.Services.html": {
    "href": "api/Azure.Iot.Operations.Services.html",
    "title": "Namespace Azure.Iot.Operations.Services | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations.Services Namespaces Azure.Iot.Operations.Services.Akri Azure.Iot.Operations.Services.LeaderElection Azure.Iot.Operations.Services.LeasedLock Azure.Iot.Operations.Services.SchemaRegistry Azure.Iot.Operations.Services.StateStore"
  },
  "api/Azure.Iot.Operations.html": {
    "href": "api/Azure.Iot.Operations.html",
    "title": "Namespace Azure.Iot.Operations | Azure IoT Operations .NET SDK",
    "keywords": "Namespace Azure.Iot.Operations Namespaces Azure.Iot.Operations.Mqtt Azure.Iot.Operations.Protocol Azure.Iot.Operations.Services"
  }
}