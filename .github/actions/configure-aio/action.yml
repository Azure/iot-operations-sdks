name: 'Deploy AIO'
description: 'Deploy AIO for pipelines'

inputs:
  wait-for-broker:
    description: 'Wait for the MQTT broker to start before returning'
    required: false
    default: 'true'

  install-go:
    description: 'Install the Go compiler'
    required: false
    default: 'false'

  install-dotnet:
    description: 'Install the .NET compiler and runtime'
    required: false
    default: 'false'

  install-rust:
    description: 'Install the Rust compiler'
    required: false
    default: 'false'

  action-token:
    description: 'A GitHub PAT'
    required: true

runs:
  using: composite
  steps:
    - name: Create k3s cluster
      run: tools/deployment/initialize-cluster.sh
      shell: bash

    - name: Checkout deploy action
      uses: actions/checkout@v4
      with:
        repository: azure/iot-operations-sdks-action
        path: action_root
        token: ${{ inputs.action-token }}

    - name: Install AIO 
      run: ./action_root/install.sh
      shell: bash

    - name: Configure AIO
      run: tools/deployment/configure-aio.sh
      shell: bash

    - name: Setup .NET
      if: inputs.install-dotnet == 'true'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Setup GO
      if: inputs.install-go == 'true'
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Setup Rust
      if: inputs.install-rust == 'true'
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Wait for Mqtt Broker
      if: inputs.wait-for-broker == 'true'
      run: kubectl wait --for=create pod/aio-broker-frontend-0 --timeout=60s
      shell: bash

    - name: Install ADR CRDs
      run: helm install adr-crds-namespace oci://azureadr.azurecr.io/helm/adr/common/adr-crds-prp --version 0.20.0-alpha.1
      shell: bash

    - name: Run ADR service
    - run: helm install akri oci://akribuilds.azurecr.io/helm/microsoft-managed-akri --version 0.8.0-nightly -n azure-iot-operations --set adrService.log_level="debug"
      shell: bash

    - name: Checkout AKRI repository
      uses: actions/checkout@v4
      with:
        repository: akri
        ref: main
        token: ${{ secrets.AZURE_DEVOPS_PAT }}
        repository-url: 'https://msazure.visualstudio.com/DefaultCollection/One/_git/akri'
        path: akri_root
    
    - name: Create ADR resources
      run: kubectl apply -f akri_root/samples/adr-client-sample/resources
