#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  LinuxContainerImage: 'mcr.microsoft.com/onebranch/cbl-mariner/build:2.0' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  DEBIAN_FRONTEND: noninteractive

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main
    - repository: IotOperationsSdks
      type: github
      endpoint: iot-operations-internal2
      name: Azure/iot-operations-sdks

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
      #  enabled: true # SDL results of non-official builds aren't uploaded to TSA by default.
      credscan:
        suppressionsFile: $(Build.SourcesDirectory)\.pipelines\config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress
      perStage:
          sdl_sources:
            checkout_all_repos: true

    stages:
    - stage: Build_and_push_to_azure_artifacts
      jobs:
      - job: Build_and_push_to_azure_artifacts
        pool:
          type: linux

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(Build.SourcesDirectory)/_nupkgs/' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_git_fetchDepth: -1

        steps: # These steps will be run in unrestricted container's network
          - checkout: IotOperationsSdks
            path: s/iot-operations-sdks
            fetchDepth: -1

          - task: UseDotNet@2
            displayName: Install DotNet 8
            inputs:
              packageType: 'sdk'
              version: '8.0.x'   

          - bash: dotnet pack --configuration  Release dotnet/src/Azure.Iot.Operations.Protocol/Azure.Iot.Operations.Protocol.csproj -o ./_nupkgs/
            displayName: Build and pack Azure.Iot.Operations.Protocol

          - bash: dotnet pack --configuration  Release dotnet/src/Azure.Iot.Operations.Services/Azure.Iot.Operations.Services.csproj -o ./_nupkgs/
            displayName: Build and pack Azure.Iot.Operations.Services
          
          - bash: dotnet pack --configuration  Release dotnet/src/Azure.Iot.Operations.Mqtt/Azure.Iot.Operations.Mqtt.csproj -o ./_nupkgs/
            displayName: Build and pack Azure.Iot.Operations.Mqtt

          - bash: dotnet pack --configuration  Release tools/dsscli/src/Azure.Iot.Operations.Services.DssCli/Azure.Iot.Operations.Services.DssCli.csproj -o ./_nupkgs/
            displayName: Build and pack dsscli

          - bash: dotnet pack --configuration  Release codegen/src/Akri.Dtdl.Codegen/Akri.Dtdl.Codegen.csproj -o ./_nupkgs/
            displayName: Build and pack Dtdl.Codegen

          - task: DotNetCoreCLI@2
            displayName: Push to ADO
            inputs: 
              command: 'push'
              packagesToPush: './_nupkgs/*.nupkg'
              nugetFeedType: 'external'
              publishFeedCredentials: 'sdklite-previews-feed'
              feedsToUse: 'select'