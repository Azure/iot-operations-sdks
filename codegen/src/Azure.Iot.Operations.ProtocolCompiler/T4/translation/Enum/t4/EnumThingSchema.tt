<#@ template language="C#" linePragmas="false" #>
<#@ import namespace="DTDLParser.Models" #>
<# this.PushIndent(new string(' ', this.indent)); #>
<# if (this.dtEnum.Description.Any()) { #>
"descriptions": {
<# int ix = 1; foreach (KeyValuePair<string, string> kvp in this.dtEnum.Description) { #>
  "<#=kvp.Key#>": "<#=kvp.Value#>"<#=ix < this.dtEnum.Description.Count ? "," : ""#>
<# ix++; } #>
},
<# } #>
"type": "<#=this.valueSchema#>",
<# if (!this.allNamesMatchValues) { #>
"x-enumNames": [
<# int ix1 = 1; foreach (var enumValue in this.dtEnum.EnumValues) { #>
  "<#=enumValue.Name#>"<#=ix1 < this.dtEnum.EnumValues.Count ? "," : ""#>
<# ix1++; } #>
],
<# } #>
"enum": [
<# int ix2 = 1; foreach (var enumValue in this.dtEnum.EnumValues) { #>
  <#=ConditionallyQuote(enumValue.EnumValue.ToString())#><#=ix2 < this.dtEnum.EnumValues.Count ? "," : ""#>
<# ix2++; } #>
]<# this.PopIndent(); #>
<#+
    private string ConditionallyQuote(string value) => this.valueSchema == "string" ? $"\"{value}\"" : value;
#>
