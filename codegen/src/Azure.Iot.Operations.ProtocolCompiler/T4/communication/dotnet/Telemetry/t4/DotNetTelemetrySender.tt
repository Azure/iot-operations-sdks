<#@ template language="C#" linePragmas="false" #>
/* Code generated by Azure.Iot.Operations.ProtocolCompiler v<#=System.Reflection.Assembly.GetExecutingAssembly().GetName().Version#>; DO NOT EDIT. */

#nullable enable

namespace <#=this.projectName#>.<#=this.genNamespace.GetTypeName(TargetLanguage.CSharp)#>
{
    using System.Collections.Generic;
    using Azure.Iot.Operations.Protocol;
    using Azure.Iot.Operations.Protocol.Telemetry;
    using Azure.Iot.Operations.Protocol.Models;
    using <#=this.projectName#>;

    public static partial class <#=this.serviceName.GetTypeName(TargetLanguage.CSharp)#>
    {
        /// <summary>
        /// Specializes the <c>TelemetrySender</c> class for type <c><#=this.schemaType.GetTypeName(TargetLanguage.CSharp)#></c>.
        /// </summary>
        public class <#=this.componentName.GetTypeName(TargetLanguage.CSharp)#> : TelemetrySender<<#=this.schemaType.GetTypeName(TargetLanguage.CSharp)#>>
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="<#=this.componentName.GetTypeName(TargetLanguage.CSharp)#>"/> class.
            /// </summary>
            public <#=this.componentName.GetTypeName(TargetLanguage.CSharp)#>(ApplicationContext applicationContext, IMqttPubSubClient mqttClient)
                : base(applicationContext, mqttClient, new <#=this.serializerClassName#>())
            {
                TopicTokenReplacementMap["modelId"] = "<#=this.modelId#>";
                if (mqttClient.ClientId != null)
                {
                    TopicTokenReplacementMap["senderId"] = mqttClient.ClientId;
                }
<# if (!this.telemetryName.IsEmpty) { #>
                TopicTokenReplacementMap["telemetryName"] = "<#=this.telemetryName.AsGiven#>";
<# } #>
            }
        }
    }
}
