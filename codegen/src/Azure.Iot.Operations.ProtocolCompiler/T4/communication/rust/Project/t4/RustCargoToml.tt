<#@ template language="C#" linePragmas="false" #>
# Code generated by Azure.Iot.Operations.ProtocolCompiler v<#=System.Reflection.Assembly.GetExecutingAssembly().GetName().Version#>; DO NOT EDIT.

[package]
name = "<#=this.projectName#>"
version = "0.1.0"
edition = "2021"

[dependencies]
serde = { version = "1.0", features = ["derive"] }
<# if (this.usesIntEnum) { #>
serde_repr = "0.1"
<# } #>
<# foreach (var packageVersion in this.packageVersions) { #>
<#=packageVersion.Item1#> = "<#=packageVersion.Item2#>"
<# } #>
chrono = { version = "0.4.31", features = ["serde", "alloc"] }
<# if (this.usesAnySchemas) { #>
iso8601-duration = { version = "0.2", features = ["serde", "chrono"] }
<# } #>
bytes = "1.5.0"
base64 = "0.22.1"
bigdecimal = "0.4.5"
time = { version = "0.3", features = ["serde", "formatting", "parsing"] }
<# if (this.usesAnySchemas) { #>
uuid = { version = "1.8.0", features = ["serde", "v4"] }
<# } #>
derive_builder = "0.20"
<# if (this.sdkPath != null) { #>
azure_iot_operations_mqtt = { <#=this.IfLocal("path", "git")#> = "<#=this.sdkPath#><#=this.IfLocal("/azure_iot_operations_mqtt")#>" }
azure_iot_operations_protocol = { <#=this.IfLocal("path", "git")#> = "<#=this.sdkPath#><#=this.IfLocal("/azure_iot_operations_protocol")#>" }
<# } else { #>
azure_iot_operations_mqtt = { version = "0.6.0", registry = "aio-sdks" }
azure_iot_operations_protocol = { version = "0.6.0", registry = "aio-sdks" }
<# } #>
<#+
string IfLocal(string ifText, string elseText = "") => !this.sdkPath.StartsWith("http://") && !this.sdkPath.StartsWith("https://") ? ifText : elseText;
#>
