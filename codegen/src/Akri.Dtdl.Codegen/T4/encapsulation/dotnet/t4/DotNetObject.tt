<#@ template language="C#" linePragmas="false" #>
/* Code generated by Akri.Dtdl.Codegen; DO NOT EDIT. */

#nullable enable

namespace <#=this.projectName#>.<#=this.genNamespace#>
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;

<# if (this.objectType.Description != null) { #>
    /// <summary>
    /// <#=this.objectType.Description#>
    /// </summary>
<# } #>
    public class <#=this.objectType.SchemaName#>
    {
<# foreach (var fieldInfo in this.objectType.FieldInfos) { #>
<# if (fieldInfo.Value.Description != null) { #>
        /// <summary>
        /// <#=fieldInfo.Value.Description#>
        /// </summary>
<# } #>
        [JsonPropertyName("<#=fieldInfo.Key#>")]
        [JsonIgnore(Condition = JsonIgnoreCondition.<#=fieldInfo.Value.IsRequired ? "Never" : "WhenWritingDefault"#>)]
<# if (fieldInfo.Value.Index != null) { #>
        [Dahomey.Cbor.Attributes.CborPropertyAttribute(index: <#=fieldInfo.Value.Index#>)]
<# } #>
        public <#=DotNetSchemaSupport.GetType(fieldInfo.Value.SchemaType)#><#=fieldInfo.Value.IsRequired ? "" : "?"#> <#=Capitalize(fieldInfo.Key)#> { get; set; } = default<#=fieldInfo.Value.IsRequired ? "!" : ""#>;

<# } #>
    }
}
<#+
    public static string Capitalize(string inString) => char.ToUpperInvariant(inString[0]) + inString.Substring(1);
#>
