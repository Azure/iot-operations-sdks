<#@ template language="C#" linePragmas="false" #>
/* Code generated by Azure.Iot.Operations.ProtocolCompilerLib v<#=System.Reflection.Assembly.GetExecutingAssembly().GetName().Version#>; DO NOT EDIT. */
#![allow(unused_imports)]

use std::collections::HashMap;

use chrono::{DateTime, Utc};
use derive_builder::Builder;
use iso8601_duration::Duration;
use serde::{Deserialize, Serialize};
use uuid::Uuid;

<# foreach (var referencedSchema in this.referencedSchemas) { #>
<# if (referencedSchema.Namespace.Equals(this.objectType.Namespace)) { #>
use super::<#=referencedSchema.SchemaName.GetFileName(TargetLanguage.Rust)#>::<#=referencedSchema.SchemaName.GetTypeName(TargetLanguage.Rust)#>;
<# } else { #>
use super::super::<#=referencedSchema.Namespace.GetFolderName(TargetLanguage.Rust)#>::<#=referencedSchema.SchemaName.GetFileName(TargetLanguage.Rust)#>::<#=referencedSchema.SchemaName.GetTypeName(TargetLanguage.Rust)#>;
<# } #>
<# } #>
use super::super::common_types::{b64::Bytes, date_only::Date, decimal::Decimal, time_only::Time};

<# if (this.objectType.Description != null) { #>
/// <#=this.objectType.Description#>
<# } #>
#[derive(Serialize, Deserialize, Debug, Clone, Builder)]
pub struct <#=this.objectType.SchemaName.GetTypeName(TargetLanguage.Rust)#> {
<# bool firstField = true; foreach (var fieldInfo in this.objectType.FieldInfos) { #>
<# if (!firstField) { #>

<# } #>
<# if (fieldInfo.Value.Description != null) { #>
    /// <#=fieldInfo.Value.Description#>
<# } #>
<# if (fieldInfo.Key.GetFieldName(TargetLanguage.Rust) != fieldInfo.Key.AsGiven) { #>
    #[serde(rename = "<#=fieldInfo.Key.AsGiven#>")]
<# } #>
<# if (!fieldInfo.Value.IsRequired) { #>
<# if (this.allowSkipping) { #>
    #[serde(skip_serializing_if = "Option::is_none")]
<# } #>
    #[builder(default = "None")]
<# } else if (RustSchemaSupport.HasNativeDefault(fieldInfo.Value.SchemaType)) { #>
    #[builder(default)]
<# } #>
    pub <#=fieldInfo.Key.GetFieldName(TargetLanguage.Rust)#>: <#=RustSchemaSupport.GetType(fieldInfo.Value.SchemaType, fieldInfo.Value.IsRequired)#>,
<# firstField = false; } #>
}
