<#@ template language="C#" linePragmas="false" #>
<#@ import namespace="DTDLParser" #>
<#@ import namespace="DTDLParser.Models" #>
{
  "@context": "https://www.w3.org/2022/wot/td/v1.1",
  "id": "<#=this.dtInterface.Id.ToString()#>",
  "title": "<#=this.serviceName.AsGiven#>",
  "securityDefinitions": {
    "nosec_sc": {
      "scheme": "nosec"
    }
  },
  "security": [
    "nosec_sc"
  ],
<# if (this.errorSchemas.Any()) { #>
  "schemaDefinitions": {
<# int ix1 = 1; foreach (KeyValuePair<string, DTSchemaInfo> errorSchema in this.errorSchemas) { #>
    "<#=errorSchema.Key#>": {
<#=this.thingDescriber.GetTypeAndAddenda(errorSchema.Value, 6)#>
    }<#=ix1 < this.errorSchemas.Count ? "," : ""#>
<# ix1++; } #>
  },
<# } #>
  "actions": {
<# int ix = 1; foreach (KeyValuePair<string, DTCommandInfo> dtCommand in this.dtInterface.Commands) { #>
<#=this.thingDescriber.GetCommandAffordance(dtCommand.Value, this.usesTypes, this.contentType, this.commandTopic, this.cmdServiceGroupId)#><#=ix < this.dtInterface.Commands.Count ? "," : ""#>
<# ix++; } #>
  },
  "events": {
<# if (this.dtInterface.Telemetries.Any()) { #>
<# if (this.telemetryTopic?.Contains(MqttTopicTokens.TelemetryName) ?? false) { #>
<# ix = 1; foreach (KeyValuePair<string, DTTelemetryInfo> dtTelemetry in this.dtInterface.Telemetries) { #>
<#=this.thingDescriber.GetTelemetryAffordance(dtTelemetry.Value, this.usesTypes, this.contentType, this.telemetryTopic, this.telemServiceGroupId)#><#=ix < this.dtInterface.Telemetries.Count ? "," : ""#>
<# ix++; } #>
<# } else { #>
<#=this.thingDescriber.GetTelemetriesAffordance(this.dtInterface.Telemetries, this.usesTypes, this.contentType, this.telemetryTopic, this.telemServiceGroupId, $"{this.dtInterface.Id.Versionless}:_telemetry;{this.dtInterface.Id.MajorVersion}")#>
<# } #>
<# } #>
  }
}
