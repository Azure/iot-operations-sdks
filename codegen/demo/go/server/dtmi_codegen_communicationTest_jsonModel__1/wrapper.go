// Code generated by Azure.Iot.Operations.ProtocolCompiler v0.6.0.0; DO NOT EDIT.
package dtmi_codegen_communicationTest_jsonModel__1

import (
	"github.com/Azure/iot-operations-sdks/go/protocol"
)

type JsonModelService struct {
	protocol.Listeners
	*TelemetryCollectionSender
}

const (
	TelemetryTopic = "test/JsonModel/{senderId}/telemetry"
)

func NewJsonModelService(
	client protocol.MqttClient,
	opts ...protocol.Option,
) (*JsonModelService, error) {
	var err error

	serverOpts := []protocol.Option{
		protocol.WithTopicTokenNamespace("ex:"),
		protocol.WithTopicTokens{
			"senderId":   client.ID(),
		},
	}

	var senderOpts protocol.TelemetrySenderOptions
	senderOpts.ApplyOptions(opts, serverOpts...)

	jsonModelService := &JsonModelService{}

	jsonModelService.TelemetryCollectionSender, err = NewTelemetryCollectionSender(
		client,
		TelemetryTopic,
		&senderOpts,
	)
	if err != nil {
		jsonModelService.Close()
		return nil, err
	}

	return jsonModelService, nil
}
