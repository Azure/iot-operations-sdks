/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.6.0.0; DO NOT EDIT. */

#nullable enable

namespace AvroComm.AvroModel
{
    using System;
    using System.Collections.Generic;
    using Avro;
    using Avro.Specific;
    using AvroComm;

    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.6.0.0")]
    public class TelemetryCollectionBase
    {
        public virtual Schema Schema { get => Schema.Parse(@"{""namespace"":""AvroComm.AvroModel"",""name"":""TelemetryCollection"",""type"":""record"",""fields"":[]}"); }
    }

    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.6.0.0")]
    public partial class TelemetryCollection : TelemetryCollectionBase, ISpecificRecord
    {
        public List<double>? Lengths { get; set; } = default;

        public ProximitySchema? Proximity { get; set; } = default;

        public ScheduleSchema? Schedule { get; set; } = default;

        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.Lengths!;
                case 1: return this.Proximity!;
                case 2: return this.Schedule!;
                default: throw new Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            };
        }

        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.Lengths = (List<double>?)fieldValue; break;
                case 1: this.Proximity = (ProximitySchema?)(int?)fieldValue; break;
                case 2: this.Schedule = (ScheduleSchema?)fieldValue; break;
                default: throw new Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            };
        }
    }
}
