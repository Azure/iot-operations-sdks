/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.9.0.0; DO NOT EDIT. */
#![allow(unused_imports)]

use std::collections::HashMap;

use chrono::{DateTime, Utc};
use derive_builder::Builder;
use iso8601_duration::Duration;
use serde::{Deserialize, Serialize};
use uuid::Uuid;

use super::super::common_types::{b64::Bytes, date_only::Date, decimal::Decimal, time_only::Time};
use super::super::shared_schemas::int_enum_prox::IntEnumProx;
use super::super::shared_schemas::results::Results;
use super::coordinates_schema::CoordinatesSchema;
use super::speed_schema::SpeedSchema;

#[derive(Serialize, Deserialize, Debug, Clone, Builder)]
pub struct TelemetryCollection {
    /// The 'coordinates' Telemetry.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub coordinates: Option<CoordinatesSchema>,

    /// The 'doubleArray2D' Telemetry.
    #[serde(rename = "doubleArray2D")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub double_array2d: Option<Vec<Vec<f64>>>,

    /// The 'doubleMap' Telemetry.
    #[serde(rename = "doubleMap")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub double_map: Option<HashMap<String, f64>>,

    /// The 'doubleMapArray' Telemetry.
    #[serde(rename = "doubleMapArray")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub double_map_array: Option<HashMap<String, Vec<f64>>>,

    /// The 'proximity' Telemetry.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub proximity: Option<IntEnumProx>,

    /// The 'resultArray' Telemetry.
    #[serde(rename = "resultArray")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub result_array: Option<Vec<Results>>,

    /// The 'speed' Telemetry.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub speed: Option<SpeedSchema>,
}
