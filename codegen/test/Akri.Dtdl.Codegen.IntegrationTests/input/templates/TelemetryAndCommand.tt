<#@ template language="C#" linePragmas="false" hostspecific="true" #>
<#
string modelId = Host.ResolveParameterValue(null, null, "modelId");
string format = Host.ResolveParameterValue(null, null, "format");
string telemTopic = Host.ResolveParameterValue(null, null, "telemTopic");
string cmdTopic = Host.ResolveParameterValue(null, null, "cmdTopic");
bool needsIndex = format == "Protobuf/2" || format == "Protobuf/3" || format == "Cbor/rfc/8949";
#>
[
  {
    "@context": [
      "dtmi:dtdl:context;3",
      "dtmi:dtdl:extension:mqtt;1"
    ],
    "@type": [ "Interface", "Mqtt" ],
    "@id": "<#=modelId#>",
    "payloadFormat": "<#=format#>",
<# if (telemTopic != "") { #>
    "telemetryTopic": "<#=telemTopic#>",
<# } #>
<# if (cmdTopic != "") { #>
    "commandTopic": "<#=cmdTopic#>",
<# } #>
    "contents": [
      {
<# if (needsIndex) { #>
        "@type": [ "Telemetry", "Indexed" ],
        "index": 1,
<# } else { #>
        "@type": "Telemetry",
<# } #>
        "name": "distance",
        "schema": "double",
        "description": "The total distance from the origin."
      },
      {
<# if (needsIndex) { #>
        "@type": [ "Telemetry", "Indexed" ],
        "index": 2,
<# } else { #>
        "@type": "Telemetry",
<# } #>
        "name": "color",
        "schema": "string",
        "description": "The color currently being applied."
      },
      {
        "@type": "Command",
        "name": "setColor",
        "request": {
          "name": "newColor",
          "schema": "string"
        },
        "response": {
          "name": "oldColor",
          "schema": "string"
        }
      }
    ]
  }
]
