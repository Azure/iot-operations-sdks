<#@ template language="C#" linePragmas="false" #>
/* This is an auto-generated file.  Do not modify. */

namespace <#=this.testName#>.Library
{
    using System;
    using Newtonsoft.Json.Linq;
    using <#=this.genNamespace#>;

    public static class <#=this.enumSchema.SchemaName#>_Tokenizer
    {
        public static JToken EnumToJToken(<#=this.enumSchema.SchemaName#>? value)
        {
            return new JValue(value switch
            {
<# foreach (string enumName in this.enumSchema.EnumNames) {#>
                <#=this.enumSchema.SchemaName#>.<#=Capitalize(enumName)#> => "<#=enumName#>",
<# } #>
                _ => throw new Exception("unrecognized <#=this.enumSchema.SchemaName#> value"),
            });
        }

        public static <#=this.enumSchema.SchemaName#> JTokenToEnum(JToken token)
        {
            return (<#=this.enumSchema.SchemaName#>)System.Enum.Parse(typeof(<#=this.enumSchema.SchemaName#>), Capitalize(((JValue)token).Value<string>()));
        }

        private static string Capitalize(string inString) => char.ToUpperInvariant(inString[0]) + inString.Substring(1);
    }
}
<#+
    public static string Capitalize(string inString) => char.ToUpperInvariant(inString[0]) + inString.Substring(1);
#>
