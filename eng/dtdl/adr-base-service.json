{
  "@context": [
    "dtmi:dtdl:context;4#limitless",
    "dtmi:dtdl:limits:onvif;1",
    "dtmi:dtdl:extension:mqtt;3",
    "dtmi:dtdl:extension:requirement;1"
  ],
  "@id": "dtmi:com:microsoft:akri:AdrBaseService;1",
  "@type": [
    "Interface",
    "Mqtt"
  ],
  "commandTopic": "akri/connector/resources/{ex:connectorClientId}/{ex:deviceName}/{ex:inboundEndpointName}/{commandName}",
  "telemetryTopic": "akri/connector/resources/telemetry/{ex:connectorClientId}/{ex:deviceName}/{ex:inboundEndpointName}/{telemetryName}",
  "payloadFormat": "Json/ecma/404",
  "contents": [
    {
      "@type": "Command",
      "name": "getDevice",
      "description": "Retrieve a device by device name and inbound endpoint name.",
      "response": {
        "name": "getDeviceResponse",
        "description": "Response containing the device resource or error details if the device could not be retrieved.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "device",
              "description": "The device resource, containing the specific inbound endpoint details as specified by the request.",
              "schema": "dtmi:com:microsoft:akri:Device;1"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "getDeviceError",
              "description": "Error details, if the device could not be retrieved.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "name": "getDeviceStatus",
      "description": "Retrieve the status of a device by device name and inbound endpoint name.",
      "response": {
        "name": "getDeviceStatusResponse",
        "description": "Response containing the device status or error details if the status could not be retrieved.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "deviceStatus",
              "description": "The device status, containing the specific inbound endpoint status as specified by the request.",
              "schema": "dtmi:com:microsoft:akri:DeviceStatus;1"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "getDeviceStatusError",
              "description": "Error details, if the device status could not be retrieved.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "name": "getAsset",
      "description": "Retrieve an asset by asset name.",
      "request": {
        "name": "assetName",
        "description": "The name of the asset to retrieve.",
        "schema": "string"
      },
      "response": {
        "name": "getAssetResponse",
        "description": "Response containing the asset resource or error details if the asset could not be retrieved.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "asset",
              "description": "The asset resource",
              "schema": "dtmi:com:microsoft:akri:Asset;1"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "getAssetError",
              "description": "Error details, if the asset could not be retrieved.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "name": "getAssetStatus",
      "description": "Retrieve the status of an asset by asset name.",
      "request": {
        "name": "assetName",
        "description": "The name of the asset to retrieve the status for.",
        "schema": "string"
      },
      "response": {
        "name": "getAssetStatusResponse",
        "description": "Response containing the asset status or error details if the status could not be retrieved.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "assetStatus",
              "description": "The asset status",
              "schema": "dtmi:com:microsoft:akri:AssetStatus;1"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "getAssetStatusError",
              "description": "Error details, if the asset status could not be retrieved.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "name": "updateDeviceStatus",
      "description": "Update the status of a device by device name and inbound endpoint name.",
      "request": {
        "name": "deviceStatusUpdate",
        "description": "The device status to update. Fields omitted in the request will be removed. The specified inbound endpoint status will be added or updated in the inbound endpoints map.",
        "schema": "dtmi:com:microsoft:akri:DeviceStatus;1"
      },
      "response": {
        "name": "updateDeviceStatusResponse",
        "description": "Response containing the updated device status or error details if the update failed.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "updatedDeviceStatus",
              "description": "The updated device status containing the specific inbound endpoint status as specified by the request.",
              "schema": "dtmi:com:microsoft:akri:DeviceStatus;1"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "updateDeviceStatusError",
              "description": "Error details, if the device status update failed.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "name": "updateAssetStatus",
      "description": "Update the status of an asset by asset name.",
      "request": {
        "name": "assetStatusUpdate",
        "description": "The asset status update request.",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "@type": ["Field", "Required"],
              "name": "assetName",
              "description": "The name of the asset to update the status for.",
              "schema": "string"
            },
            {
              "@type": ["Field", "Required"],
              "name": "assetStatus",
              "description": "The asset status to update. Fields omitted in the request will be removed.",
              "schema": "dtmi:com:microsoft:akri:AssetStatus;1"
            }
          ]
        }
      },
      "response": {
        "name": "updateAssetStatusResponse",
        "description": "Response containing the updated asset status or error details if the update failed.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "updatedAssetStatus",
              "description": "The updated asset status.",
              "schema": "dtmi:com:microsoft:akri:AssetStatus;1"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "updateAssetStatusError",
              "description": "Error details, if the asset status update failed.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Telemetry",
      "name": "deviceUpdateEvent",
      "description": "Telemetry event emitted when a device is updated, containing the relevant inbound endpoint details as specified in the topic.",
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "@type": ["Field", "Required"],
            "name": "deviceName",
            "description": "The name of the device that was updated.",
            "schema": "string"
          },
          {
            "@type": ["Field", "Required"],
            "name": "device",
            "description": "The updated device resource, containing the specific inbound endpoint details as specified in the topic.",
            "schema": "dtmi:com:microsoft:akri:Device;1"
          }
        ]
      }
    },
    {
      "@type": "Telemetry",
      "name": "assetUpdateEvent",
      "description": "Telemetry event emitted when an asset is updated.",
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "@type": ["Field", "Required"],
            "name": "assetName",
            "description": "The name of the asset that was updated.",
            "schema": "string"
          },
          {
            "@type": ["Field", "Required"],
            "name": "asset",
            "description": "The updated asset resource.",
            "schema": "dtmi:com:microsoft:akri:Asset;1"
          }
        ]
      }
    },
    {
      "@type": "Command",
      "name": "setNotificationPreferenceForDeviceUpdates",
      "description": "Set the notification preference for device updates. This command allows the connector application to subscribe to per-device inbound endpoint updates.",
      "request": {
        "name": "notificationPreferenceRequest",
        "description": "The request to set the notification preference for device updates.",
        "schema": "dtmi:com:microsoft:akri:NotificationPreference;1"
      },
      "response": {
        "name": "notificationPreferenceResponse",
        "description": "Response containing the result of setting the notification preference for device updates or error details if the operation failed.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "responsePayload",
              "description": "The response payload indicating that the operation was successful.",
              "schema": "string"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "setNotificationPreferenceForDeviceUpdatesError",
              "description": "Error details, if setting the notification preference for device updates failed.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "name": "setNotificationPreferenceForAssetUpdates",
      "description": "Set the notification preference for asset updates. This command allows the connector application to subscribe to per-asset updates.",
      "request": {
        "name": "notificationPreferenceRequest",
        "description": "The request to set the notification preference for asset updates.",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "@type": ["Field", "Required"],
              "name": "assetName",
              "description": "The name of the asset to set the notification preference for.",
              "schema": "string"
            },
            {
              "@type": ["Field", "Required"],
              "name": "notificationPreference",
              "description": "The notification preference to set for the asset updates.",
              "schema": "dtmi:com:microsoft:akri:NotificationPreference;1"
            }
          ]
        }
      },
      "response": {
        "name": "notificationPreferenceResponse",
        "description": "Response containing the result of setting the notification preference for asset updates or error details if the operation failed.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "responsePayload",
              "description": "The response payload indicating that the operation was successful.",
              "schema": "string"
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "setNotificationPreferenceForAssetUpdatesError",
              "description": "Error details, if setting the notification preference for asset updates failed.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "name": "createOrUpdateDiscoveredAsset",
      "description": "Create or update a discovered asset resource.",
      "request": {
        "name": "discoveredAssetRequest",
        "description": "The request to create or update a discovered asset.",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "@type": ["Field", "Required"],
              "name": "discoveredAssetName",
              "description": "The name of the discovered asset to create or update. This field is used to perform deduplication of discovered assets.",
              "schema": "string"
            },
            {
              "@type": ["Field", "Required"],
              "name": "discoveredAsset",
              "description": "The discovered asset resource to create or update. Fields omitted in the request will be removed.",
              "schema": "dtmi:com:microsoft:akri:DiscoveredAsset;1"
            }
          ]
        }
      },
      "response": {
        "name": "createOrUpdateDiscoveredAssetResponse",
        "description": "Response containing the discovered asset response or error details if the operation failed.",
        "schema": {
          "@type": [ "Object", "Result" ],
          "fields": [
            {
              "@type": ["Field", "NormalResult"],
              "name": "discoveredAssetResponse",
              "description": "The discovered asset response.",
              "schema": {
                "@type": "Object",
                "fields": [
                  {
                    "@type": [ "Field", "Required" ],
                    "name": "discoveryId",
                    "description": "The unique identifier for the discovered asset.",
                    "schema": "string"
                  },
                  {
                    "@type": [ "Field", "Required" ],
                    "name": "version",
                    "description": "The version of the discovered asset resource.",
                    "schema": "unsignedLong"
                  }
                ]
              }
            },
            {
              "@type": ["Field", "ErrorResult"],
              "name": "createOrUpdateDiscoveredAssetError",
              "description": "Error details, if the discovered asset creation or update failed.",
              "schema": "dtmi:com:microsoft:akri:AkriServiceError;1"
            }
          ]
        }
      }
    }
  ],
  "schemas": [
    {
      "@id": "dtmi:com:microsoft:akri:AssetDeviceRef;1",
      "@type": "Object",
      "description": "A reference to the Device and Endpoint within the device (connection information) used by brokers to connect that provides data points for this asset.",
      "fields": [
        {
          "@type": ["Field", "Required"],
          "name": "deviceName",
          "description": "Name of the device resource.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "endpointName",
          "description": "The name of endpoint to use.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DeviceOutboundEndpoint;1",
      "@type": "Object",
      "fields": [
        {
          "@type": ["Field", "Required"],
          "name": "address",
          "description": "The endpoint address to connect to.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "endpointType",
          "description": "Type of connection used for the messaging endpoint.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DatasetDestination;1",
      "@type": "Object",
      "fields": [
        {
          "@type": ["Field", "Required"],
          "name": "configuration",
          "description": "The destination configuration.",
          "schema": "dtmi:com:microsoft:akri:DestinationConfiguration;1"
        },
        {
          "@type": ["Field", "Required"],
          "name": "target",
          "description": "The target destination.",
          "schema": "dtmi:com:microsoft:akri:DatasetTarget;1"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:EventStreamDestination",
      "@type": "Object",
      "fields": [
        {
          "@type": ["Field", "Required"],
          "name": "configuration",
          "description": "The destination configuration.",
          "schema": "dtmi:com:microsoft:akri:DestinationConfiguration;1"
        },
        {
          "@type": ["Field", "Required"],
          "name": "target",
          "description": "The target destination.",
          "schema": "dtmi:com:microsoft:akri:EventStreamTarget;1"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DestinationConfiguration;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "key",
          "description": "The BrokerStateStore destination configuration key.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "path",
          "description": "The Storage destination configuration path.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "qos",
          "description": "The MQTT QoS setting.",
          "schema": "dtmi:com:microsoft:akri:Qos;1"
        },
        {
          "@type": "Field",
          "name": "retain",
          "description": "When set to 'Keep', messages published to an MQTT broker will have the retain flag set.",
          "schema": "dtmi:com:microsoft:akri:Retain;1"
        },
        {
          "@type": "Field",
          "name": "topic",
          "description": "The MQTT topic.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "ttl",
          "description": "The MQTT TTL setting.",
          "schema": "unsignedLong"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:Qos;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "name": "Qos0",
          "enumValue": "Qos0"
        },
        {
          "name": "Qos1",
          "enumValue": "Qos1"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:Retain;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "name": "Keep",
          "enumValue": "Keep"
        },
        {
          "name": "Never",
          "enumValue": "Never"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:MessageSchemaReference;1",
      "@type": "Object",
      "description": "The message schema reference object.",
      "fields": [
        {
          "@type": ["Field", "Required"],
          "name": "schemaName",
          "description": "The reference to the message schema name.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "schemaRegistryNamespace",
          "description": "The reference to the message schema registry namespace.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "schemaVersion",
          "description": "The reference to the message schema version.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:ConfigStatus;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "error",
          "description": "The last error that occurred while processing the configuration.",
          "schema": "dtmi:com:microsoft:akri:ConfigError;1"
        },
        {
          "@type": "Field",
          "name": "lastTransitionTime",
          "description": "A read only timestamp indicating the last time the configuration has been modified from the perspective of the current actual (Edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.",
          "schema": "dateTime"
        },
        {
          "@type": "Field",
          "name": "version",
          "description": "A read only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (Edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.",
          "schema": "unsignedLong"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:ConfigError;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "code",
          "description": "Error code for classification of errors (ex: '400', '404', '500', etc.).",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "details",
          "description": "Array of error details that describe the status of each error.",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "@type": "Field",
                  "name": "code",
                  "description": "Multi-part error code for classification and root causing of errors (ex: 400.200.100.432).",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "correlationId",
                  "description": "Unique identifier for the transaction to aid in debugging.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "info",
                  "description": "Human readable helpful detailed text context for debugging (ex: “The following mechanisms are supported...”).",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "message",
                  "description": "Human readable helpful error message to provide additional context for error (ex: “Authentication method not supported”).",
                  "schema": "string"
                }
              ]
            }
          }
        },
        {
          "@type": "Field",
          "name": "message",
          "description": "Human readable helpful error message to provide additional context for error (ex: “capability Id ''foo'' does not exist”).",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DatasetTarget;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "name": "Mqtt",
          "enumValue": "Mqtt"
        },
        {
          "name": "BrokerStateStore",
          "enumValue": "BrokerStateStore"
        },
        {
          "name": "Storage",
          "enumValue": "Storage"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:EventStreamTarget;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "name": "Mqtt",
          "enumValue": "Mqtt"
        },
        {
          "name": "Storage",
          "enumValue": "Storage"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:AssetManagementGroupActionType;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "name": "Read",
          "enumValue": "Read"
        },
        {
          "name": "Write",
          "enumValue": "Write"
        },
        {
          "name": "Call",
          "enumValue": "Call"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:Device;1",
      "@type": "Object",
      "description": "Represents a Device resource, modeled after the devices.namespaces.deviceregistry.microsoft.com CRD in Kubernetes.",
      "fields": [
        {
          "@type": "Field",
          "name": "attributes",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "attributeKey",
              "schema": "string"
            },
            "mapValue": {
              "name": "attributeValue",
              "schema": "string"
            }
          }
        },
        {
          "@type": "Field",
          "name": "discoveredDeviceRef",
          "description": "Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "enabled",
          "description": "Indicates if the resource and identity are enabled or not. A disabled device cannot authenticate with Microsoft Entra ID.",
          "schema": "boolean"
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:DeviceEndpoints;1",
          "name": "endpoints",
          "description": "Connection endpoint url a device can use to connect to a service.",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": "Field",
                "name": "inbound",
                "schema": {
                  "@type": "Map",
                  "mapKey": {
                    "name": "endpointName",
                    "schema": "string"
                  },
                  "mapValue": {
                    "name": "inboundEndpoint",
                    "schema": {
                      "@type": "Object",
                      "fields": [
                        {
                          "@type": "Field",
                          "name": "additionalConfiguration",
                          "description": "Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, ONVIF).",
                          "schema": "string"
                        },
                        {
                          "@type": [ "Field", "Required" ],
                          "name": "address",
                          "description": "The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN, e.g., server.example.com).",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "authentication",
                          "description": "Defines the client authentication mechanism to the server.",
                          "schema": {
                            "@type": "Object",
                            "fields": [
                              {
                                "@type": [ "Field", "Required" ],
                                "name": "method",
                                "description": "Defines the method to authenticate the user of the client at the server.",
                                "schema": {
                                  "@type": "Enum",
                                  "valueSchema": "string",
                                  "enumValues": [
                                    {
                                      "name": "Anonymous",
                                      "enumValue": "Anonymous"
                                    },
                                    {
                                      "name": "Certificate",
                                      "enumValue": "Certificate"
                                    },
                                    {
                                      "name": "UsernamePassword",
                                      "enumValue": "UsernamePassword"
                                    }
                                  ]
                                }
                              },
                              {
                                "@type": "Field",
                                "name": "usernamePasswordCredentials",
                                "description": "The credentials for authentication mode UsernamePassword.",
                                "schema": {
                                  "@type": "Object",
                                  "fields": [
                                    {
                                      "@type": [ "Field", "Required" ],
                                      "name": "usernameSecretName",
                                      "description": "The name of the secret containing the username.",
                                      "schema": "string"
                                    },
                                    {
                                      "@type": [ "Field", "Required" ],
                                      "name": "passwordSecretName",
                                      "description": "The name of the secret containing the password.",
                                      "schema": "string"
                                    }
                                  ]
                                }
                              },
                              {
                                "@type": "Field",
                                "name": "x509Credentials",
                                "description": "The x509 certificate for authentication mode Certificate.",
                                "schema": {
                                  "@type": "Object",
                                  "fields": [
                                    {
                                      "@type": [ "Field", "Required" ],
                                      "name": "certificateSecretName",
                                      "description": "The name of the secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx).",
                                      "schema": "string"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "@type": [ "Field", "Required" ],
                          "@id": "dtmi:com:microsoft:akri:DeviceInboundEndpointType;1",
                          "name": "endpointType",
                          "description": "Type of connection endpoint.",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "trustSettings",
                          "description": "Defines server trust settings for the endpoint.",
                          "schema": {
                            "@type": "Object",
                            "fields": [
                              {
                                "@type": "Field",
                                "name": "trustList",
                                "description": "Secret reference to certificates list to trust.",
                                "schema": "string"
                              }
                            ]
                          }
                        },
                        {
                          "@type": "Field",
                          "name": "version",
                          "description": "Version associated with device endpoint.",
                          "schema": "string"
                        }
                      ]
                    }
                  }
                }
              },
              {
                "@type": "Field",
                "name": "outbound",
                "description": "Set of endpoints for device to connect to.",
                "schema": {
                  "@type": "Object",
                  "fields": [
                    {
                      "@type": ["Field", "Required"],
                      "name": "assigned",
                      "description": "Device messaging endpoint model.",
                      "schema": {
                        "@type": "Map",
                        "mapKey": {
                          "name": "assignedOutboundEndpointName",
                          "schema": "string"
                        },
                        "mapValue": {
                          "name": "assignedOutboundEndpoint",
                          "schema": "dtmi:com:microsoft:akri:DeviceOutboundEndpoint;1"
                        }
                      }
                    },
                    {
                      "@type": "Field",
                      "name": "unassigned",
                      "description": "Device messaging endpoint model.",
                      "schema": {
                        "@type": "Map",
                        "mapKey": {
                          "name": "unassignedOutboundEndpointName",
                          "schema": "string"
                        },
                        "mapValue": {
                          "name": "unassignedOutboundEndpoint",
                          "schema": "dtmi:com:microsoft:akri:DeviceOutboundEndpoint;1"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "@type": "Field",
          "name": "externalDeviceId",
          "description": "The Device ID provided by the customer.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "lastTransitionTime",
          "description": "A timestamp (in UTC) that is updated each time the resource is modified.",
          "schema": "dateTime"
        },
        {
          "@type": "Field",
          "name": "manufacturer",
          "description": "Device manufacturer.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "model",
          "description": "Device model.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "operatingSystem",
          "description": "Device operating system.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "operatingSystemVersion",
          "description": "Device operating system version.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "uuid",
          "description": "Gets a unique identifier for this resource.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "version",
          "description": "An integer that is incremented each time the resource is modified.",
          "schema": "unsignedLong"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DeviceStatus;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "config",
          "description": "The configuration status of the device.",
          "schema": "dtmi:com:microsoft:akri:ConfigStatus;1"
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:DeviceStatusEndpoint;1",
          "name": "endpoints",
          "description": "Defines the device status for inbound/outbound endpoints.",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": "Field",
                "@id": "dtmi:com:microsoft:akri:DeviceStatusInboundEndpoint;1",
                "name": "inbound",
                "schema": {
                  "@type": "Map",
                  "mapKey": {
                    "name": "inboundEndpointName",
                    "schema": "string"
                  },
                  "mapValue": {
                    "name": "inboundEndpointStatus",
                    "description": "Defines the device status for specific endpoint.",
                    "schema": {
                      "@type": "Object",
                      "fields": [
                        {
                          "@type": "Field",
                          "name": "error",
                          "description": "The last error that occurred while processing the endpoint.",
                          "schema": "dtmi:com:microsoft:akri:ConfigError;1"
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:Asset;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "assetTypeRefs",
          "description": "URIs or type definition IDs.",
          "schema": {
            "@type": "Array",
            "elementSchema": "string"
          }
        },
        {
          "@type": "Field",
          "name": "attributes",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "attributeKey",
              "schema": "string"
            },
            "mapValue": {
              "name": "attributeValue",
              "schema": "string"
            }
          }
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetDataset;1",
          "name": "datasets",
          "description": "Array of data sets that are part of the asset. Each data set describes the data points that make up the set.",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "@type": "Field",
                  "@id": "dtmi:com:microsoft:akri:AssetDatasetDataPoint;1",
                  "name": "dataPoints",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": {
                      "@type": "Object",
                      "fields": [
                        {
                          "@type": "Field",
                          "name": "dataPointConfiguration",
                          "description": "Stringified JSON that contains connector-specific configuration for the data point.",
                          "schema": "string"
                        },
                        {
                          "@type": ["Field"],
                          "name": "dataSource",
                          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset.",
                          "schema": "string"
                        },
                        {
                          "@type": ["Field", "Required"],
                          "name": "name",
                          "description": "The name of the data point.",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "typeRef",
                          "description": "URI or type definition ID.",
                          "schema": "string"
                        }
                      ]
                    }
                  }
                },
                {
                  "@type": "Field",
                  "name": "dataSource",
                  "description": "Reference to a data source for a given dataset.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "datasetConfiguration",
                  "description": "Stringified JSON that contains connector-specific JSON string that describes configuration for the specific dataset.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "destinations",
                  "description": "Destinations for a dataset.",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "dtmi:com:microsoft:akri:DatasetDestination;1"
                  }
                },
                {
                  "@type": ["Field", "Required"],
                  "name": "name",
                  "description": "Name of the dataset.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "typeRef",
                  "description": "URI or type definition ID.",
                  "schema": "string"
                }
              ]
            }
          }
        },
        {
          "@type": "Field",
          "name": "defaultDatasetsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultDatasetsDestinations",
          "description": "Default destinations for a dataset.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DatasetDestination;1"
          }
        },
        {
          "@type": "Field",
          "name": "defaultEventsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultEventsDestinations",
          "description": "Default destinations for an event.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
          }
        },
        {
          "@type": "Field",
          "name": "defaultManagementGroupsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultStreamsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultStreamsDestinations",
          "description": "Default destinations for a stream.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
          }
        },
        {
          "@type": "Field",
          "name": "description",
          "description": "Human-readable description of the asset.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "deviceRef",
          "description": "Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.",
          "schema": "dtmi:com:microsoft:akri:AssetDeviceRef;1"
        },
        {
          "@type": "Field",
          "name": "discoveredAssetRefs",
          "description": "Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.",
          "schema": {
            "@type": "Array",
            "elementSchema": "string"
          }
        },
        {
          "@type": "Field",
          "name": "displayName",
          "description": "Human-readable display name.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "documentationUri",
          "description": "Asset documentation reference.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "enabled",
          "description": "Enabled/Disabled status of the asset.",
          "schema": "boolean"
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetEventGroup;1",
          "name": "eventGroups",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "@type": "Field",
                  "name": "dataSource",
                  "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "defaultEventsDestinations",
                  "description": "Default destinations for an event.",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
                  }
                },
                {
                  "@type": "Field",
                  "name": "eventGroupConfiguration",
                  "description": "Stringified JSON that contains connector-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "@id": "dtmi:com:microsoft:akri:AssetEvent;1",
                  "name": "events",
                  "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": {
                      "@type": "Object",
                      "fields": [
                        {
                          "@type": "Field",
                          "name": "dataSource",
                          "description": "Reference to a data source for a given event.",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "destinations",
                          "description": "Destinations for an event.",
                          "schema": {
                            "@type": "Array",
                            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
                          }
                        },
                        {
                          "@type": "Field",
                          "name": "eventConfiguration",
                          "description": "Stringified JSON that contains connector-specific configuration for the specific event.",
                          "schema": "string"
                        },
                        {
                          "@type": ["Field", "Required"],
                          "name": "name",
                          "description": "The name of the event.",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "typeRef",
                          "description": "URI or type definition ID.",
                          "schema": "string"
                        }
                      ]
                    }
                  }
                },
                {
                  "@type": ["Field", "Required"],
                  "name": "name",
                  "description": "Name of the event group.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "typeRef",
                  "description": "URI or type definition ID.",
                  "schema": "string"
                }
              ]
            }
          }
        },
        {
          "@type": "Field",
          "name": "externalAssetId",
          "description": "Asset ID provided by the customer.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "hardwareRevision",
          "description": "Asset hardware revision number.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "lastTransitionTime",
          "description": "A timestamp (in UTC) that is updated each time the resource is modified.",
          "schema": "dateTime"
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetManagementGroup;1",
          "name": "managementGroups",
          "description": "Array of management groups that are part of the asset.",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "@type": "Field",
                  "@id": "dtmi:com:microsoft:akri:AssetManagementGroupAction;1",
                  "name": "actions",
                  "description": "Array of actions that are part of the management group. Each action can have an individual configuration.",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": {
                      "@type": "Object",
                      "fields": [
                        {
                          "@type": "Field",
                          "name": "actionConfiguration",
                          "description": "Configuration for the action.",
                          "schema": "string"
                        },
                        {
                          "@type": ["Field", "Required"],
                          "name": "actionType",
                          "description": "Type of the action.",
                          "schema": "dtmi:com:microsoft:akri:AssetManagementGroupActionType;1"
                        },
                        {
                          "@type": ["Field", "Required"],
                          "name": "name",
                          "description": "Name of the action.",
                          "schema": "string"
                        },
                        {
                          "@type": ["Field", "Required"],
                          "name": "targetUri",
                          "description": "The target URI on which a client can invoke the specific action.",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "timeoutInSeconds",
                          "description": "Response timeout for the action.",
                          "schema": "unsignedLong"
                        },
                        {
                          "@type": "Field",
                          "name": "topic",
                          "description": "The MQTT topic path on which a client will receive the request for the action.",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "typeRef",
                          "description": "URI or type definition ID.",
                          "schema": "string"
                        }
                      ]
                    }
                  }
                },
                {
                  "@type": "Field",
                  "name": "dataSource",
                  "description": "Reference to a data source for a given management group.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "defaultTimeoutInSeconds",
                  "description": "Default response timeout for all actions that are part of the management group.",
                  "schema": "unsignedLong"
                },
                {
                  "@type": "Field",
                  "name": "defaultTopic",
                  "description": "Default MQTT topic path on which a client will receive the request for all actions that are part of the management group.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "managementGroupConfiguration",
                  "description": "Stringified JSON that contains connector-specific configuration for the management group.",
                  "schema": "string"
                },
                {
                  "@type": ["Field", "Required"],
                  "name": "name",
                  "description": "Name of the management group.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "typeRef",
                  "description": "URI or type definition ID.",
                  "schema": "string"
                }
              ]
            }
          }
        },
        {
          "@type": "Field",
          "name": "manufacturer",
          "description": "Asset manufacturer.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "manufacturerUri",
          "description": "Asset manufacturer URI.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "model",
          "description": "Asset model.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "productCode",
          "description": "Asset product code.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "serialNumber",
          "description": "Asset serial number.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "softwareRevision",
          "description": "Asset software revision number.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetStream;1",
          "name": "streams",
          "description": "Array of streams that are part of the asset. Each stream can have per-stream configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "@type": "Field",
                  "name": "destinations",
                  "description": "Destinations for a Stream.",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
                  }
                },
                {
                  "@type": ["Field", "Required"],
                  "name": "name",
                  "description": "Name of the stream definition.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "streamConfiguration",
                  "description": "Stringified JSON that contains connector-specific JSON string that describes configuration for the specific stream.",
                  "schema": "string"
                },
                {
                  "@type": "Field",
                  "name": "typeRef",
                  "description": "URI or type definition ID.",
                  "schema": "string"
                }
              ]
            }
          }
        },
        {
          "@type": "Field",
          "name": "uuid",
          "description": "Globally unique, immutable, non-reusable id.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "version",
          "description": "A read-only integer that is incremented each time the resource is modified the cloud.",
          "schema": "unsignedLong"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:AssetStatus;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "config",
          "description": "The configuration status of the asset.",
          "schema": "dtmi:com:microsoft:akri:ConfigStatus;1"
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetDatasetStatus;1",
          "name": "datasets",
          "description": "Array of dataset statuses that describe the status of each dataset.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:AssetDatasetEventStreamStatus;1"
          }
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetEventGroupStatus;1",
          "name": "eventGroups",
          "description": "Array of event group statuses that describe the status of each event group.",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "@type": "Field",
                  "@id": "dtmi:com:microsoft:akri:AssetEventStatus;1",
                  "name": "events",
                  "description": "Array of event statuses that describe the status of each event in the event group.",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": "dtmi:com:microsoft:akri:AssetDatasetEventStreamStatus;1"
                  }
                },
                {
                  "@type": ["Field", "Required"],
                  "name": "name",
                  "description": "The name of the event group. Must be unique within the status.eventGroups array. This name is used to correlate between the spec and status event group information.",
                  "schema": "string"
                }
              ]
            }
          }
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetManagementGroupStatus;1",
          "name": "managementGroups",
          "description": "Array of management group statuses that describe the status of each management group.",
          "schema": {
            "@type": "Array",
            "elementSchema": {
              "@type": "Object",
              "fields": [
                {
                  "@type": "Field",
                  "@id": "dtmi:com:microsoft:akri:AssetManagementGroupActionStatus;1",
                  "name": "actions",
                  "description": "Array of action statuses that describe the status of each action.",
                  "schema": {
                    "@type": "Array",
                    "elementSchema": {
                      "@type": "Object",
                      "fields": [
                        {
                          "@type": "Field",
                          "name": "error",
                          "description": "The last error that occurred while processing the action.",
                          "schema": "dtmi:com:microsoft:akri:ConfigError;1"
                        },
                        {
                          "@type": ["Field", "Required"],
                          "name": "name",
                          "description": "The name of the action. Must be unique within the status.managementGroup[i].actions array. This name is used to correlate between the spec and status management group action information.",
                          "schema": "string"
                        },
                        {
                          "@type": "Field",
                          "name": "requestMessageSchemaReference",
                          "description": "The request message schema reference object.",
                          "schema": "dtmi:com:microsoft:akri:MessageSchemaReference;1"
                        },
                        {
                          "@type": "Field",
                          "name": "responseMessageSchemaReference",
                          "description": "The response message schema reference object.",
                          "schema": "dtmi:com:microsoft:akri:MessageSchemaReference;1"
                        }
                      ]
                    }
                  }
                },
                {
                  "@type": ["Field", "Required"],
                  "name": "name",
                  "description": "The name of the managementgroup. Must be unique within the status.managementGroup array. This name is used to correlate between the spec and status management group information.",
                  "schema": "string"
                }
              ]
            }
          }
        },
        {
          "@type": "Field",
          "@id": "dtmi:com:microsoft:akri:AssetStreamStatus;1",
          "name": "streams",
          "description": "Array of stream statuses that describe the status of each stream.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:AssetDatasetEventStreamStatus;1"
          }
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:AssetDatasetEventStreamStatus;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "error",
          "description": "The last error that occurred while processing the dataset/event/stream.",
          "schema": "dtmi:com:microsoft:akri:ConfigError;1"
        },
        {
          "@type": "Field",
          "name": "messageSchemaReference",
          "description": "The message schema reference object.",
          "schema": "dtmi:com:microsoft:akri:MessageSchemaReference;1"
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "The name of the dataset/event/stream. Must be unique within the status.datasets[i]/events[i]/streams[i] array. This name is used to correlate between the spec and status dataset/event/stream information.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAsset;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "assetTypeRefs",
          "description": "URIs or type definition IDs for the asset type.",
          "schema": {
            "@type": "Array",
            "elementSchema": "string"
          }
        },
        {
          "@type": "Field",
          "name": "attributes",
          "description": "A set of key-value pairs that contain custom attributes.",
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "attributeKey",
              "schema": "string"
            },
            "mapValue": {
              "name": "attributeValue",
              "schema": "string"
            }
          }
        },
        {
          "@type": "Field",
          "name": "datasets",
          "description": "Array of datasets that are part of the asset. Each data set spec describes the data points that make up the set.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DiscoveredAssetDataset;1"
          }
        },
        {
          "@type": "Field",
          "name": "defaultDatasetsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultDatasetsDestinations",
          "description": "Default destinations for a dataset.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DatasetDestination;1"
          }
        },
        {
          "@type": "Field",
          "name": "defaultEventsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultEventsDestinations",
          "description": "Default destinations for an event.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
          }
        },
        {
          "@type": "Field",
          "name": "defaultManagementGroupsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultStreamsConfiguration",
          "description": "Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultStreamsDestinations",
          "description": "Default destinations for a stream.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
          }
        },
        {
          "@type": "Field",
          "name": "description",
          "description": "Human-readable description of the asset.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "deviceRef",
          "description": "Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.",
          "schema": "dtmi:com:microsoft:akri:AssetDeviceRef;1"
        },
        {
          "@type": "Field",
          "name": "displayName",
          "description": "Human-readable display name.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "documentationUri",
          "description": "Asset documentation reference.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "eventGroups",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DiscoveredAssetEventGroup;1"
          }
        },
        {
          "@type": "Field",
          "name": "externalAssetId",
          "description": "Asset ID provided by the customer.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "hardwareRevision",
          "description": "Asset hardware revision number.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "managementGroups",
          "description": "Array of management groups that are part of the asset. Each management group can have a per-group configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DiscoveredAssetManagementGroup;1"
          }
        },
        {
          "@type": "Field",
          "name": "manufacturer",
          "description": "Asset manufacturer.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "manufacturerUri",
          "description": "Asset manufacturer URI.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "model",
          "description": "Asset model.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "productCode",
          "description": "Asset product code.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "serialNumber",
          "description": "Asset serial number.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "softwareRevision",
          "description": "Asset software revision number.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "streams",
          "description": "Array of streams that are part of the asset. Each stream can have per-stream configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DiscoveredAssetStream;1"
          }
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAssetDataset;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "dataPoints",
          "description": "Array of data points that are part of the dataset. Each data point can have per-data-point configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DiscoveredAssetDatasetDataPoint;1"
          }
        },
        {
          "@type": "Field",
          "name": "dataSource",
          "description": "Name of the data source within a dataset.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "datasetConfiguration",
          "description": "Stringified JSON that contains connector-specific properties that describes configuration for the specific dataset.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "destinations",
          "description": "Destinations for a dataset.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DatasetDestination;1"
          }
        },
        {
          "@type": "Field",
          "name": "lastUpdatedOn",
          "description": "Timestamp (in UTC) indicating when the dataset was added or modified.",
          "schema": "dateTime"
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "Name of the dataset.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "typeRef",
          "description": "URI or type definition ID.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAssetDatasetDataPoint;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "dataPointConfiguration",
          "description": "Stringified JSON that contains connector-specific configuration for the data point.",
          "schema": "string"
        },
        {
          "@type": ["Field"],
          "name": "dataSource",
          "description": "The address of the source of the data in the discovered asset (e.g. URL) so that a client can access the data source on the asset.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "lastUpdatedOn",
          "description": "UTC timestamp indicating when the data point was added or modified.",
          "schema": "dateTime"
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "The name of the data point.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "typeRef",
          "description": "URI or type definition ID.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAssetEvent;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "dataSource",
          "description": "Reference to a data source for a given event.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "destinations",
          "description": "Destinations for an event.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
          }
        },
        {
          "@type": "Field",
          "name": "eventConfiguration",
          "description": "Stringified JSON that contains connector-specific configuration for the specific event.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "lastUpdatedOn",
          "description": "UTC timestamp indicating when the event was added or modified.",
          "schema": "dateTime"
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "The name of the event.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "typeRef",
          "description": "URI or type definition ID.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAssetEventGroup;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "dataSource",
          "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultEventsDestinations",
          "description": "Default destinations for an event.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
          }
        },
        {
          "@type": "Field",
          "name": "eventGroupConfiguration",
          "description": "Stringified JSON that contains connector-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "events",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DiscoveredAssetEvent;1"
          }
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "Name of the event group.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "typeRef",
          "description": "URI or type definition ID.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAssetManagementGroup;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "actions",
          "description": "Array of actions that are part of the management group. Each action can have an individual configuration.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:DiscoveredAssetManagementGroupAction;1"
          }
        },
        {
          "@type": "Field",
          "name": "dataSource",
          "description": "Reference to a data source for a given management group.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "defaultTimeoutInSeconds",
          "description": "Default response timeout for all actions that are part of the management group.",
          "schema": "unsignedLong"
        },
        {
          "@type": "Field",
          "name": "defaultTopic",
          "description": "Default MQTT topic path on which a client will receive the request for all actions that are part of the management group.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "lastUpdatedOn",
          "description": "Timestamp (in UTC) indicating when the management group was added or modified.",
          "schema": "dateTime"
        },
        {
          "@type": "Field",
          "name": "managementGroupConfiguration",
          "description": "Stringified JSON that contains connector-specific configuration for the management group.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "Name of the management group.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "typeRef",
          "description": "URI or type definition ID.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAssetManagementGroupAction;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "actionConfiguration",
          "description": "Configuration for the action.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "actionType",
          "description": "Type of the action.",
          "schema": "dtmi:com:microsoft:akri:AssetManagementGroupActionType;1"
        },
        {
          "@type": "Field",
          "name": "lastUpdatedOn",
          "description": "Timestamp (in UTC) indicating when the management action was added or modified.",
          "schema": "dateTime"
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "Name of the action.",
          "schema": "string"
        },
        {
          "@type": ["Field", "Required"],
          "name": "targetUri",
          "description": "The target URI on which a client can invoke the specific action.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "timeoutInSeconds",
          "description": "Response timeout for the action.",
          "schema": "unsignedLong"
        },
        {
          "@type": "Field",
          "name": "topic",
          "description": "The MQTT topic path on which a client will receive the request for the action.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "typeRef",
          "description": "URI or type definition ID.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:DiscoveredAssetStream;1",
      "@type": "Object",
      "fields": [
        {
          "@type": "Field",
          "name": "destinations",
          "description": "Destinations for a stream.",
          "schema": {
            "@type": "Array",
            "elementSchema": "dtmi:com:microsoft:akri:EventStreamDestination"
          }
        },
        {
          "@type": "Field",
          "name": "lastUpdatedOn",
          "description": "Timestamp (in UTC) indicating when the stream was added or modified.",
          "schema": "dateTime"
        },
        {
          "@type": ["Field", "Required"],
          "name": "name",
          "description": "Name of the stream definition.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "streamConfiguration",
          "description": "Stringified JSON that contains connector-specific configuration that describes configuration for the specific stream.",
          "schema": "string"
        },
        {
          "@type": "Field",
          "name": "typeRef",
          "description": "URI or type definition ID.",
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:NotificationPreference;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "name": "On",
          "enumValue": "On"
        },
        {
          "name": "Off",
          "enumValue": "Off"
        }
      ]
    },
    {
      "@id": "dtmi:com:microsoft:akri:AkriServiceError;1",
      "@type": [ "Object", "Error" ],
      "fields": [
        {
          "@type": [ "Field", "Required" ],
          "name": "code",
          "description": "The error code that identifies the error.",
          "schema": {
            "@type": "Enum",
            "valueSchema": "string",
            "enumValues": [
              {
                "name": "BadRequest",
                "enumValue": "BadRequest"
              },
              {
                "name": "KubeError",
                "enumValue": "KubeError"
              },
              {
                "name": "InternalError",
                "enumValue": "InternalError"
              },
              {
                "name": "SerializationError",
                "enumValue": "SerializationError"
              },
              {
                "name": "Unauthorized",
                "enumValue": "Unauthorized"
              }
            ]
          }
        },
        {
          "@type": [ "Field", "Required", "ErrorMessage" ],
          "name": "message",
          "description": "A human-readable description of the error.",
          "schema": "string"
        },
        {
          "@type": [ "Field", "Required" ],
          "name": "timestamp",
          "description": "The timestamp (in UTC) when the error occurred.",
          "schema": "dateTime"
        }
      ]
    }
  ]
}
