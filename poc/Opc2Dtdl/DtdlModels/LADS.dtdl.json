[
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ActiveProgramType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ActiveProgramType",
    "description": "The ActiveProgramType specifies the current state of operation of a FunctionalUnit. It provides context and information about the currently active program on the device. This allows users to follow the progress of a program run in a standardized fashion by organising steps into a flat, linear sequence.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1040",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:LADSComponentsType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "LADSComponentsType",
    "description": "The LADSComponentsType is a type used for structuring objects of type LADSComponentsType in an unordered list structure.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:Machinery:MachineComponentsType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1025",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:LADSOperationCountersType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "LADSOperationCountersType",
    "extends": "dtmi:opcua:Machinery:MachineryOperationCounterType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1034",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:FunctionalUnitSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "FunctionalUnitSetType",
    "description": "The FunctionalUnitSetType provides a set of a FunctionalUnit objects.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1023",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:FunctionSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "FunctionSetType",
    "description": "The FunctionSetType is used for organising FunctionType objects in an unordered list structure.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1026",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ProgramTemplateSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ProgramTemplateSetType",
    "description": "The ProgramTemplateSetType is used for organising ProgramTemplateType objects in an unordered list structure.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1019",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ProgramTemplateType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ProgramTemplateType",
    "description": "The ProgramTemplateType provides a program template.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1018",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:SupportedPropertiesSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "SupportedPropertiesSetType",
    "description": "The SupportedPropertiesSetType provides a set of properties which are supported as members of a properties list Argument for Method calls such as, FunctionalUnit.StartFunctions() or ActiveProgram.Start().",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1033",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:SupportedPropertyType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "SupportedPropertyType",
    "description": "The SupportedPropertyType provides alias names and links to variables within the information model, typically target values or parameters of Functions. This makes it possible to specify a list of KeyValuePairs as an input object. The SupportedPropertyType is used in the SupportedPropertiesSet of the FunctionalUnit or ActiveProgram. The name of each Property object is used as a key in the KeyValuePair list input Argument of the Start()/StartFunctions() Method. Each Property object should contain an Organizes Reference to the target variable to which it belongs. Thus, the metadata of the target variable can be introspected online. The name of the Property object is typically an alias for a variable in the Device.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1035",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ResultFileSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ResultFileSetType",
    "description": "The ResultFileSetType is used for organising ResultFileType objects in an unordered list structure.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1022",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ResultFileType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ResultFileType",
    "description": "ResultFile provides a description of a file that is part of a result of a program managers run.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1001",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ResultSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ResultSetType",
    "description": "The ResultSetType is used for organising ResultType objects in an unordered list structure.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1020",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ResultType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ResultType",
    "description": "The ResultType provides the results of a specific program run.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1021",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:CoverStateMachineType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "CoverStateMachineType",
    "description": "he CoverStateMachineType is used to control the lid, door, or cover of a laboratory device. One Device may have any arbitrary number of lids, doors, covers and their corresponding CoverFunction.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:FiniteStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1010",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:LADSDeviceStateMachineType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "LADSDeviceStateMachineType",
    "description": "The LADSDeviceStateMachineType state machine represents the Device’s operation mode. It is inspired by the AnalyserDeviceStateMachineType from the Analyzer Devices Specification.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:FiniteStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1039",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:FunctionalStateMachineType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "FunctionalStateMachineType",
    "extends": "dtmi:opcua:OpcUaCore:FiniteStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1038",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:RunningStateMachineType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "RunningStateMachineType",
    "description": "The RunningStateMachineType is a sub-state machine of the FunctionalStateMachine and includes detailed substates.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:FiniteStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1036",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:MaintenanceSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "MaintenanceSetType",
    "description": "The MaintenanceSetType is a set containing all maintenance tasks for a Device or Component according to the recommendations in OPC UA 10000-110.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1027",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:MaintenanceTaskType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "MaintenanceTaskType",
    "description": "The MaintenanceTaskType shall be used to implement instances of maintenance tasks applicable at both the Device and Component levels. Maintenance tasks include activities such as periodic maintenance, cleaning, calibration, and validation.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:DI:MaintenanceRequiredAlarmType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1028",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:LADSDeviceType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "LADSDeviceType",
    "description": "The LADSDeviceType provides a base class for laboratory- and analytical devices.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:DI:DeviceType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1002",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:LADSComponentType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "LADSComponentType",
    "description": "Devices may be composed of tangible sub-components. A component is represented by the LADSComponentType. A component itself may also have sub-components.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:DI:ComponentType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1024",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:FunctionalUnitType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "FunctionalUnitType",
    "description": "The FunctionalUnitType represents a functional unit of a laboratory or analytical device.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:DI:TopologyElementType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1003",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:FunctionType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "FunctionType",
    "description": "Abstract function type",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:DI:TopologyElementType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1004",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:BaseControlFunctionType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "BaseControlFunctionType",
    "description": "The BaseControlFunctionType provides an abstract superclass for all control functions.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:FunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1007",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogControlFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "AnalogControlFunctionType",
    "description": "The AnalogControlFunctionType describes an analogue control function (using analogue values). More specialized analogue control functions can be derived from this ObjectType.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:BaseControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1009",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogControlFunctionWithTotalizerType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "AnalogControlFunctionWithTotalizerType",
    "description": "The AnalogControlFunctionWithTotalizerType describes an analogue control (using analogue values) function with totalizer. Typical usage examples include but are not limited to fluid controllers where the quantity of fluid needs to be accurately measured and totalled for metering purposes.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:AnalogControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1014",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:DiscreteControlFunctionType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "DiscreteControlFunctionType",
    "description": "The DiscreteControlFunctionType describes an abstract discrete control function (using discrete values). More specialized discrete control functions can be derived from this ObjectType.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:BaseControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1017",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:MultiStateDiscreteControlFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "MultiStateDiscreteControlFunctionType",
    "description": "The MultiStateDiscreteControlFunctionType describes a discrete control function (using more than two discrete values).",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:DiscreteControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1045",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:TwoStateDiscreteControlFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "TwoStateDiscreteControlFunctionType",
    "description": "The TwoStateDiscreteControlFunctionType describes a discrete control function with two possible values (e.g., on/off).",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:DiscreteControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1042",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:BaseSensorFunctionType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "BaseSensorFunctionType",
    "description": "The BaseSensorFunctionType is an abstract ObjectType used as a base for derivation of Sensor Functions. A Sensor Function is a Function that measures data.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:FunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1005",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogScalarSensorFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "AnalogScalarSensorFunctionType",
    "description": "The AnalogScalarSensorFunctionType is a concrete subtype of the AnalogSensorFunctionType which represents an analogue measured value.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:AnalogSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1016",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:DiscreteSensorFunctionType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "DiscreteSensorFunctionType",
    "description": "The DiscreteSensorFunctionType is an abstract ObjectType used as a base for derivation of sensors with discrete signals.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:BaseSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1012",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:CoverFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "CoverFunctionType",
    "description": "The CoverFunctionType is used to control the cover, door, or lid of a Laboratory Device.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:FunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1011",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ProgramManagerType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ProgramManagerType",
    "description": "The ProgramManager provides the functional unit's program manager.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:DI:TopologyElementType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1006",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:TimerControlFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "TimerControlFunctionType",
    "description": "The TimerControlFunctionType defines a simple “one shot” Timer which stops once it has elapsed. It follows the design of other LADS ControlFunctions, utilizing the same state machine and similar variable definitions. As soon as the CurrentValue reaches the TargetValue, the CurrentState of the TimerFunction automatically transitions to Off. This is typically accompanied by some (internal) action/effect, such as stopping the execution of a Function or similar. In the SuspendedState the CurrentValue holds its current value and does not count further until the state switches back to On, either due to a Client command or an internal state change.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:BaseControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1013",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogScalarSensorFunctionWithCompensationType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "AnalogScalarSensorFunctionWithCompensationType",
    "description": "The AnalogScalarSensorFunctionWithCompensationType represents a compensated analogue measured value (e.g. pH sensor, dissolved oxygen sensor, ..)",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:AnalogScalarSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1000",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ControllerTuningParameterType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ControllerTuningParameterType",
    "description": "The ControllerTuningParameterType is an abstract class. It is formally defined in Table 85. Subtypes of the ControllerTuningParameterType contain the parameters and information about a Controller (configuration).",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1008",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:PidControllerParameterType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "PidControllerParameterType",
    "description": "The PidControllerParameterType contains the parameters of an PID controller.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:ControllerTuningParameterType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1030",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:TwoStateDiscreteSensorFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "TwoStateDiscreteSensorFunctionType",
    "description": "The TwoStateDiscreteSensorFunctionType represents a Boolean value that is measured by a Sensor.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:DiscreteSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1031",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:MultiStateDiscreteSensorFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "MultiStateDiscreteSensorFunctionType",
    "description": "The MultiStateDiscreteSensorFunctionType represents a value that is measured by a Sensor and can only be set to a discrete set of values.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:DiscreteSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1037",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:FunctionalUnitStateMachineType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "FunctionalUnitStateMachineType",
    "description": "Represents the state of a FunctionalUnit in a LADS Device",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:FunctionalStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1043",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ControlFunctionStateMachineType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ControlFunctionStateMachineType",
    "description": "Represents the state of a Function in a LADS Device",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:FunctionalStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1044",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:MultiModeAnalogControlFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "MultiModeAnalogControlFunctionType",
    "description": "The MultiModeAnalogControlFunctionType is used when a controller or actuator can be operated in different modes, depending on how the target value and current value are represented. A common example in the laboratory and analytical domain is a peristaltic pump. In this case, the user can choose from various operation modes, such as relative pump speed (0 to 100%), absolute pump rotor speed in RPM, volumetric rate in mL/min (requiring pump calibration), or mass flow rate in g/min (requiring knowledge of the fluid density). Another example in the laboratory and analytical domain is centrifuges. Operators can select between RPM or RCF (Rotational Centrifugal Force, defined as a multiple of G-force) modes. The RCF mode considers the radius of the centrifuge rotor when converting RCF to RPM.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:BaseControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1047",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ControllerParameterType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ControllerParameterType",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1048",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:ControllerParameterSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "ControllerParameterSetType",
    "description": "The ControllerParameterSetType is used for organising ControllerParameterType objects in an unordered list structure.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1049",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogControlFunctionWithComposedTargetValueType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "AnalogControlFunctionWithComposedTargetValueType",
    "description": "The AnalogControlFunctionWithComposedTargetValueType describes an analogue control function (using analogue values), but the TargetValue is composed of several partial values. An example of a composed target value used in mechanical stress analysers involves combining a static/constant base value with periodically changing values for defined amplitude, frequency, and waveform. As the TargetValue is calculated from variables in the TargetValueSet, it should be read-only.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:AnalogControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1052",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:MultiSensorFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "MultiSensorFunctionType",
    "description": "The MultiSensorFunction represents complex detectors with multiple sensors targeting a specific measurement task, e.g. diode array detector of a HPLC system. The specific sensor elements are represented by sensor-functions in the FunctionSet.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:BaseSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1051",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogControlFunctionWithRelativeTargetValueType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "AnalogControlFunctionWithRelativeTargetValueType",
    "description": "The AnalogControlFunctionWithRelativeTargetValueType supports applications where the target value is typically modified by relative increments or decrements. Examples of its usage include position controllers where the actuator needs to modify its position relative to the last defined position by a specific amount, or dispenser controllers that are responsible for aspirating or dispensing a certain volume of fluid. The optional DecreaseRate and IncreaseRate variables can be utilized to customize the dynamics of the resulting action based on application-specific requirements. These variables allow for adapting to factors such as viscosity when aspirating or dispensing fluids.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:AnalogControlFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1029",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogArraySensorFunctionType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "AnalogArraySensorFunctionType",
    "description": "The AnalogArraySensorFunctionType is a concrete subtype of the AnalogSensorFunctionType which represents an array of analogue measured values.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:AnalogSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1015",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:SetType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "SetType",
    "description": "The SetType provides an unordered set of objects.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:OpcUaCore:FolderType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=61",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:VariableSetType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "VariableSetType",
    "description": "The VariableSetType is used for storing additional sample data that was created during a run.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:SetType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1041",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:AnalogSensorFunctionType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "AnalogSensorFunctionType",
    "description": "The AnalogSensorFunctionType is a abstract subtype of the BaseSensorFunctionType which represents an analogue measured value. This is an extension point for all analogue measured values without built-in compensation on the Sensor.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:LADS:BaseSensorFunctionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1046",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:LADS:LADSOperationModeStateMachineType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/LADS/",
    "displayName": "LADSOperationModeStateMachineType",
    "description": "State machine representing the operation mode of a laboratory device. Optional methods allow for initiating changes of the operation mode from remote.",
    "comment": "Model converted from OPC UA spec version 1.0.0 by Azure Opc2Dtdl converter v0.1.0.0 at 09/08/2025 15:50:08 UTC",
    "extends": "dtmi:opcua:Machinery:MachineryOperationModeStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/LADS/;i=1050",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  }
]
