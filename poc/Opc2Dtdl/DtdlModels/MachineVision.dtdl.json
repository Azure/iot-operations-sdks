[
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:AcquisitionDoneEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "AcquisitionDoneEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1025",
    "commandTopic": "opcua/MachineVision/AcquisitionDoneEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/AcquisitionDoneEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:AcquisitionDoneEventType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "JobId",
        "displayName": "JobId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:AcquisitionDoneEventType:dataType:JobIdDataType;1",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionConditionType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionConditionType",
    "extends": "dtmi:opcua:OpcUaCore:AcknowledgeableConditionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1033",
    "commandTopic": "opcua/MachineVision/VisionConditionType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/VisionConditionType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:VisionConditionType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionConditionType:dataType:MeasIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "MeasIdDataType",
        "description": "Id is an identifier/name for identifying the measurement operation. This identifier is passed by the client to the vision system so no assumptions can be made about its uniqueness or other properties.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3015",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionConditionType:dataType:PartIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "PartIdDataType",
        "description": "Describes the connection between a unit under test and a result, which was created during the processing of a recipe applied on this unit under test. Usually passed by the client with a Start method call and not changed by the server.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3004",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionConditionType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionConditionType:dataType:ResultIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ResultIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the generated result.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3021",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionConditionType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "BlockReaction",
        "displayName": "BlockReaction",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "boolean",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "CausePath",
        "displayName": "CausePath",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "string",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ErrorCode",
        "displayName": "ErrorCode",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "unsignedLong",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ErrorString",
        "displayName": "ErrorString",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "string",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalConfigurationId",
        "displayName": "ExternalConfigurationId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalRecipeId",
        "displayName": "ExternalRecipeId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "InternalConfigurationId",
        "displayName": "InternalConfigurationId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "InternalRecipeId",
        "displayName": "InternalRecipeId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "JobId",
        "displayName": "JobId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:JobIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "MeasId",
        "displayName": "MeasId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:MeasIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "PartId",
        "displayName": "PartId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:PartIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ProductId",
        "displayName": "ProductId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:ProductIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ResultId",
        "displayName": "ResultId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionConditionType:dataType:ResultIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "StopReaction",
        "displayName": "StopReaction",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "boolean",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionErrorConditionType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionErrorConditionType",
    "extends": "dtmi:opcua:MachineVision:VisionConditionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1035",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionPersistentErrorConditionType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionPersistentErrorConditionType",
    "extends": "dtmi:opcua:MachineVision:VisionConditionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1036",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionWarningConditionType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionWarningConditionType",
    "extends": "dtmi:opcua:MachineVision:VisionConditionType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1034",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:EnterStepSequenceEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "EnterStepSequenceEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1027",
    "commandTopic": "opcua/MachineVision/EnterStepSequenceEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/EnterStepSequenceEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "Steps",
        "displayName": "Steps",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "integer",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:JobStartedEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "JobStartedEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1013",
    "commandTopic": "opcua/MachineVision/JobStartedEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/JobStartedEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:JobStartedEventType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "JobId",
        "displayName": "JobId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:JobStartedEventType:dataType:JobIdDataType;1",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:LeaveStepSequenceEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "LeaveStepSequenceEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1029",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:NextStepEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "NextStepEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1028",
    "commandTopic": "opcua/MachineVision/NextStepEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/NextStepEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "Step",
        "displayName": "Step",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "integer",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ReadyEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "ReadyEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1023",
    "commandTopic": "opcua/MachineVision/ReadyEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/ReadyEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:ReadyEventType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "JobId",
        "displayName": "JobId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ReadyEventType:dataType:JobIdDataType;1",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:RecipePreparedEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "RecipePreparedEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1022",
    "commandTopic": "opcua/MachineVision/RecipePreparedEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/RecipePreparedEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:RecipePreparedEventType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:RecipePreparedEventType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalId",
        "displayName": "ExternalId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:RecipePreparedEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "InternalId",
        "displayName": "InternalId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:RecipePreparedEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ProductId",
        "displayName": "ProductId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:RecipePreparedEventType:dataType:ProductIdDataType;1",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ResultReadyEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "ResultReadyEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1024",
    "commandTopic": "opcua/MachineVision/ResultReadyEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/ResultReadyEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:MeasIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "MeasIdDataType",
        "description": "Id is an identifier/name for identifying the measurement operation. This identifier is passed by the client to the vision system so no assumptions can be made about its uniqueness or other properties.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3015",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:PartIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "PartIdDataType",
        "description": "Describes the connection between a unit under test and a result, which was created during the processing of a recipe applied on this unit under test. Usually passed by the client with a Start method call and not changed by the server.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3004",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:ProcessingTimesDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProcessingTimesDataType",
        "description": "Contains the time when the vision system started execution of the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3005",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "StartTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "EndTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "AcquisitionDuration",
            "schema": "duration"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ProcessingDuration",
            "schema": "duration"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:ResultIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ResultIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the generated result.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3021",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "CreationTime",
        "displayName": "CreationTime",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "time",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalConfigurationId",
        "displayName": "ExternalConfigurationId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalRecipeId",
        "displayName": "ExternalRecipeId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "InternalConfigurationId",
        "displayName": "InternalConfigurationId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "InternalRecipeId",
        "displayName": "InternalRecipeId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "IsPartial",
        "displayName": "IsPartial",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "boolean",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "IsSimulated",
        "displayName": "IsSimulated",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "boolean",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "JobId",
        "displayName": "JobId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:JobIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "MeasId",
        "displayName": "MeasId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:MeasIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "PartId",
        "displayName": "PartId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:PartIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ProcessingTimes",
        "displayName": "ProcessingTimes",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:ProcessingTimesDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ProductId",
        "displayName": "ProductId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:ProductIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ResultContent",
        "displayName": "ResultContent",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "string",
        "writable": false
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "ResultId",
        "displayName": "ResultId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ResultReadyEventType:dataType:ResultIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "ResultState",
        "displayName": "ResultState",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "integer",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ErrorEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "ErrorEventType",
    "extends": "dtmi:opcua:OpcUaCore:TransitionEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1019",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ErrorResolvedEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "ErrorResolvedEventType",
    "extends": "dtmi:opcua:OpcUaCore:TransitionEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1020",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:StateChangedEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "StateChangedEventType",
    "extends": "dtmi:opcua:OpcUaCore:TransitionEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1018",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1015",
    "commandTopic": "opcua/MachineVision/VisionEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/VisionEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:VisionEventType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionEventType:dataType:MeasIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "MeasIdDataType",
        "description": "Id is an identifier/name for identifying the measurement operation. This identifier is passed by the client to the vision system so no assumptions can be made about its uniqueness or other properties.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3015",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionEventType:dataType:PartIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "PartIdDataType",
        "description": "Describes the connection between a unit under test and a result, which was created during the processing of a recipe applied on this unit under test. Usually passed by the client with a Start method call and not changed by the server.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3004",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionEventType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionEventType:dataType:ResultIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ResultIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the generated result.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3021",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionEventType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified" ],
        "name": "CausePath",
        "displayName": "CausePath",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "string",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalConfigurationId",
        "displayName": "ExternalConfigurationId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalRecipeId",
        "displayName": "ExternalRecipeId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "InternalConfigurationId",
        "displayName": "InternalConfigurationId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "InternalRecipeId",
        "displayName": "InternalRecipeId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "JobId",
        "displayName": "JobId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:JobIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "MeasId",
        "displayName": "MeasId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:MeasIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "PartId",
        "displayName": "PartId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:PartIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ProductId",
        "displayName": "ProductId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:ProductIdDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ResultId",
        "displayName": "ResultId",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionEventType:dataType:ResultIdDataType;1",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionDiagnosticInfoEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionDiagnosticInfoEventType",
    "extends": "dtmi:opcua:MachineVision:VisionEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1037",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionInformationEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionInformationEventType",
    "extends": "dtmi:opcua:MachineVision:VisionEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1038",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionSafetyEventType;1",
    "@type": [ "Interface", "Event", "Mqtt", "Congruence" ],
    "displayName": "VisionSafetyEventType",
    "extends": "dtmi:opcua:OpcUaCore:BaseEventType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1030",
    "commandTopic": "opcua/MachineVision/VisionSafetyEventType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/VisionSafetyEventType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "VisionSafetyInformation",
        "displayName": "VisionSafetyInformation",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "string",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "VisionSafetyTriggered",
        "displayName": "VisionSafetyTriggered",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "boolean",
        "writable": true
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ConfigurationManagementType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "ConfigurationManagementType",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1006",
    "commandTopic": "opcua/MachineVision/ConfigurationManagementType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/ConfigurationManagementType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:ConfigurationDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ConfigurationDataType",
        "description": "Indicates that actual content of the configuration may be transferred through temporary file transfer method.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3007",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "HasTransferableDataOnFile",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ExternalId",
            "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "InternalId",
            "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "LastModified",
            "schema": "time"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "ActiveConfiguration",
        "displayName": "ActiveConfiguration",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:ConfigurationDataType;1"
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "ActivateConfiguration",
        "displayName": "ActivateConfiguration",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "AddConfiguration",
        "displayName": "AddConfiguration",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalId",
                "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Configuration",
                "schema": "string"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "TransferRequired",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "GetConfigurationById",
        "displayName": "GetConfigurationById",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Timeout",
                "schema": "integer"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ConfigurationHandle",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Configuration",
                "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:ConfigurationDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "GetConfigurationList",
        "displayName": "GetConfigurationList",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "MaxResults",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "StartIndex",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Timeout",
                "schema": "integer"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "IsComplete",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultCount",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ConfigurationHandle",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ConfigurationList",
                "schema": {
                  "@type": "Array",
                  "elementSchema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:ConfigurationDataType;1"
                }
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "ReleaseConfigurationHandle",
        "displayName": "ReleaseConfigurationHandle",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ConfigurationHandle",
                "schema": "unsignedInteger"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "RemoveConfiguration",
        "displayName": "RemoveConfiguration",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:ConfigurationManagementType:dataType:BinaryIdBaseDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Configurations",
        "displayName": "Configurations",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:ConfigurationFolderType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ConfigurationTransfer",
        "displayName": "ConfigurationTransfer",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:ConfigurationTransferType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ConfigurationFolderType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "ConfigurationFolderType",
    "extends": "dtmi:opcua:OpcUaCore:FolderType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1011",
    "telemetryTopic": "opcua/MachineVision/ConfigurationFolderType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:ConfigurationFolderType:dataType:ConfigurationDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ConfigurationDataType",
        "description": "Indicates that actual content of the configuration may be transferred through temporary file transfer method.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3007",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "HasTransferableDataOnFile",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ExternalId",
            "schema": "dtmi:opcua:MachineVision:ConfigurationFolderType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "InternalId",
            "schema": "dtmi:opcua:MachineVision:ConfigurationFolderType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "LastModified",
            "schema": "time"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ConfigurationFolderType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "Configuration",
        "displayName": "<Configuration>",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": {
          "@type": "Map",
          "mapKey": {
            "name": "Configuration",
            "schema": "string"
          },
          "mapValue": {
            "name": "ConfigurationSchema",
            "schema": "dtmi:opcua:MachineVision:ConfigurationFolderType:dataType:ConfigurationDataType;1"
          }
        }
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ProductFolderType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "ProductFolderType",
    "extends": "dtmi:opcua:OpcUaCore:FolderType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1010",
    "telemetryTopic": "opcua/MachineVision/ProductFolderType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:ProductFolderType:dataType:ProductDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductDataType",
        "description": "Identification of the product used by the environment. This argument must not be empty.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3020",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "ExternalId",
            "schema": "dtmi:opcua:MachineVision:ProductFolderType:dataType:ProductIdDataType;1"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ProductFolderType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "Product",
        "displayName": "<Product>",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": {
          "@type": "Map",
          "mapKey": {
            "name": "Product",
            "schema": "string"
          },
          "mapValue": {
            "name": "ProductSchema",
            "schema": "dtmi:opcua:MachineVision:ProductFolderType:dataType:ProductDataType;1"
          }
        }
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:RecipeFolderType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "RecipeFolderType",
    "extends": "dtmi:opcua:OpcUaCore:FolderType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1008",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
      {
        "@type": [ "Relationship", "HasComponent", "Qualified" ],
        "name": "Recipe",
        "displayName": "<Recipe>",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:RecipeType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ResultFolderType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "ResultFolderType",
    "extends": "dtmi:opcua:OpcUaCore:FolderType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1016",
    "telemetryTopic": "opcua/MachineVision/ResultFolderType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ResultDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ResultDataType",
        "description": "System-wide unique identifier, which is assigned by the system. This ID can be used for fetching exactly this result using the pertinent result management methods and it is identical to the ResultId of the ResultReadyEventType.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3006",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "ResultId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ResultIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HasTransferableDataOnFile",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "IsPartial",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "IsSimulated",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ResultState",
            "schema": "integer"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "MeasId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:MeasIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "PartId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:PartIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ExternalRecipeId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "InternalRecipeId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ProductId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ProductIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ExternalConfigurationId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "InternalConfigurationId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "JobId",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:JobIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "CreationTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ProcessingTimes",
            "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ProcessingTimesDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ResultContent",
            "schema": {
              "@type": "Array",
              "elementSchema": "string"
            }
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ResultIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ResultIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the generated result.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3021",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:MeasIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "MeasIdDataType",
        "description": "Id is an identifier/name for identifying the measurement operation. This identifier is passed by the client to the vision system so no assumptions can be made about its uniqueness or other properties.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3015",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:PartIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "PartIdDataType",
        "description": "Describes the connection between a unit under test and a result, which was created during the processing of a recipe applied on this unit under test. Usually passed by the client with a Start method call and not changed by the server.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3004",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ProcessingTimesDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProcessingTimesDataType",
        "description": "Contains the time when the vision system started execution of the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3005",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "StartTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "EndTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "AcquisitionDuration",
            "schema": "duration"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ProcessingDuration",
            "schema": "duration"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "ResultVariable",
        "displayName": "<ResultVariable>",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": {
          "@type": [ "Object", "Detail" ],
          "fields": [
            {
              "@type": [ "Field", "Subject", "Qualified", "Required" ],
              "name": "ResultVariable",
              "displayName": "<ResultVariable>",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": {
                "@type": "Map",
                "mapKey": {
                  "name": "ResultVariable",
                  "schema": "string"
                },
                "mapValue": {
                  "name": "ResultVariableSchema",
                  "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ResultDataType;1"
                }
              }
            },
            {
              "@type": [ "Field", "Qualified", "Required" ],
              "name": "CreationTime",
              "displayName": "CreationTime",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": "time"
            },
            {
              "@type": [ "Field", "Qualified", "Required" ],
              "name": "InternalConfigurationId",
              "displayName": "InternalConfigurationId",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:BinaryIdBaseDataType;1"
            },
            {
              "@type": [ "Field", "Qualified", "Required" ],
              "name": "InternalRecipeId",
              "displayName": "InternalRecipeId",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:BinaryIdBaseDataType;1"
            },
            {
              "@type": [ "Field", "Qualified", "Required" ],
              "name": "IsPartial",
              "displayName": "IsPartial",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": "boolean"
            },
            {
              "@type": [ "Field", "Qualified", "Required" ],
              "name": "JobId",
              "displayName": "JobId",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:JobIdDataType;1"
            },
            {
              "@type": [ "Field", "Qualified", "Required" ],
              "name": "ResultId",
              "displayName": "ResultId",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": "dtmi:opcua:MachineVision:ResultFolderType:dataType:ResultIdDataType;1"
            },
            {
              "@type": [ "Field", "Qualified", "Required" ],
              "name": "ResultState",
              "displayName": "ResultState",
              "namespace": "http://opcfoundation.org/UA/MachineVision",
              "schema": "integer"
            }
          ]
        }
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:RecipeManagementType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "RecipeManagementType",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1004",
    "commandTopic": "opcua/MachineVision/RecipeManagementType/{commandName}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:TriStateBooleanDataType;1",
        "@type": [ "Enum", "Congruence" ],
        "displayName": "TriStateBooleanDataType",
        "description": "The filtering function shall look for entities where the filtered value is FALSE.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3014",
        "valueSchema": "integer",
        "enumValues": [
          {
            "name": "FALSE_0",
            "enumValue": 0
          },
          {
            "name": "TRUE_1",
            "enumValue": 1
          },
          {
            "name": "DONTCARE_2",
            "enumValue": 2
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Command", "Qualified" ],
        "name": "AddRecipe",
        "displayName": "AddRecipe",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:ProductIdDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Recipe",
                "schema": "string"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Product",
                "schema": "string"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "TransferRequired",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "GetRecipeListFiltered",
        "displayName": "GetRecipeListFiltered",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:ProductIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "IsPrepared",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:TriStateBooleanDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "MaxResults",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "StartIndex",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Timeout",
                "schema": "integer"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "IsComplete",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultCount",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "RecipeHandle",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "RecipeList",
                "schema": {
                  "@type": "Array",
                  "elementSchema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
                }
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "PrepareProduct",
        "displayName": "PrepareProduct",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:ProductIdDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "PrepareRecipe",
        "displayName": "PrepareRecipe",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalIdIn",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalIdOut",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "IsCompleted",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "ReleaseRecipeHandle",
        "displayName": "ReleaseRecipeHandle",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "RecipeHandle",
                "schema": "unsignedInteger"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "RemoveRecipe",
        "displayName": "RemoveRecipe",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "UnlinkProduct",
        "displayName": "UnlinkProduct",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:ProductIdDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "UnprepareProduct",
        "displayName": "UnprepareProduct",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:ProductIdDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "UnprepareRecipe",
        "displayName": "UnprepareRecipe",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalId",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalIdIn",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalIdOut",
                "schema": "dtmi:opcua:MachineVision:RecipeManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Products",
        "displayName": "Products",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:ProductFolderType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Recipes",
        "displayName": "Recipes",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:RecipeFolderType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "RecipeTransfer",
        "displayName": "RecipeTransfer",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:RecipeTransferType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:RecipeType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "RecipeType",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1002",
    "commandTopic": "opcua/MachineVision/RecipeType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/RecipeType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:RecipeType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:RecipeType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Property", "Qualified" ],
        "name": "ExternalId",
        "displayName": "ExternalId",
        "description": "Recipe ID for identifying the recipe outside the vision system. The ExternalID is only managed by the host system.",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:RecipeType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "InternalId",
        "displayName": "InternalId",
        "description": "System-wide unique ID for identifying a recipe. This ID is assigned by the vision system.",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:RecipeType:dataType:BinaryIdBaseDataType;1",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "IsPrepared",
        "displayName": "IsPrepared",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "boolean",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified", "Required" ],
        "name": "LastModified",
        "displayName": "LastModified",
        "description": "The time when this recipe was last modified.",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "time",
        "writable": true
      },
      {
        "@type": [ "Property", "Qualified" ],
        "name": "LinkedProducts",
        "displayName": "LinkedProducts",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": {
          "@type": "Array",
          "elementSchema": "dtmi:opcua:MachineVision:RecipeType:dataType:ProductIdDataType;1"
        },
        "writable": true
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "LinkProduct",
        "displayName": "LinkProduct",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:RecipeType:dataType:ProductIdDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "Prepare",
        "displayName": "Prepare",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "IsCompleted",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "UnlinkProduct",
        "displayName": "UnlinkProduct",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:RecipeType:dataType:ProductIdDataType;1"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "Unprepare",
        "displayName": "Unprepare",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Relationship", "HasComponent", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Handle",
        "displayName": "Handle",
        "description": "The file handle refers to the recipe data, which are teated as a BLOB, i.e. they are not interpreted outside the system. They are accessed via OPC UA file operations.",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:FileType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ResultManagementType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "ResultManagementType",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1007",
    "commandTopic": "opcua/MachineVision/ResultManagementType/{commandName}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ResultIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ResultIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the generated result.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3021",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ResultDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ResultDataType",
        "description": "System-wide unique identifier, which is assigned by the system. This ID can be used for fetching exactly this result using the pertinent result management methods and it is identical to the ResultId of the ResultReadyEventType.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3006",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "ResultId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ResultIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HasTransferableDataOnFile",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "IsPartial",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "IsSimulated",
            "schema": "boolean"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ResultState",
            "schema": "integer"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "MeasId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:MeasIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "PartId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:PartIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ExternalRecipeId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "InternalRecipeId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ProductId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ProductIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ExternalConfigurationId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "InternalConfigurationId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "JobId",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:JobIdDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "CreationTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ProcessingTimes",
            "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ProcessingTimesDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ResultContent",
            "schema": {
              "@type": "Array",
              "elementSchema": "string"
            }
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:MeasIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "MeasIdDataType",
        "description": "Id is an identifier/name for identifying the measurement operation. This identifier is passed by the client to the vision system so no assumptions can be made about its uniqueness or other properties.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3015",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:PartIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "PartIdDataType",
        "description": "Describes the connection between a unit under test and a result, which was created during the processing of a recipe applied on this unit under test. Usually passed by the client with a Start method call and not changed by the server.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3004",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ProcessingTimesDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProcessingTimesDataType",
        "description": "Contains the time when the vision system started execution of the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3005",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "StartTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "EndTime",
            "schema": "time"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "AcquisitionDuration",
            "schema": "duration"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "ProcessingDuration",
            "schema": "duration"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Command", "Qualified" ],
        "name": "GetResultById",
        "displayName": "GetResultById",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ResultIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Timeout",
                "schema": "integer"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultHandle",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Result",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ResultDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "GetResultComponentsById",
        "displayName": "GetResultComponentsById",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ResultIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Timeout",
                "schema": "integer"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "HasTransferableDataOnFile",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultHandle",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "IsPartial",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "IsSimulated",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultState",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "MeasId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:MeasIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "PartId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:PartIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalRecipeId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalRecipeId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ProductIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalConfigurationId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalConfigurationId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "JobId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:JobIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "CreationTime",
                "schema": "time"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProcessingTimes",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ProcessingTimesDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultContent",
                "schema": {
                  "@type": "Array",
                  "elementSchema": "string"
                }
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "GetResultListFiltered",
        "displayName": "GetResultListFiltered",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultState",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "MeasId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:MeasIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "PartId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:PartIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalRecipeId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalRecipeId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ExternalConfigurationId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "InternalConfigurationId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ProductIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "JobId",
                "schema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:JobIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "MaxResults",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "StartIndex",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Timeout",
                "schema": "integer"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "IsComplete",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultCount",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultHandle",
                "schema": "unsignedInteger"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultList",
                "schema": {
                  "@type": "Array",
                  "elementSchema": "dtmi:opcua:MachineVision:ResultManagementType:dataType:ResultDataType;1"
                }
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "ReleaseResultHandle",
        "displayName": "ReleaseResultHandle",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "ResultHandle",
                "schema": "unsignedInteger"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Results",
        "displayName": "Results",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:ResultFolderType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ResultTransfer",
        "displayName": "ResultTransfer",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:ResultTransferType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:SafetyStateManagementType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "SafetyStateManagementType",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1009",
    "commandTopic": "opcua/MachineVision/SafetyStateManagementType/{commandName}",
    "telemetryTopic": "opcua/MachineVision/SafetyStateManagementType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "VisionSafetyInformation",
        "displayName": "VisionSafetyInformation",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "string"
      },
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "VisionSafetyTriggered",
        "displayName": "VisionSafetyTriggered",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "boolean"
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "ReportSafetyState",
        "displayName": "ReportSafetyState",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "SafetyTriggered",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "SafetyInformation",
                "schema": "string"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "VisionAutomaticModeStateMachineType",
    "extends": "dtmi:opcua:OpcUaCore:FiniteStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1021",
    "commandTopic": "opcua/MachineVision/VisionAutomaticModeStateMachineType/{commandName}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:MeasIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "MeasIdDataType",
        "description": "Id is an identifier/name for identifying the measurement operation. This identifier is passed by the client to the vision system so no assumptions can be made about its uniqueness or other properties.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3015",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:PartIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "PartIdDataType",
        "description": "Describes the connection between a unit under test and a result, which was created during the processing of a recipe applied on this unit under test. Usually passed by the client with a Start method call and not changed by the server.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3004",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:BinaryIdBaseDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "BinaryIdBaseDataType",
        "description": "Id is a system-wide unique name for identifying the recipe.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3019",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Version",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Hash",
            "schema": "bytes"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "HashAlgorithm",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:ProductIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "ProductIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the product.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3003",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "Description",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:JobIdDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "JobIdDataType",
        "description": "Id is a system-wide unique identifier/name for identifying the job carried out.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3016",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "Id",
            "schema": "string"
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Command", "Qualified" ],
        "name": "Abort",
        "displayName": "Abort",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Cause",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "CauseDescription",
                "schema": "string"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "SimulationMode",
        "displayName": "SimulationMode",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Activate",
                "schema": "boolean"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Cause",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "CauseDescription",
                "schema": "string"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "StartContinuous",
        "displayName": "StartContinuous",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "MeasId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:MeasIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "PartId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:PartIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "RecipeId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:ProductIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Parameters",
                "schema": {
                  "@type": "Array",
                  "elementSchema": "string"
                }
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "JobId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:JobIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "StartSingleJob",
        "displayName": "StartSingleJob",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "MeasId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:MeasIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "PartId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:PartIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "RecipeId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:BinaryIdBaseDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "ProductId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:ProductIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Parameters",
                "schema": {
                  "@type": "Array",
                  "elementSchema": "string"
                }
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "JobId",
                "schema": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType:dataType:JobIdDataType;1"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "Stop",
        "displayName": "Stop",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Cause",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "CauseDescription",
                "schema": "string"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ContinuousExecution",
        "displayName": "ContinuousExecution",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ContinuousExecutionStepModel",
        "displayName": "ContinuousExecutionStepModel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ContinuousExecutionToReadyAbort",
        "displayName": "ContinuousExecutionToReadyAbort",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ContinuousExecutionToReadyAuto",
        "displayName": "ContinuousExecutionToReadyAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ContinuousExecutionToReadyStop",
        "displayName": "ContinuousExecutionToReadyStop",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Initialized",
        "displayName": "Initialized",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "InitializedStepModel",
        "displayName": "InitializedStepModel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "InitializedToReadyAuto",
        "displayName": "InitializedToReadyAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "InitializedToReadyProduct",
        "displayName": "InitializedToReadyProduct",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "InitializedToReadyRecipe",
        "displayName": "InitializedToReadyRecipe",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Ready",
        "displayName": "Ready",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyStepModel",
        "displayName": "ReadyStepModel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyToContinuousExecution",
        "displayName": "ReadyToContinuousExecution",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyToContinuousExecutionAuto",
        "displayName": "ReadyToContinuousExecutionAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyToInitializedAuto",
        "displayName": "ReadyToInitializedAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyToInitializedProduct",
        "displayName": "ReadyToInitializedProduct",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyToInitializedRecipe",
        "displayName": "ReadyToInitializedRecipe",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyToSingleExecution",
        "displayName": "ReadyToSingleExecution",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ReadyToSingleExecutionAuto",
        "displayName": "ReadyToSingleExecutionAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "SingleExecution",
        "displayName": "SingleExecution",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "SingleExecutionStepModel",
        "displayName": "SingleExecutionStepModel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "SingleExecutionToReadyAbort",
        "displayName": "SingleExecutionToReadyAbort",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "SingleExecutionToReadyAuto",
        "displayName": "SingleExecutionToReadyAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "SingleExecutionToReadyStop",
        "displayName": "SingleExecutionToReadyStop",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionStateMachineType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "VisionStateMachineType",
    "extends": "dtmi:opcua:OpcUaCore:FiniteStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1017",
    "commandTopic": "opcua/MachineVision/VisionStateMachineType/{commandName}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
      {
        "@type": [ "Command", "Qualified" ],
        "name": "ConfirmAll",
        "displayName": "ConfirmAll",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Comment",
                "schema": "string"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "Halt",
        "displayName": "Halt",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Cause",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "CauseDescription",
                "schema": "string"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "Reset",
        "displayName": "Reset",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Cause",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "CauseDescription",
                "schema": "string"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Command", "Qualified" ],
        "name": "SelectModeAutomatic",
        "displayName": "SelectModeAutomatic",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "AutomaticModeStateMachine",
        "displayName": "AutomaticModeStateMachine",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionAutomaticModeStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Error",
        "displayName": "Error",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ErrorStepModel",
        "displayName": "ErrorStepModel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ErrorToHalted",
        "displayName": "ErrorToHalted",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ErrorToHaltedAuto",
        "displayName": "ErrorToHaltedAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ErrorToOperationalAuto",
        "displayName": "ErrorToOperationalAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ErrorToPreoperational",
        "displayName": "ErrorToPreoperational",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ErrorToPreoperationalAuto",
        "displayName": "ErrorToPreoperationalAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Halted",
        "displayName": "Halted",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "HaltedStepModel",
        "displayName": "HaltedStepModel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "HaltedToPreoperational",
        "displayName": "HaltedToPreoperational",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "HaltedToPreoperationalAuto",
        "displayName": "HaltedToPreoperationalAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Operational",
        "displayName": "Operational",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "OperationalToErrorAuto",
        "displayName": "OperationalToErrorAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "OperationalToHalted",
        "displayName": "OperationalToHalted",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "OperationalToHaltedAuto",
        "displayName": "OperationalToHaltedAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "OperationalToPreoperational",
        "displayName": "OperationalToPreoperational",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "OperationalToPreoperationalAuto",
        "displayName": "OperationalToPreoperationalAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Preoperational",
        "displayName": "Preoperational",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalStepModel",
        "displayName": "PreoperationalStepModel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalToErrorAuto",
        "displayName": "PreoperationalToErrorAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalToHalted",
        "displayName": "PreoperationalToHalted",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalToHaltedAuto",
        "displayName": "PreoperationalToHaltedAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalToInitialized",
        "displayName": "PreoperationalToInitialized",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalToInitializedAuto",
        "displayName": "PreoperationalToInitializedAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalToOperational",
        "displayName": "PreoperationalToOperational",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "PreoperationalToOperationalAuto",
        "displayName": "PreoperationalToOperationalAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionStepModelStateMachineType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "VisionStepModelStateMachineType",
    "extends": "dtmi:opcua:OpcUaCore:FiniteStateMachineType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1026",
    "commandTopic": "opcua/MachineVision/VisionStepModelStateMachineType/{commandName}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
      {
        "@type": [ "Command", "Qualified" ],
        "name": "Sync",
        "displayName": "Sync",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "request": {
          "@type": [ "CommandRequest", "Transparent" ],
          "name": "input",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Cause",
                "schema": "integer"
              },
              {
                "@type": [ "Field", "Required" ],
                "name": "CauseDescription",
                "schema": "string"
              }
            ]
          }
        },
        "response": {
          "@type": [ "CommandResponse", "Transparent" ],
          "name": "output",
          "schema": {
            "@type": "Object",
            "fields": [
              {
                "@type": [ "Field", "Required" ],
                "name": "Error",
                "schema": "integer"
              }
            ]
          }
        }
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Entry",
        "displayName": "Entry",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:InitialStateType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "EntryToExitAuto",
        "displayName": "EntryToExitAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "EntryToWaitAuto",
        "displayName": "EntryToWaitAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Exit",
        "displayName": "Exit",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Step",
        "displayName": "Step",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "StepToExitAuto",
        "displayName": "StepToExitAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "StepToWaitAuto",
        "displayName": "StepToWaitAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "Wait",
        "displayName": "Wait",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:StateType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "WaitToStep",
        "displayName": "WaitToStep",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "WaitToStepAuto",
        "displayName": "WaitToStepAuto",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:OpcUaCore:TransitionType"
      }
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ConfigurationTransferType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "ConfigurationTransferType",
    "extends": "dtmi:opcua:OpcUaCore:TemporaryFileTransferType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1012",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:RecipeTransferType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "RecipeTransferType",
    "extends": "dtmi:opcua:OpcUaCore:TemporaryFileTransferType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1014",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:ResultTransferType;1",
    "@type": [ "Interface", "Mqtt", "Congruence" ],
    "displayName": "ResultTransferType",
    "extends": "dtmi:opcua:OpcUaCore:TemporaryFileTransferType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1039",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
    ],
    "contents": [
    ]
  },
  {
    "@context": [
      "dtmi:dtdl:context;4#limitless",
      "dtmi:dtdl:limits:aio;1",
      "dtmi:iotoperations:context;4",
      "dtmi:dtdl:extension:quantitativeTypes;3",
      "dtmi:dtdl:extension:mqtt;3",
      "dtmi:dtdl:extension:historization;2",
      "dtmi:dtdl:extension:requirement;2"
    ],
    "@id": "dtmi:opcua:MachineVision:VisionSystemType;1",
    "@type": [ "Interface", "Composite", "Mqtt", "Congruence" ],
    "ontology": "http://opcfoundation.org/UA/MachineVision",
    "displayName": "VisionSystemType",
    "extends": "dtmi:opcua:OpcUaCore:BaseObjectType;1",
    "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=1003",
    "telemetryTopic": "opcua/MachineVision/VisionSystemType/{telemetryName}/{senderId}",
    "payloadFormat": "Json/ecma/404",
    "schemas": [
      {
        "@id": "dtmi:opcua:MachineVision:VisionSystemType:dataType:SystemStateDescriptionDataType;1",
        "@type": [ "Object", "Congruence" ],
        "displayName": "SystemStateDescriptionDataType",
        "description": "Denotes one of the basic SEMI E10 states",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3024",
        "fields": [
          {
            "@type": [ "Field", "Required" ],
            "name": "State",
            "schema": "dtmi:opcua:MachineVision:VisionSystemType:dataType:SystemStateDataType;1"
          },
          {
            "@type": [ "Field", "Required" ],
            "name": "StateDescription",
            "schema": "string"
          }
        ]
      },
      {
        "@id": "dtmi:opcua:MachineVision:VisionSystemType:dataType:SystemStateDataType;1",
        "@type": [ "Enum", "Congruence" ],
        "displayName": "SystemStateDataType",
        "description": "Production: The vision system is currently working on a job.",
        "typeRef": "nsu=http://opcfoundation.org/UA/MachineVision/;i=3023",
        "valueSchema": "integer",
        "enumValues": [
          {
            "name": "PRD_1",
            "enumValue": 1
          },
          {
            "name": "SBY_2",
            "enumValue": 2
          },
          {
            "name": "ENG_3",
            "enumValue": 3
          },
          {
            "name": "SDT_4",
            "enumValue": 4
          },
          {
            "name": "UDT_5",
            "enumValue": 5
          },
          {
            "name": "NST_6",
            "enumValue": 6
          }
        ]
      }
    ],
    "contents": [
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "DiagnosticLevel",
        "displayName": "DiagnosticLevel",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "unsignedShort"
      },
      {
        "@type": [ "Telemetry", "Qualified" ],
        "name": "SystemState",
        "displayName": "SystemState",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "schema": "dtmi:opcua:MachineVision:VisionSystemType:dataType:SystemStateDescriptionDataType;1"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ConfigurationManagement",
        "displayName": "ConfigurationManagement",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:ConfigurationManagementType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "RecipeManagement",
        "displayName": "RecipeManagement",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:RecipeManagementType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "ResultManagement",
        "displayName": "ResultManagement",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:ResultManagementType"
      },
      {
        "@type": [ "Relationship", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "SafetyStateManagement",
        "displayName": "SafetyStateManagement",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:SafetyStateManagementType"
      },
      {
        "@type": [ "Relationship", "HasCapability", "Qualified" ],
        "maxMultiplicity": 1,
        "name": "VisionStateMachine",
        "displayName": "VisionStateMachine",
        "namespace": "http://opcfoundation.org/UA/MachineVision",
        "target": "dtmi:opcua:MachineVision:VisionStateMachineType"
      }
    ]
  }
]
