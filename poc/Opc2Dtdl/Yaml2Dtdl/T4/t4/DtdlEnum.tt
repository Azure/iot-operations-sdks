<#@ template language="C#" linePragmas="false" #>
<#@ import namespace="System.Collections.Generic" #>
      {
        "@id": "<#=TypeConverter.GetDataTypeDtmiFromBrowseName(this.modelId, this.enumType.BrowseName)#>",
        "@type": [ "Enum", "Congruence" ],
<# if (this.enumType.DisplayName != null && this.enumType.DisplayName != string.Empty) { #>
        "displayName": "<#=enumType.DisplayName#>",
<# } #>
<# if (this.enumType.Description != null && this.enumType.Description != string.Empty) { #>
        "description": "<#=enumType.Description#>",
<# } #>
        "typeRef": "<#=TypeConverter.GetTypeRefFromNodeId(this.specMapper, this.enumType.NodeId)#>",
        "valueSchema": "integer",
        "enumValues": [
<# int ix = 1; foreach (KeyValuePair<string, int> intEnum in this.enumType.Enums) { #>
          {
            "name": "<#=TypeConverter.LegalizeName(intEnum.Key)#>",
            "enumValue": <#=intEnum.Value#>
          }<#=ix < this.enumType.Enums.Count ? "," : ""#>
<# ix++; } #>
        ]
      }