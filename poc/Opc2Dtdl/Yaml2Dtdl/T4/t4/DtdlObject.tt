<#@ template language="C#" linePragmas="false" #>
<#@ import namespace="System.Collections.Generic" #>
      {
        "@id": "<#=TypeConverter.GetDataTypeDtmiFromBrowseName(this.modelId, this.objType.BrowseName)#>",
        "@type": [ "Object", "Congruence" ],
<# if (this.objType.DisplayName != null && this.objType.DisplayName != string.Empty) { #>
        "displayName": "<#=objType.DisplayName#>",
<# } #>
<# if (this.objType.Description != null && this.objType.Description != string.Empty) { #>
        "description": "<#=objType.Description#>",
<# } #>
        "typeRef": "<#=TypeConverter.GetTypeRefFromNodeId(this.objType.NodeId)#>",
        "fields": [
<# int ix = 1; foreach (KeyValuePair<string, (string, int)> field in this.objType.Fields) { #>
          {
            "@type": [ "Field", "Required" ],
            "name": "<#=TypeConverter.LegalizeName(field.Key)#>",
            "schema": <#=this.typeConverter.GetDtdlTypeFromOpcUaType(this.modelId, field.Value.Item1, field.Value.Item2, 12)#>
          }<#=ix < this.objType.Fields.Count ? "," : ""#>
<# ix++; } #>
        ]
      }