/* Code generated by Azure.Iot.Operations.ProtocolCompilerLib v0.10.0.0; DO NOT EDIT. */

#nullable enable

namespace Azure.Iot.Operations.Services.SchemaRegistry.SchemaRegistry
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Xml;
    using Azure.Iot.Operations.Protocol;
    using Azure.Iot.Operations.Protocol.RPC;
    using Azure.Iot.Operations.Protocol.Models;
    using Azure.Iot.Operations.Services.SchemaRegistry;

    public static partial class SchemaRegistry
    {
        /// <summary>
        /// Specializes a <c>CommandExecutor</c> class for Command 'get'.
        /// </summary>
        [CommandBehavior(idempotent: true, cacheTtl: "P1D")]
        public class GetCommandExecutor : CommandExecutor<GetRequestSchema, GetResponseSchema>
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="GetCommandExecutor"/> class.
            /// </summary>
            public GetCommandExecutor(ApplicationContext applicationContext, IMqttPubSubClient mqttClient)
                : base(applicationContext, mqttClient, "get", new Utf8JsonSerializer())
            {
                TopicTokenMap["modelId"] = "dtmi:ms:adr:SchemaRegistry;2";
                if (mqttClient.ClientId != null)
                {
                    TopicTokenMap["executorId"] = mqttClient.ClientId;
                }
                TopicTokenMap["commandName"] = "get";
            }
        }
    }
}
