/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT. */

#nullable enable

namespace Azure.Iot.Operations.Services.Observability.AkriObservabilityService
{
    using System;
    using System.Collections.Generic;
    using System.Text.Json.Serialization;
    using Azure.Iot.Operations.Services.Observability;

    /// <summary>
    /// Defines a Counter metric and its associated Increment operations.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Azure.Iot.Operations.ProtocolCompiler", "0.10.0.0")]
    public partial class CounterMetric : IJsonOnDeserialized, IJsonOnSerializing
    {
        /// <summary>
        /// Common identifying properties of the Counter metric.
        /// </summary>
        [JsonPropertyName("definition")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public MetricDefinition Definition { get; set; } = default!;

        /// <summary>
        /// List of Increment operations for this Counter metric.
        /// </summary>
        [JsonPropertyName("operations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonRequired]
        public List<IncrementOperation> Operations { get; set; } = default!;

        void IJsonOnDeserialized.OnDeserialized()
        {
            if (Definition is null)
            {
                throw new ArgumentNullException("definition field cannot be null");
            }
            if (Operations is null)
            {
                throw new ArgumentNullException("operations field cannot be null");
            }
        }

        void IJsonOnSerializing.OnSerializing()
        {
            if (Definition is null)
            {
                throw new ArgumentNullException("definition field cannot be null");
            }
            if (Operations is null)
            {
                throw new ArgumentNullException("operations field cannot be null");
            }
        }
    }
}
