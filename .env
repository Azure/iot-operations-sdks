#!/bin/bash

REPO_ROOT=`git rev-parse --show-toplevel`

# Clear existing environment variables
export -n AIO_BROKER_HOSTNAME
export -n AIO_BROKER_TCP_PORT
export -n AIO_MQTT_CLIENT_ID
export -n AIO_MQTT_USE_TLS
export -n AIO_TLS_CA_FILE
export -n AIO_SAT_FILE
export -n AIO_TLS_CERT_FILE
export -n AIO_TLS_KEY_FILE
export -n LOCATION
export -n RESOURCE_GROUP
export -n CLUSTER_NAME
export -n STORAGE_ACCOUNT
export -n SCHEMA_REGISTRY
export -n SCHEMA_REGISTRY_NAMESPACE

# Environment variables used by install-aio-sdk.sh

# LOCATION: An Azure region close to you. For the list of currently Azure IoT Operations supported regions, see https://learn.microsoft.com/azure/iot-operations/overview-iot-operations#supported-regions.
export LOCATION=westus
# RESOURCE_GROUP: A name for a new Azure resource group where your cluster will be created.
export RESOURCE_GROUP=my-iotops-rg
# CLUSTER_NAME: A name for your Kubernetes cluster.
export CLUSTER_NAME=my-iotops-aks
# STORAGE_ACCOUNT: A name for your storage account. Must be between 3 and 24 characters, and only contain numbers and lowercase letters.
export STORAGE_ACCOUNT=myiotopsstorage
# SCHEMA_REGISTRY: A name for your schema registry. Can only contain numbers, lowercase letters, and hyphens.
export SCHEMA_REGISTRY=my-iotops-sr
# SCHEMA_REGISTRY_NAMESPACE: A name for your schema registry namespace. Uniquely identifies a schema registry within a tenant. Can only contain numbers, lowercase letters, and hyphens.
export SCHEMA_REGISTRY_NAMESPACE=my-iotops-ns

# Common environment variables for all authentication configurations
export AIO_BROKER_HOSTNAME=localhost
export AIO_MQTT_CLIENT_ID=sdk-sample-app

# No TLS, no authentication
# export AIO_BROKER_TCP_PORT=1883
# export AIO_MQTT_USE_TLS=false

# TLS, SAT authentication
export AIO_BROKER_TCP_PORT=8884
export AIO_MQTT_USE_TLS=true
export AIO_TLS_CA_FILE=$REPO_ROOT/.session/broker-ca.crt
export AIO_SAT_FILE=$REPO_ROOT/.session/token.txt

# TLS, x509 authentication
# export AIO_BROKER_TCP_PORT=8883
# export AIO_MQTT_USE_TLS=true
# export AIO_TLS_CA_FILE=$REPO_ROOT/.session/broker-ca.crt
# export AIO_TLS_CERT_FILE=$REPO_ROOT/.session/client.crt
# export AIO_TLS_KEY_FILE=$REPO_ROOT/.session/client.key
