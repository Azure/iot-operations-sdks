apiVersion: v1
items:
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      management.azure.com/api-version: 2024-01-01-preview
      management.azure.com/providerName: Microsoft.ArcContainerStorage
      management.azure.com/resourceType: acstorconfigurations
    creationTimestamp: "2024-12-03T01:11:09Z"
    generation: 1
    labels:
      generation: "1"
    name: acstorconfigurations.arccontainerstorage.azure.net
    resourceVersion: "10607"
    uid: 03c2e80f-f96b-46f9-8241-d35912c9278d
  spec:
    conversion:
      strategy: None
    group: arccontainerstorage.azure.net
    names:
      categories:
      - apps
      kind: ACStorConfiguration
      listKind: ACStorConfigurationList
      plural: acstorconfigurations
      shortNames:
      - acstorconfig
      - acstorconfigs
      singular: acstorconfiguration
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.diskMountPoint
        name: DiskMountPoint
        type: string
      - jsonPath: .spec.diskCapacity
        name: DiskCapacity
        type: string
      - jsonPath: .status.state
        name: Status
        type: string
      - jsonPath: .status.details
        name: StatusDetails
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  type: string
                  x-kubernetes-validations:
                  - message: name must match the singleton "acstor-configuration"
                    rule: self == "acstor-configuration"
              type: object
            spec:
              properties:
                createStoragePool:
                  default:
                    enabled: true
                    name: arccontainerstorage-storage-pool
                    replicas: 3
                  properties:
                    enabled:
                      default: true
                      description: Whether to create a storage pool.
                      type: boolean
                    name:
                      default: arccontainerstorage-storage-pool
                      description: The name of the storage pool.
                      type: string
                    replicas:
                      default: 3
                      description: The number of replicas to create.
                      type: integer
                  type: object
                diskCapacity:
                  description: 'The capacity to use of the chosen disk, including
                    storage unit (example: 60Gi)'
                  type: string
                  x-kubernetes-validations:
                  - message: diskCapacity is immutable
                    rule: self == oldSelf
                  - message: diskCapacity must be a valid storage size
                    rule: self.matches("^[0-9][0-9]*([.][0-9]+)?[KMGTP]i?$")
                diskMountPoint:
                  default: /mnt
                  description: The mount point for the disk that should be used.
                  type: string
              type: object
              x-kubernetes-validations:
              - message: diskMountPoint is immutable
                rule: self.diskMountPoint == oldSelf.diskMountPoint
              - message: createStoragePool is immutable once set
                rule: self.createStoragePool == oldSelf.createStoragePool
            status:
              properties:
                details:
                  type: string
                state:
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - apps
      kind: ACStorConfiguration
      listKind: ACStorConfigurationList
      plural: acstorconfigurations
      shortNames:
      - acstorconfig
      - acstorconfigs
      singular: acstorconfiguration
    conditions:
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: arccertificates.clusterconfig.azure.com
    resourceVersion: "5014"
    uid: 8cd94fb2-49df-4c94-8eb0-dfc408fcac17
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: ArcCertificate
      listKind: ArcCertificateList
      plural: arccertificates
      singular: arccertificate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ArcCertificate is the Schema for the arccertificates API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ArcCertificateSpec defines the desired state of ArcCertificate
              properties:
                issuer:
                  type: string
                serviceName:
                  description: Foo is an example field of ArcCertificate. Edit arccertificate_types.go
                    to remove/update
                  type: string
              type: object
            status:
              description: ArcCertificateStatus defines the observed state of ArcCertificate
              properties:
                errorMessage:
                  type: string
                expirationTime:
                  type: string
                lastSyncTime:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  type: string
                secretName:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ArcCertificate
      listKind: ArcCertificateList
      plural: arccertificates
      singular: arccertificate
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.15.0
    creationTimestamp: "2024-12-03T01:17:38Z"
    generation: 1
    name: assetendpointprofiles.deviceregistry.microsoft.com
    resourceVersion: "14798"
    uid: e8cb3a54-065f-4721-b362-7d73443a687d
  spec:
    conversion:
      strategy: None
    group: deviceregistry.microsoft.com
    names:
      kind: AssetEndpointProfile
      listKind: AssetEndpointProfileList
      plural: assetendpointprofiles
      singular: assetendpointprofile
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: AssetEndpointProfile is the Schema for the assetendpointprofiles
            API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AssetEndpointProfileSpec defines the desired state of AssetEndpointProfile
              properties:
                additionalConfiguration:
                  description: Stringified JSON that contains connectivity type specific
                    further configuration (e.g. OPC UA, Modbus, ONVIF).
                  type: string
                authentication:
                  description: Defines the client authentication mechanism to the
                    server.
                  properties:
                    method:
                      default: Certificate
                      description: Defines the method to authenticate the user of
                        the client at the server.
                      enum:
                      - Anonymous
                      - Certificate
                      - UsernamePassword
                      type: string
                    usernamePasswordCredentials:
                      description: Defines the username and password references when
                        UsernamePassword user authentication mode is selected.
                      properties:
                        passwordSecretName:
                          description: The name of the secret containing the password.
                          type: string
                        usernameSecretName:
                          description: The name of the secret containing the username.
                          type: string
                      required:
                      - passwordSecretName
                      - usernameSecretName
                      type: object
                    x509Credentials:
                      description: Defines the certificate reference when Certificate
                        user authentication mode is selected.
                      properties:
                        certificateSecretName:
                          description: The name of the secret containing the certificate
                            and private key (e.g. stored as .der/.pem or .der/.pfx).
                          type: string
                      required:
                      - certificateSecretName
                      type: object
                  required:
                  - method
                  type: object
                discoveredAssetEndpointProfileRef:
                  description: Reference to a discovered asset endpoint profile. Populated
                    only if the asset endpoint profile has been created from discovery
                    flow. Discovered asset endpoint profile name must be provided.
                  type: string
                endpointProfileType:
                  description: Defines the configuration for the connector type that
                    is being used with the endpoint profile.
                  type: string
                targetAddress:
                  description: The local valid URI specifying the network address/DNS
                    name of a southbound device. The scheme part of the targetAddress
                    URI specifies the type of the device. The additionalConfiguration
                    field holds further connector type specific configuration.
                  type: string
                uuid:
                  description: Globally unique, immutable, non-reusable id.
                  type: string
              required:
              - endpointProfileType
              - targetAddress
              type: object
            status:
              description: AssetEndpointProfileStatus defines the observed state of
                AssetEndpointProfile
              properties:
                errors:
                  description: Array object to transfer and persist errors that originate
                    from the Edge.
                  items:
                    properties:
                      code:
                        description: 'Error code for classification of errors (ex:
                          400, 404, 500, etc.).'
                        format: int32
                        type: integer
                      message:
                        description: 'Human readable helpful error message to provide
                          additional context for error (ex: “targetAddress ''foo''
                          is not a valid url”).'
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: AssetEndpointProfile
      listKind: AssetEndpointProfileList
      plural: assetendpointprofiles
      singular: assetendpointprofile
    conditions:
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.15.0
    creationTimestamp: "2024-12-03T01:17:38Z"
    generation: 1
    name: assets.deviceregistry.microsoft.com
    resourceVersion: "14801"
    uid: d57ccd0f-5037-4603-89a1-8f3b4725166f
  spec:
    conversion:
      strategy: None
    group: deviceregistry.microsoft.com
    names:
      kind: Asset
      listKind: AssetList
      plural: assets
      singular: asset
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Asset is the Schema for the assets API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AssetSpec defines the desired state of Asset
              properties:
                assetEndpointProfileRef:
                  description: A reference to the asset endpoint profile (connection
                    information) used by brokers to connect to an endpoint that provides
                    data points for this asset. Must have the format <ModuleCR.metadata.namespace>/<ModuleCR.metadata.name>.
                  type: string
                attributes:
                  description: A set of key-value pairs that contain custom attributes
                    set by the customer.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                datasets:
                  description: Array of data sets that are part of the asset. Each
                    data set describes the data points that make up the set.
                  items:
                    properties:
                      dataPoints:
                        description: Array of data points that are part of the dataset.
                          Each data point can have per-data point configuration.
                        items:
                          properties:
                            dataPointConfiguration:
                              description: Stringified JSON that contains connector-specific
                                configuration for the data point. For OPC UA, this
                                could include configuration like, publishingInterval,
                                samplingInterval, and queueSize.
                              type: string
                            dataSource:
                              description: The address of the source of the data in
                                the asset (e.g. URL) so that a client can access the
                                data source on the asset.
                              type: string
                            name:
                              description: The name of the data point.
                              type: string
                            observabilityMode:
                              default: None
                              description: An indication of how the data point should
                                be mapped to OpenTelemetry.
                              enum:
                              - None
                              - Counter
                              - Gauge
                              - Histogram
                              - Log
                              type: string
                          required:
                          - dataSource
                          - name
                          type: object
                        maxItems: 1000
                        type: array
                      datasetConfiguration:
                        description: Stringified JSON that contains connector-specific
                          JSON string that describes configuration for the specific
                          dataset.
                        type: string
                      name:
                        description: Name of the dataset.
                        type: string
                      topic:
                        description: Object that describes the topic information for
                          the specific dataset.
                        properties:
                          path:
                            description: The topic path for messages published to
                              an MQTT broker.
                            type: string
                          retain:
                            default: Never
                            description: 'When set to ''Keep'', messages published
                              to an MQTT broker will have the retain flag set. Default:
                              ''Never''.'
                            enum:
                            - Keep
                            - Never
                            type: string
                        required:
                        - path
                        type: object
                    required:
                    - name
                    type: object
                  maxItems: 1
                  type: array
                defaultDatasetsConfiguration:
                  description: Stringified JSON that contains connector-specific default
                    configuration for all datasets. Each dataset can have its own
                    configuration that overrides the default settings here.
                  type: string
                defaultEventsConfiguration:
                  description: Stringified JSON that contains connector-specific default
                    configuration for all events. Each event can have its own configuration
                    that overrides the default settings here.
                  type: string
                defaultTopic:
                  description: Object that describes the default topic information
                    for the asset.
                  properties:
                    path:
                      description: The topic path for messages published to an MQTT
                        broker.
                      type: string
                    retain:
                      default: Never
                      description: 'When set to ''Keep'', messages published to an
                        MQTT broker will have the retain flag set. Default: ''Never''.'
                      enum:
                      - Keep
                      - Never
                      type: string
                  required:
                  - path
                  type: object
                description:
                  description: Human-readable description of the asset.
                  type: string
                discoveredAssetRefs:
                  description: Reference to a list of discovered assets. Populated
                    only if the asset has been created from discovery flow. Discovered
                    asset names must be provided.
                  items:
                    type: string
                  type: array
                displayName:
                  description: Human-readable display name.
                  type: string
                documentationUri:
                  description: Reference to the documentation.
                  type: string
                enabled:
                  description: Enabled/Disabled status of the asset.
                  type: boolean
                events:
                  description: Array of events that are part of the asset. Each event
                    can have per-event configuration.
                  items:
                    properties:
                      eventConfiguration:
                        description: Stringified JSON that contains connector-specific
                          configuration for the event. For OPC UA, this could include
                          configuration like, publishingInterval, samplingInterval,
                          and queueSize.
                        type: string
                      eventNotifier:
                        description: The address of the notifier of the event in the
                          asset (e.g. URL) so that a client can access the event on
                          the asset.
                        type: string
                      name:
                        description: The name of the event.
                        type: string
                      observabilityMode:
                        default: None
                        description: An indication of how the event should be mapped
                          to OpenTelemetry.
                        enum:
                        - None
                        - Log
                        type: string
                      topic:
                        description: Object that describes the topic information for
                          the specific event.
                        properties:
                          path:
                            description: The topic path for messages published to
                              an MQTT broker.
                            type: string
                          retain:
                            default: Never
                            description: 'When set to ''Keep'', messages published
                              to an MQTT broker will have the retain flag set. Default:
                              ''Never''.'
                            enum:
                            - Keep
                            - Never
                            type: string
                        required:
                        - path
                        type: object
                    required:
                    - eventNotifier
                    - name
                    type: object
                  maxItems: 1000
                  type: array
                externalAssetId:
                  description: Asset id provided by the customer.
                  type: string
                hardwareRevision:
                  description: Revision number of the hardware.
                  type: string
                manufacturer:
                  description: Asset manufacturer name.
                  type: string
                manufacturerUri:
                  description: Asset manufacturer URI.
                  type: string
                model:
                  description: Asset model name.
                  type: string
                productCode:
                  description: Asset product code.
                  type: string
                serialNumber:
                  description: Asset serial number.
                  type: string
                softwareRevision:
                  description: Revision number of the software.
                  type: string
                uuid:
                  description: Globally unique, immutable, non-reusable id.
                  type: string
                version:
                  description: An integer that is incremented each time the resource
                    is modified.
                  format: int64
                  type: integer
              required:
              - assetEndpointProfileRef
              type: object
            status:
              description: AssetStatus defines the observed state of Asset
              properties:
                datasets:
                  description: Array of dataset statuses that describe the status
                    of each dataset.
                  items:
                    properties:
                      messageSchemaReference:
                        description: The message schema reference object.
                        properties:
                          schemaName:
                            description: The reference to the message schema name.
                            type: string
                          schemaRegistryNamespace:
                            description: The reference to the message schema registry
                              namespace.
                            type: string
                          schemaVersion:
                            description: The reference to the message schema version.
                            type: string
                        required:
                        - schemaName
                        - schemaRegistryNamespace
                        - schemaVersion
                        type: object
                      name:
                        description: The name of the dataset. Must be unique within
                          the status.datasets array. This name is used to correlate
                          between the spec and status dataset information.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                errors:
                  description: Array object to transfer and persist errors that originate
                    from the Edge.
                  items:
                    properties:
                      code:
                        description: 'Error code for classification of errors (ex:
                          400, 404, 500, etc.).'
                        format: int32
                        type: integer
                      message:
                        description: 'Human readable helpful error message to provide
                          additional context for error (ex: “capability Id ''foo''
                          does not exist”).'
                        type: string
                    type: object
                  type: array
                events:
                  description: Array of event statuses that describe the status of
                    each event.
                  items:
                    properties:
                      messageSchemaReference:
                        description: The message schema reference object.
                        properties:
                          schemaName:
                            description: The reference to the message schema name.
                            type: string
                          schemaRegistryNamespace:
                            description: The reference to the message schema registry
                              namespace.
                            type: string
                          schemaVersion:
                            description: The reference to the message schema version.
                            type: string
                        required:
                        - schemaName
                        - schemaRegistryNamespace
                        - schemaVersion
                        type: object
                      name:
                        description: The name of the event. Must be unique within
                          the status.events array. This name is used to correlate
                          between the spec and status event information.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                version:
                  description: A read only incremental counter indicating the number
                    of times the configuration has been modified from the perspective
                    of the current actual (Edge) state of the Asset. Edge would be
                    the only writer of this value and would sync back up to the cloud.
                    In steady state, this should equal version.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Asset
      listKind: AssetList
      plural: assets
      singular: asset
    conditions:
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.8.0
    creationTimestamp: "2024-12-03T01:18:29Z"
    generation: 1
    name: assettypes.opcuabroker.iotoperations.azure.com
    resourceVersion: "15367"
    uid: fb200c8d-80b5-4c07-81f5-f38a12452a3e
  spec:
    conversion:
      strategy: None
    group: opcuabroker.iotoperations.azure.com
    names:
      kind: AssetType
      listKind: AssetTypeList
      plural: assettypes
      singular: assettype
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AssetType is the Schema for the assettypes API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AssetTypeSpec defines the desired state of AssetType
              properties:
                description:
                  description: An optional description for the asset type
                  type: string
                labels:
                  items:
                    type: string
                  type: array
                name:
                  description: The user friendly name for the asset type.
                  type: string
                schema:
                  description: The settings schema (DTDL) to describe the configuration
                    parameter of the Edge Module
                  minLength: 3
                  type: string
              required:
              - name
              - schema
              type: object
            status:
              description: AssetTypeStatus defines the observed state of AssetType
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: AssetType
      listKind: AssetTypeList
      plural: assettypes
      singular: assettype
    conditions:
    - lastTransitionTime: "2024-12-03T01:18:29Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:18:29Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"assign.mutations.gatekeeper.sh"},"spec":{"group":"mutations.gatekeeper.sh","names":{"kind":"Assign","listKind":"AssignList","plural":"assign","singular":"assign"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"description":"Assign is the Schema for the assign API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"properties":{"name":{"maxLength":63,"type":"string"}},"type":"object"},"spec":{"description":"AssignSpec defines the desired state of Assign.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.\nThis is necessary because every mutation implies part of an object schema and object\nschemas are associated with specific GVKs.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"location":{"description":"Location describes the path to be mutated, for example: `spec.containers[name: main]`.","type":"string"},"match":{"description":"Match allows the user to limit which resources get mutated.\nIndividual match criteria are AND-ed together. An undefined\nmatch criteria matches everything.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"description":"Parameters define the behavior of the mutator.","properties":{"assign":{"description":"Assign.value holds the value to be assigned","properties":{"externalData":{"description":"ExternalData describes the external data provider to be used for mutation.","properties":{"dataSource":{"default":"ValueAtLocation","description":"DataSource specifies where to extract the data that will be sent\nto the external data provider as parameters.","enum":["ValueAtLocation","Username"],"type":"string"},"default":{"description":"Default specifies the default value to use when the external data\nprovider returns an error and the failure policy is set to \"UseDefault\".","type":"string"},"failurePolicy":{"default":"Fail","description":"FailurePolicy specifies the policy to apply when the external data\nprovider returns an error.","enum":["UseDefault","Ignore","Fail"],"type":"string"},"provider":{"description":"Provider is the name of the external data provider.","type":"string"}},"type":"object"},"fromMetadata":{"description":"FromMetadata assigns a value from the specified metadata field.","properties":{"field":{"description":"Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.","type":"string"}},"type":"object"},"value":{"description":"Value is a constant value that will be assigned to `location`","x-kubernetes-preserve-unknown-fields":true}},"type":"object"},"pathTests":{"items":{"description":"PathTest allows the user to customize how the mutation works if parent\npaths are missing. It traverses the list in order. All sub paths are\ntested against the provided condition, if the test fails, the mutation is\nnot applied. All `subPath` entries must be a prefix of `location`. Any\nglob characters will take on the same value as was used to\nexpand the matching glob in `location`.\n\n\nAvailable Tests:\n* MustExist    - the path must exist or do not mutate\n* MustNotExist - the path must not exist or do not mutate.","properties":{"condition":{"description":"Condition describes whether the path either MustExist or MustNotExist in the original object","enum":["MustExist","MustNotExist"],"type":"string"},"subPath":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"status":{"description":"AssignStatus defines the observed state of Assign.","properties":{"byPod":{"items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Assign is the Schema for the assign API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"AssignSpec defines the desired state of Assign.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.\nThis is necessary because every mutation implies part of an object schema and object\nschemas are associated with specific GVKs.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"location":{"description":"Location describes the path to be mutated, for example: `spec.containers[name: main]`.","type":"string"},"match":{"description":"Match allows the user to limit which resources get mutated.\nIndividual match criteria are AND-ed together. An undefined\nmatch criteria matches everything.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"description":"Parameters define the behavior of the mutator.","properties":{"assign":{"description":"Assign.value holds the value to be assigned","properties":{"externalData":{"description":"ExternalData describes the external data provider to be used for mutation.","properties":{"dataSource":{"default":"ValueAtLocation","description":"DataSource specifies where to extract the data that will be sent\nto the external data provider as parameters.","enum":["ValueAtLocation","Username"],"type":"string"},"default":{"description":"Default specifies the default value to use when the external data\nprovider returns an error and the failure policy is set to \"UseDefault\".","type":"string"},"failurePolicy":{"default":"Fail","description":"FailurePolicy specifies the policy to apply when the external data\nprovider returns an error.","enum":["UseDefault","Ignore","Fail"],"type":"string"},"provider":{"description":"Provider is the name of the external data provider.","type":"string"}},"type":"object"},"fromMetadata":{"description":"FromMetadata assigns a value from the specified metadata field.","properties":{"field":{"description":"Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.","type":"string"}},"type":"object"},"value":{"description":"Value is a constant value that will be assigned to `location`","x-kubernetes-preserve-unknown-fields":true}},"type":"object"},"pathTests":{"items":{"description":"PathTest allows the user to customize how the mutation works if parent\npaths are missing. It traverses the list in order. All sub paths are\ntested against the provided condition, if the test fails, the mutation is\nnot applied. All `subPath` entries must be a prefix of `location`. Any\nglob characters will take on the same value as was used to\nexpand the matching glob in `location`.\n\n\nAvailable Tests:\n* MustExist    - the path must exist or do not mutate\n* MustNotExist - the path must not exist or do not mutate.","properties":{"condition":{"description":"Condition describes whether the path either MustExist or MustNotExist in the original object","enum":["MustExist","MustNotExist"],"type":"string"},"subPath":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"status":{"description":"AssignStatus defines the observed state of Assign.","properties":{"byPod":{"items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"Assign is the Schema for the assign API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"AssignSpec defines the desired state of Assign.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.\nThis is necessary because every mutation implies part of an object schema and object\nschemas are associated with specific GVKs.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"location":{"description":"Location describes the path to be mutated, for example: `spec.containers[name: main]`.","type":"string"},"match":{"description":"Match allows the user to limit which resources get mutated.\nIndividual match criteria are AND-ed together. An undefined\nmatch criteria matches everything.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"description":"Parameters define the behavior of the mutator.","properties":{"assign":{"description":"Assign.value holds the value to be assigned","properties":{"externalData":{"description":"ExternalData describes the external data provider to be used for mutation.","properties":{"dataSource":{"default":"ValueAtLocation","description":"DataSource specifies where to extract the data that will be sent\nto the external data provider as parameters.","enum":["ValueAtLocation","Username"],"type":"string"},"default":{"description":"Default specifies the default value to use when the external data\nprovider returns an error and the failure policy is set to \"UseDefault\".","type":"string"},"failurePolicy":{"default":"Fail","description":"FailurePolicy specifies the policy to apply when the external data\nprovider returns an error.","enum":["UseDefault","Ignore","Fail"],"type":"string"},"provider":{"description":"Provider is the name of the external data provider.","type":"string"}},"type":"object"},"fromMetadata":{"description":"FromMetadata assigns a value from the specified metadata field.","properties":{"field":{"description":"Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.","type":"string"}},"type":"object"},"value":{"description":"Value is a constant value that will be assigned to `location`","x-kubernetes-preserve-unknown-fields":true}},"type":"object"},"pathTests":{"items":{"description":"PathTest allows the user to customize how the mutation works if parent\npaths are missing. It traverses the list in order. All sub paths are\ntested against the provided condition, if the test fails, the mutation is\nnot applied. All `subPath` entries must be a prefix of `location`. Any\nglob characters will take on the same value as was used to\nexpand the matching glob in `location`.\n\n\nAvailable Tests:\n* MustExist    - the path must exist or do not mutate\n* MustNotExist - the path must not exist or do not mutate.","properties":{"condition":{"description":"Condition describes whether the path either MustExist or MustNotExist in the original object","enum":["MustExist","MustNotExist"],"type":"string"},"subPath":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"status":{"description":"AssignStatus defines the observed state of Assign.","properties":{"byPod":{"items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: assign.mutations.gatekeeper.sh
    resourceVersion: "4741"
    uid: f1a3040a-d7bc-4d2f-be0b-c98ae8baaf13
  spec:
    conversion:
      strategy: None
    group: mutations.gatekeeper.sh
    names:
      kind: Assign
      listKind: AssignList
      plural: assign
      singular: assign
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Assign is the Schema for the assign API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              description: AssignSpec defines the desired state of Assign.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.
                    This is necessary because every mutation implies part of an object schema and object
                    schemas are associated with specific GVKs.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                location:
                  description: 'Location describes the path to be mutated, for example:
                    `spec.containers[name: main]`.'
                  type: string
                match:
                  description: |-
                    Match allows the user to limit which resources get mutated.
                    Individual match criteria are AND-ed together. An undefined
                    match criteria matches everything.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  description: Parameters define the behavior of the mutator.
                  properties:
                    assign:
                      description: Assign.value holds the value to be assigned
                      properties:
                        externalData:
                          description: ExternalData describes the external data provider
                            to be used for mutation.
                          properties:
                            dataSource:
                              default: ValueAtLocation
                              description: |-
                                DataSource specifies where to extract the data that will be sent
                                to the external data provider as parameters.
                              enum:
                              - ValueAtLocation
                              - Username
                              type: string
                            default:
                              description: |-
                                Default specifies the default value to use when the external data
                                provider returns an error and the failure policy is set to "UseDefault".
                              type: string
                            failurePolicy:
                              default: Fail
                              description: |-
                                FailurePolicy specifies the policy to apply when the external data
                                provider returns an error.
                              enum:
                              - UseDefault
                              - Ignore
                              - Fail
                              type: string
                            provider:
                              description: Provider is the name of the external data
                                provider.
                              type: string
                          type: object
                        fromMetadata:
                          description: FromMetadata assigns a value from the specified
                            metadata field.
                          properties:
                            field:
                              description: Field specifies which metadata field provides
                                the assigned value. Valid fields are `namespace` and
                                `name`.
                              type: string
                          type: object
                        value:
                          description: Value is a constant value that will be assigned
                            to `location`
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    pathTests:
                      items:
                        description: |-
                          PathTest allows the user to customize how the mutation works if parent
                          paths are missing. It traverses the list in order. All sub paths are
                          tested against the provided condition, if the test fails, the mutation is
                          not applied. All `subPath` entries must be a prefix of `location`. Any
                          glob characters will take on the same value as was used to
                          expand the matching glob in `location`.


                          Available Tests:
                          * MustExist    - the path must exist or do not mutate
                          * MustNotExist - the path must not exist or do not mutate.
                        properties:
                          condition:
                            description: Condition describes whether the path either
                              MustExist or MustNotExist in the original object
                            enum:
                            - MustExist
                            - MustNotExist
                            type: string
                          subPath:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            status:
              description: AssignStatus defines the observed state of Assign.
              properties:
                byPod:
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Assign is the Schema for the assign API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AssignSpec defines the desired state of Assign.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.
                    This is necessary because every mutation implies part of an object schema and object
                    schemas are associated with specific GVKs.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                location:
                  description: 'Location describes the path to be mutated, for example:
                    `spec.containers[name: main]`.'
                  type: string
                match:
                  description: |-
                    Match allows the user to limit which resources get mutated.
                    Individual match criteria are AND-ed together. An undefined
                    match criteria matches everything.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  description: Parameters define the behavior of the mutator.
                  properties:
                    assign:
                      description: Assign.value holds the value to be assigned
                      properties:
                        externalData:
                          description: ExternalData describes the external data provider
                            to be used for mutation.
                          properties:
                            dataSource:
                              default: ValueAtLocation
                              description: |-
                                DataSource specifies where to extract the data that will be sent
                                to the external data provider as parameters.
                              enum:
                              - ValueAtLocation
                              - Username
                              type: string
                            default:
                              description: |-
                                Default specifies the default value to use when the external data
                                provider returns an error and the failure policy is set to "UseDefault".
                              type: string
                            failurePolicy:
                              default: Fail
                              description: |-
                                FailurePolicy specifies the policy to apply when the external data
                                provider returns an error.
                              enum:
                              - UseDefault
                              - Ignore
                              - Fail
                              type: string
                            provider:
                              description: Provider is the name of the external data
                                provider.
                              type: string
                          type: object
                        fromMetadata:
                          description: FromMetadata assigns a value from the specified
                            metadata field.
                          properties:
                            field:
                              description: Field specifies which metadata field provides
                                the assigned value. Valid fields are `namespace` and
                                `name`.
                              type: string
                          type: object
                        value:
                          description: Value is a constant value that will be assigned
                            to `location`
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    pathTests:
                      items:
                        description: |-
                          PathTest allows the user to customize how the mutation works if parent
                          paths are missing. It traverses the list in order. All sub paths are
                          tested against the provided condition, if the test fails, the mutation is
                          not applied. All `subPath` entries must be a prefix of `location`. Any
                          glob characters will take on the same value as was used to
                          expand the matching glob in `location`.


                          Available Tests:
                          * MustExist    - the path must exist or do not mutate
                          * MustNotExist - the path must not exist or do not mutate.
                        properties:
                          condition:
                            description: Condition describes whether the path either
                              MustExist or MustNotExist in the original object
                            enum:
                            - MustExist
                            - MustNotExist
                            type: string
                          subPath:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            status:
              description: AssignStatus defines the observed state of Assign.
              properties:
                byPod:
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: Assign is the Schema for the assign API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AssignSpec defines the desired state of Assign.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.
                    This is necessary because every mutation implies part of an object schema and object
                    schemas are associated with specific GVKs.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                location:
                  description: 'Location describes the path to be mutated, for example:
                    `spec.containers[name: main]`.'
                  type: string
                match:
                  description: |-
                    Match allows the user to limit which resources get mutated.
                    Individual match criteria are AND-ed together. An undefined
                    match criteria matches everything.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  description: Parameters define the behavior of the mutator.
                  properties:
                    assign:
                      description: Assign.value holds the value to be assigned
                      properties:
                        externalData:
                          description: ExternalData describes the external data provider
                            to be used for mutation.
                          properties:
                            dataSource:
                              default: ValueAtLocation
                              description: |-
                                DataSource specifies where to extract the data that will be sent
                                to the external data provider as parameters.
                              enum:
                              - ValueAtLocation
                              - Username
                              type: string
                            default:
                              description: |-
                                Default specifies the default value to use when the external data
                                provider returns an error and the failure policy is set to "UseDefault".
                              type: string
                            failurePolicy:
                              default: Fail
                              description: |-
                                FailurePolicy specifies the policy to apply when the external data
                                provider returns an error.
                              enum:
                              - UseDefault
                              - Ignore
                              - Fail
                              type: string
                            provider:
                              description: Provider is the name of the external data
                                provider.
                              type: string
                          type: object
                        fromMetadata:
                          description: FromMetadata assigns a value from the specified
                            metadata field.
                          properties:
                            field:
                              description: Field specifies which metadata field provides
                                the assigned value. Valid fields are `namespace` and
                                `name`.
                              type: string
                          type: object
                        value:
                          description: Value is a constant value that will be assigned
                            to `location`
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    pathTests:
                      items:
                        description: |-
                          PathTest allows the user to customize how the mutation works if parent
                          paths are missing. It traverses the list in order. All sub paths are
                          tested against the provided condition, if the test fails, the mutation is
                          not applied. All `subPath` entries must be a prefix of `location`. Any
                          glob characters will take on the same value as was used to
                          expand the matching glob in `location`.


                          Available Tests:
                          * MustExist    - the path must exist or do not mutate
                          * MustNotExist - the path must not exist or do not mutate.
                        properties:
                          condition:
                            description: Condition describes whether the path either
                              MustExist or MustNotExist in the original object
                            enum:
                            - MustExist
                            - MustNotExist
                            type: string
                          subPath:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            status:
              description: AssignStatus defines the observed state of Assign.
              properties:
                byPod:
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Assign
      listKind: AssignList
      plural: assign
      singular: assign
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"assignimage.mutations.gatekeeper.sh"},"spec":{"group":"mutations.gatekeeper.sh","names":{"kind":"AssignImage","listKind":"AssignImageList","plural":"assignimage","singular":"assignimage"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"AssignImage is the Schema for the assignimage API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"properties":{"name":{"maxLength":63,"type":"string"}},"type":"object"},"spec":{"description":"AssignImageSpec defines the desired state of AssignImage.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.\nThis is necessary because every mutation implies part of an object schema and object\nschemas are associated with specific GVKs.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"location":{"description":"Location describes the path to be mutated, for example: `spec.containers[name: main].image`.","type":"string"},"match":{"description":"Match allows the user to limit which resources get mutated.\nIndividual match criteria are AND-ed together. An undefined\nmatch criteria matches everything.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"description":"Parameters define the behavior of the mutator.","properties":{"assignDomain":{"description":"AssignDomain sets the domain component on an image string. The trailing\nslash should not be included.","type":"string"},"assignPath":{"description":"AssignPath sets the domain component on an image string.","type":"string"},"assignTag":{"description":"AssignImage sets the image component on an image string. It must start\nwith a `:` or `@`.","type":"string"},"pathTests":{"items":{"description":"PathTest allows the user to customize how the mutation works if parent\npaths are missing. It traverses the list in order. All sub paths are\ntested against the provided condition, if the test fails, the mutation is\nnot applied. All `subPath` entries must be a prefix of `location`. Any\nglob characters will take on the same value as was used to\nexpand the matching glob in `location`.\n\n\nAvailable Tests:\n* MustExist    - the path must exist or do not mutate\n* MustNotExist - the path must not exist or do not mutate.","properties":{"condition":{"description":"Condition describes whether the path either MustExist or MustNotExist in the original object","enum":["MustExist","MustNotExist"],"type":"string"},"subPath":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"status":{"description":"AssignImageStatus defines the observed state of AssignImage.","properties":{"byPod":{"items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: assignimage.mutations.gatekeeper.sh
    resourceVersion: "4743"
    uid: 4911f33e-a89a-4fb7-b760-dd3ce35072ec
  spec:
    conversion:
      strategy: None
    group: mutations.gatekeeper.sh
    names:
      kind: AssignImage
      listKind: AssignImageList
      plural: assignimage
      singular: assignimage
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AssignImage is the Schema for the assignimage API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              description: AssignImageSpec defines the desired state of AssignImage.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.
                    This is necessary because every mutation implies part of an object schema and object
                    schemas are associated with specific GVKs.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                location:
                  description: 'Location describes the path to be mutated, for example:
                    `spec.containers[name: main].image`.'
                  type: string
                match:
                  description: |-
                    Match allows the user to limit which resources get mutated.
                    Individual match criteria are AND-ed together. An undefined
                    match criteria matches everything.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  description: Parameters define the behavior of the mutator.
                  properties:
                    assignDomain:
                      description: |-
                        AssignDomain sets the domain component on an image string. The trailing
                        slash should not be included.
                      type: string
                    assignPath:
                      description: AssignPath sets the domain component on an image
                        string.
                      type: string
                    assignTag:
                      description: |-
                        AssignImage sets the image component on an image string. It must start
                        with a `:` or `@`.
                      type: string
                    pathTests:
                      items:
                        description: |-
                          PathTest allows the user to customize how the mutation works if parent
                          paths are missing. It traverses the list in order. All sub paths are
                          tested against the provided condition, if the test fails, the mutation is
                          not applied. All `subPath` entries must be a prefix of `location`. Any
                          glob characters will take on the same value as was used to
                          expand the matching glob in `location`.


                          Available Tests:
                          * MustExist    - the path must exist or do not mutate
                          * MustNotExist - the path must not exist or do not mutate.
                        properties:
                          condition:
                            description: Condition describes whether the path either
                              MustExist or MustNotExist in the original object
                            enum:
                            - MustExist
                            - MustNotExist
                            type: string
                          subPath:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            status:
              description: AssignImageStatus defines the observed state of AssignImage.
              properties:
                byPod:
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: AssignImage
      listKind: AssignImageList
      plural: assignimage
      singular: assignimage
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"assignmetadata.mutations.gatekeeper.sh"},"spec":{"group":"mutations.gatekeeper.sh","names":{"kind":"AssignMetadata","listKind":"AssignMetadataList","plural":"assignmetadata","singular":"assignmetadata"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"description":"AssignMetadata is the Schema for the assignmetadata API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"properties":{"name":{"maxLength":63,"type":"string"}},"type":"object"},"spec":{"description":"AssignMetadataSpec defines the desired state of AssignMetadata.","properties":{"location":{"type":"string"},"match":{"description":"Match selects which objects are in scope.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"properties":{"assign":{"description":"Assign.value holds the value to be assigned","properties":{"externalData":{"description":"ExternalData describes the external data provider to be used for mutation.","properties":{"dataSource":{"default":"ValueAtLocation","description":"DataSource specifies where to extract the data that will be sent\nto the external data provider as parameters.","enum":["ValueAtLocation","Username"],"type":"string"},"default":{"description":"Default specifies the default value to use when the external data\nprovider returns an error and the failure policy is set to \"UseDefault\".","type":"string"},"failurePolicy":{"default":"Fail","description":"FailurePolicy specifies the policy to apply when the external data\nprovider returns an error.","enum":["UseDefault","Ignore","Fail"],"type":"string"},"provider":{"description":"Provider is the name of the external data provider.","type":"string"}},"type":"object"},"fromMetadata":{"description":"FromMetadata assigns a value from the specified metadata field.","properties":{"field":{"description":"Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.","type":"string"}},"type":"object"},"value":{"description":"Value is a constant value that will be assigned to `location`","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"}},"type":"object"},"status":{"description":"AssignMetadataStatus defines the observed state of AssignMetadata.","properties":{"byPod":{"description":"INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file","items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"AssignMetadata is the Schema for the assignmetadata API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"AssignMetadataSpec defines the desired state of AssignMetadata.","properties":{"location":{"type":"string"},"match":{"description":"Match selects which objects are in scope.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"properties":{"assign":{"description":"Assign.value holds the value to be assigned","properties":{"externalData":{"description":"ExternalData describes the external data provider to be used for mutation.","properties":{"dataSource":{"default":"ValueAtLocation","description":"DataSource specifies where to extract the data that will be sent\nto the external data provider as parameters.","enum":["ValueAtLocation","Username"],"type":"string"},"default":{"description":"Default specifies the default value to use when the external data\nprovider returns an error and the failure policy is set to \"UseDefault\".","type":"string"},"failurePolicy":{"default":"Fail","description":"FailurePolicy specifies the policy to apply when the external data\nprovider returns an error.","enum":["UseDefault","Ignore","Fail"],"type":"string"},"provider":{"description":"Provider is the name of the external data provider.","type":"string"}},"type":"object"},"fromMetadata":{"description":"FromMetadata assigns a value from the specified metadata field.","properties":{"field":{"description":"Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.","type":"string"}},"type":"object"},"value":{"description":"Value is a constant value that will be assigned to `location`","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"}},"type":"object"},"status":{"description":"AssignMetadataStatus defines the observed state of AssignMetadata.","properties":{"byPod":{"description":"INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file","items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"AssignMetadata is the Schema for the assignmetadata API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"AssignMetadataSpec defines the desired state of AssignMetadata.","properties":{"location":{"type":"string"},"match":{"description":"Match selects which objects are in scope.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"properties":{"assign":{"description":"Assign.value holds the value to be assigned","properties":{"externalData":{"description":"ExternalData describes the external data provider to be used for mutation.","properties":{"dataSource":{"default":"ValueAtLocation","description":"DataSource specifies where to extract the data that will be sent\nto the external data provider as parameters.","enum":["ValueAtLocation","Username"],"type":"string"},"default":{"description":"Default specifies the default value to use when the external data\nprovider returns an error and the failure policy is set to \"UseDefault\".","type":"string"},"failurePolicy":{"default":"Fail","description":"FailurePolicy specifies the policy to apply when the external data\nprovider returns an error.","enum":["UseDefault","Ignore","Fail"],"type":"string"},"provider":{"description":"Provider is the name of the external data provider.","type":"string"}},"type":"object"},"fromMetadata":{"description":"FromMetadata assigns a value from the specified metadata field.","properties":{"field":{"description":"Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.","type":"string"}},"type":"object"},"value":{"description":"Value is a constant value that will be assigned to `location`","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"}},"type":"object"},"status":{"description":"AssignMetadataStatus defines the observed state of AssignMetadata.","properties":{"byPod":{"description":"INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file","items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: assignmetadata.mutations.gatekeeper.sh
    resourceVersion: "4747"
    uid: f04784dc-33f5-411a-865e-7aea7ee9afdf
  spec:
    conversion:
      strategy: None
    group: mutations.gatekeeper.sh
    names:
      kind: AssignMetadata
      listKind: AssignMetadataList
      plural: assignmetadata
      singular: assignmetadata
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: AssignMetadata is the Schema for the assignmetadata API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              description: AssignMetadataSpec defines the desired state of AssignMetadata.
              properties:
                location:
                  type: string
                match:
                  description: Match selects which objects are in scope.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  properties:
                    assign:
                      description: Assign.value holds the value to be assigned
                      properties:
                        externalData:
                          description: ExternalData describes the external data provider
                            to be used for mutation.
                          properties:
                            dataSource:
                              default: ValueAtLocation
                              description: |-
                                DataSource specifies where to extract the data that will be sent
                                to the external data provider as parameters.
                              enum:
                              - ValueAtLocation
                              - Username
                              type: string
                            default:
                              description: |-
                                Default specifies the default value to use when the external data
                                provider returns an error and the failure policy is set to "UseDefault".
                              type: string
                            failurePolicy:
                              default: Fail
                              description: |-
                                FailurePolicy specifies the policy to apply when the external data
                                provider returns an error.
                              enum:
                              - UseDefault
                              - Ignore
                              - Fail
                              type: string
                            provider:
                              description: Provider is the name of the external data
                                provider.
                              type: string
                          type: object
                        fromMetadata:
                          description: FromMetadata assigns a value from the specified
                            metadata field.
                          properties:
                            field:
                              description: Field specifies which metadata field provides
                                the assigned value. Valid fields are `namespace` and
                                `name`.
                              type: string
                          type: object
                        value:
                          description: Value is a constant value that will be assigned
                            to `location`
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
              type: object
            status:
              description: AssignMetadataStatus defines the observed state of AssignMetadata.
              properties:
                byPod:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AssignMetadata is the Schema for the assignmetadata API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AssignMetadataSpec defines the desired state of AssignMetadata.
              properties:
                location:
                  type: string
                match:
                  description: Match selects which objects are in scope.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  properties:
                    assign:
                      description: Assign.value holds the value to be assigned
                      properties:
                        externalData:
                          description: ExternalData describes the external data provider
                            to be used for mutation.
                          properties:
                            dataSource:
                              default: ValueAtLocation
                              description: |-
                                DataSource specifies where to extract the data that will be sent
                                to the external data provider as parameters.
                              enum:
                              - ValueAtLocation
                              - Username
                              type: string
                            default:
                              description: |-
                                Default specifies the default value to use when the external data
                                provider returns an error and the failure policy is set to "UseDefault".
                              type: string
                            failurePolicy:
                              default: Fail
                              description: |-
                                FailurePolicy specifies the policy to apply when the external data
                                provider returns an error.
                              enum:
                              - UseDefault
                              - Ignore
                              - Fail
                              type: string
                            provider:
                              description: Provider is the name of the external data
                                provider.
                              type: string
                          type: object
                        fromMetadata:
                          description: FromMetadata assigns a value from the specified
                            metadata field.
                          properties:
                            field:
                              description: Field specifies which metadata field provides
                                the assigned value. Valid fields are `namespace` and
                                `name`.
                              type: string
                          type: object
                        value:
                          description: Value is a constant value that will be assigned
                            to `location`
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
              type: object
            status:
              description: AssignMetadataStatus defines the observed state of AssignMetadata.
              properties:
                byPod:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AssignMetadata is the Schema for the assignmetadata API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AssignMetadataSpec defines the desired state of AssignMetadata.
              properties:
                location:
                  type: string
                match:
                  description: Match selects which objects are in scope.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  properties:
                    assign:
                      description: Assign.value holds the value to be assigned
                      properties:
                        externalData:
                          description: ExternalData describes the external data provider
                            to be used for mutation.
                          properties:
                            dataSource:
                              default: ValueAtLocation
                              description: |-
                                DataSource specifies where to extract the data that will be sent
                                to the external data provider as parameters.
                              enum:
                              - ValueAtLocation
                              - Username
                              type: string
                            default:
                              description: |-
                                Default specifies the default value to use when the external data
                                provider returns an error and the failure policy is set to "UseDefault".
                              type: string
                            failurePolicy:
                              default: Fail
                              description: |-
                                FailurePolicy specifies the policy to apply when the external data
                                provider returns an error.
                              enum:
                              - UseDefault
                              - Ignore
                              - Fail
                              type: string
                            provider:
                              description: Provider is the name of the external data
                                provider.
                              type: string
                          type: object
                        fromMetadata:
                          description: FromMetadata assigns a value from the specified
                            metadata field.
                          properties:
                            field:
                              description: Field specifies which metadata field provides
                                the assigned value. Valid fields are `namespace` and
                                `name`.
                              type: string
                          type: object
                        value:
                          description: Value is a constant value that will be assigned
                            to `location`
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
              type: object
            status:
              description: AssignMetadataStatus defines the observed state of AssignMetadata.
              properties:
                byPod:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: AssignMetadata
      listKind: AssignMetadataList
      plural: assignmetadata
      singular: assignmetadata
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: azureclusteridentityrequests.clusterconfig.azure.com
    resourceVersion: "5018"
    uid: b854bd4d-0f74-4d83-b281-a6ddd51471bc
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: AzureClusterIdentityRequest
      listKind: AzureClusterIdentityRequestList
      plural: azureclusteridentityrequests
      shortNames:
      - azidentityreq
      singular: azureclusteridentityrequest
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureClusterIdentityRequest is the Schema for the azureclusteridentityrequests
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AzureClusterIdentityRequestSpec defines the desired state
                of an AzureClusterIdentityRequest
              properties:
                apiVersion:
                  type: string
                audience:
                  type: string
                caller:
                  type: string
                resourceId:
                  type: string
              type: object
            status:
              description: AzureClusterIdentityRequestStatus defines the observed
                state of AzureClusterIdentityRequest
              properties:
                expirationTime:
                  type: string
                tokenReference:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  properties:
                    dataName:
                      type: string
                    secretName:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: AzureClusterIdentityRequest
      listKind: AzureClusterIdentityRequestList
      plural: azureclusteridentityrequests
      shortNames:
      - azidentityreq
      singular: azureclusteridentityrequest
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: azureextensionidentities.clusterconfig.azure.com
    resourceVersion: "5027"
    uid: c11d369f-239b-4f20-8a99-bf7aa4296bb0
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: AzureExtensionIdentity
      listKind: AzureExtensionIdentityList
      plural: azureextensionidentities
      singular: azureextensionidentity
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureExtensionIdentity is the Schema for the azureextensionidentities
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AzureExtensionIdentitySpec defines the desired state of
                AzureExtensionIdentity
              properties:
                allowedAudiences:
                  items:
                    type: string
                  type: array
                serviceAccounts:
                  items:
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                  type: array
                tokenNamespace:
                  type: string
              type: object
            status:
              description: AzureExtensionIdentityStatus defines the observed state
                of AzureExtensionIdentity
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: AzureExtensionIdentity
      listKind: AzureExtensionIdentityList
      plural: azureextensionidentities
      singular: azureextensionidentity
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
      meta.helm.sh/release-name: systemextension.microsoft.extensionsusage
      meta.helm.sh/release-namespace: azure-extensions-usage-system
    creationTimestamp: "2024-12-03T01:14:13Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: billingerrors.clusterconfig.azure.com
    resourceVersion: "12804"
    uid: 03a701b5-f2cb-4b85-9cea-8dfa452f452d
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: BillingError
      listKind: BillingErrorList
      plural: billingerrors
      singular: billingerror
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: BillingError is the Schema for the errors API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BillingErrorSpec defines the desired state of BillingError
              properties:
                usages:
                  items:
                    description: ResourceError is reported error from resource type
                    properties:
                      data:
                        items:
                          description: Item is a name/value pair
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      metadata:
                        items:
                          description: Item is a name/value pair
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    required:
                    - data
                    - metadata
                    type: object
                  type: array
              type: object
            status:
              description: BillingErrorStatus defines the observed state of BillingError
              properties:
                errors:
                  items:
                    properties:
                      statusCode:
                        description: Array of error codes
                        items:
                          type: string
                        type: array
                      statusReason:
                        description: Array of error reasons
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: BillingError
      listKind: BillingErrorList
      plural: billingerrors
      singular: billingerror
    conditions:
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
      meta.helm.sh/release-name: systemextension.microsoft.extensionsusage
      meta.helm.sh/release-namespace: azure-extensions-usage-system
    creationTimestamp: "2024-12-03T01:14:13Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: billingsettingses.clusterconfig.azure.com
    resourceVersion: "12796"
    uid: 2e7ba140-5d03-4ce2-871d-eb885001b898
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: BillingSettings
      listKind: BillingSettingsList
      plural: billingsettingses
      singular: billingsettings
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: BillingSettings is the Schema for the settings Configurations
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BillingSettingsSpec defines the desired state of BillingSettings
              properties:
                BillingConfigurations:
                  items:
                    properties:
                      ApiVersion:
                        type: string
                      Frequency:
                        description: Frequency defines the frequency of the billing
                          settings
                        type: string
                      Identifier:
                        description: Identifier defines the identifier of the billing
                          settings
                        type: string
                      MeterId:
                        type: string
                      Model:
                        description: Model defines the model of the billing settings
                        type: string
                      OrderNumber:
                        description: OrderNumber defines the order number of the billing
                          settings
                        type: string
                      PartNumber:
                        description: PartNumber defines the part number of the billing
                          settings
                        type: string
                      ResourceProviderNamespace:
                        type: string
                      ResourceType:
                        type: string
                      Scope:
                        description: Scope defines the scope of the billing settings
                        type: string
                      ServiceAccount:
                        description: ServiceAccount defines the service account of
                          the first party extensions
                        type: string
                    required:
                    - Model
                    - Frequency
                    - Scope
                    - MeterId
                    type: object
                  type: array
                ExtensionBillingEnabled:
                  type: boolean
              type: object
            status:
              description: BillingSettingsStatus defines the observed state of BillingSettings
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: BillingSettings
      listKind: BillingSettingsList
      plural: billingsettingses
      singular: billingsettings
    conditions:
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
      meta.helm.sh/release-name: systemextension.microsoft.extensionsusage
      meta.helm.sh/release-namespace: azure-extensions-usage-system
    creationTimestamp: "2024-12-03T01:14:13Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: billingstorages.clusterconfig.azure.com
    resourceVersion: "12799"
    uid: 3c9ab96f-8029-4d61-b9bf-2155cfda8ff4
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: BillingStorage
      listKind: BillingStorageList
      plural: billingstorages
      singular: billingstorage
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: BillingStorage is the Schema for the billingstorages API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BillingStorageSpec defines the desired state of BillingStorage
              properties:
                extensionUsages:
                  additionalProperties:
                    description: ExtensionUsage contains all the usages reported by
                      specific extension
                    properties:
                      customLocationID:
                        type: string
                      meterId:
                        type: string
                      name:
                        type: string
                      orderNumber:
                        type: string
                      partNumber:
                        type: string
                      usages:
                        items:
                          description: ResourceUsage is reported usage from resource
                            type
                          properties:
                            data:
                              items:
                                description: Item is a name/value pair
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            metadata:
                              items:
                                description: Item is a name/value pair
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          required:
                          - data
                          - metadata
                          type: object
                        type: array
                    required:
                    - name
                    - meterId
                    - orderNumber
                    - partNumber
                    - usages
                    type: object
                  description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                    Important: Run "make" to regenerate code after modifying this
                    file'
                  type: object
                sequenceNumber:
                  format: int64
                  type: integer
              type: object
            status:
              description: BillingStorageStatus defines the observed state of BillingStorage
              properties:
                extensionSyncStatus:
                  additionalProperties:
                    description: ExtensionStatus provides the stored extension usage
                      sync status
                    properties:
                      isSyncedWithAzure:
                        type: boolean
                      lastSyncTime:
                        type: string
                      usageSavedTime:
                        type: string
                    required:
                    - isSyncedWithAzure
                    - lastSyncTime
                    - usageSavedTime
                    type: object
                  type: object
                storageCRStatus:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  properties:
                    isSyncedWithAzure:
                      type: boolean
                    lastSyncTime:
                      type: string
                  required:
                  - isSyncedWithAzure
                  - lastSyncTime
                  type: object
              required:
              - storageCRStatus
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: BillingStorage
      listKind: BillingStorageList
      plural: billingstorages
      singular: billingstorage
    conditions:
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
      meta.helm.sh/release-name: systemextension.microsoft.extensionsusage
      meta.helm.sh/release-namespace: azure-extensions-usage-system
    creationTimestamp: "2024-12-03T01:14:13Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: billingusages.clusterconfig.azure.com
    resourceVersion: "12802"
    uid: eb1d085c-eb4d-4e71-88d4-fff552671190
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: BillingUsage
      listKind: BillingUsageList
      plural: billingusages
      singular: billingusage
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: BillingUsage is the Schema for the usages API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BillingUsageSpec defines the desired state of BillingUsage
              properties:
                createdBy:
                  description: createdBy is the entity (extension) who created the
                    Billing usage CR
                  type: string
                usages:
                  items:
                    description: ResourceUsage is reported usage from resource type
                    properties:
                      data:
                        items:
                          description: Item is a name/value pair
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      metadata:
                        items:
                          description: Item is a name/value pair
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    required:
                    - data
                    - metadata
                    type: object
                  type: array
              required:
              - createdBy
              type: object
            status:
              description: BillingUsageStatus defines the observed state of BillingUsage
              properties:
                isSyncedWithBillingAgent:
                  type: boolean
                lastSyncTime:
                  description: lastSyncTime is the last sync time for last successful
                    ingestion
                  format: date-time
                  type: string
                usageSavedTime:
                  description: usageSavedTime is the timestamp of the last usage record
                    that was ingested
                  format: date-time
                  type: string
              required:
              - isSyncedWithBillingAgent
              - usageSavedTime
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: BillingUsage
      listKind: BillingUsageList
      plural: billingusages
      singular: billingusage
    conditions:
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:14:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:19:11Z"
    generation: 1
    name: brokerauthentications.mqttbroker.iotoperations.azure.com
    resourceVersion: "15965"
    uid: 19256d9e-68cb-48cd-8fe2-a2b9d2d1ad7a
  spec:
    conversion:
      strategy: None
    group: mqttbroker.iotoperations.azure.com
    names:
      kind: BrokerAuthentication
      listKind: BrokerAuthenticationList
      plural: brokerauthentications
      shortNames:
      - brokerauthn
      singular: brokerauthentication
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for BrokerAuthenticationSpec via
            `CustomResource`
          properties:
            spec:
              description: Defines a set of MQTT authentication methods to be used
                on `BrokerListeners`.
              properties:
                authenticationMethods:
                  description: Defines a set of MQTT authentication methods to be
                    used on `BrokerListeners`. For each array element one authenticator
                    type supported.
                  items:
                    oneOf:
                    - required:
                      - customSettings
                    - required:
                      - serviceAccountTokenSettings
                    - required:
                      - x509Settings
                    properties:
                      customSettings:
                        description: Custom authentication configuration.
                        properties:
                          auth:
                            description: Optional authentication needed for authenticating
                              with the custom authentication server.
                            nullable: true
                            oneOf:
                            - required:
                              - x509
                            properties:
                              x509:
                                description: Authentication with X.509 client credentials.
                                properties:
                                  secretRef:
                                    description: Kubernetes secret containing an X.509
                                      client certificate. This is a reference to the
                                      secret through an identifying name, not the
                                      secret itself.
                                    type: string
                                required:
                                - secretRef
                                type: object
                            type: object
                          caCertConfigMap:
                            description: Optional CA certificate for validating the
                              custom authentication server's certificate.
                            nullable: true
                            type: string
                          endpoint:
                            description: Endpoint of the custom authentication server.
                              Must be an HTTPS endpoint.
                            type: string
                          headers:
                            additionalProperties:
                              type: string
                            description: Additional HTTP headers to pass to the custom
                              authentication server.
                            type: object
                        required:
                        - endpoint
                        type: object
                      method:
                        description: Selector used to determine which of the oneOf
                          values to use.
                        type: string
                      serviceAccountTokenSettings:
                        description: SAT authentication configuration.
                        properties:
                          audiences:
                            description: List of allowed audience.
                            items:
                              type: string
                            type: array
                        required:
                        - audiences
                        type: object
                      x509Settings:
                        description: X.509 authentication configuration.
                        properties:
                          authorizationAttributes:
                            additionalProperties:
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Attributes object.
                                  type: object
                                subject:
                                  description: Subject of the X509 attribute.
                                  type: string
                              required:
                              - attributes
                              - subject
                              type: object
                            description: X509 authorization attributes properties.
                            type: object
                          trustedClientCaCert:
                            default: client-ca
                            description: Name of the trusted client ca cert resource.
                            type: string
                        type: object
                    required:
                    - method
                    type: object
                  type: array
              required:
              - authenticationMethods
              type: object
            status:
              nullable: true
              properties:
                provisioningStatus:
                  nullable: true
                  properties:
                    error:
                      nullable: true
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    failureCause:
                      nullable: true
                      type: string
                    logErrors:
                      nullable: true
                      type: boolean
                    operationId:
                      type: string
                    output:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    status:
                      type: string
                  required:
                  - operationId
                  - status
                  type: object
              type: object
          required:
          - spec
          title: BrokerAuthentication
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: BrokerAuthentication
      listKind: BrokerAuthenticationList
      plural: brokerauthentications
      shortNames:
      - brokerauthn
      singular: brokerauthentication
    conditions:
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:19:11Z"
    generation: 1
    name: brokerauthorizations.mqttbroker.iotoperations.azure.com
    resourceVersion: "15968"
    uid: 70e16d9f-5c0a-4f9d-93ef-d003540b04e8
  spec:
    conversion:
      strategy: None
    group: mqttbroker.iotoperations.azure.com
    names:
      kind: BrokerAuthorization
      listKind: BrokerAuthorizationList
      plural: brokerauthorizations
      shortNames:
      - brokerauthz
      singular: brokerauthorization
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for BrokerAuthorizationSpec via
            `CustomResource`
          properties:
            spec:
              description: Spec defines the desired identities of MQTT broker authorization
                policies.
              properties:
                authorizationPolicies:
                  description: The list of authorization policies supported by the
                    Authorization Resource.
                  properties:
                    cache:
                      default: Enabled
                      description: Enable caching of the authorization rules.
                      enum:
                      - Enabled
                      - enabled
                      - Disabled
                      - disabled
                      type: string
                    rules:
                      description: The authorization rules to follow. If no rule is
                        set, but Authorization Resource is used that would mean `DenyAll`.
                      items:
                        properties:
                          brokerResources:
                            description: Give access to MQTT broker methods and topics.
                            items:
                              properties:
                                clientIds:
                                  default: []
                                  description: A list of client IDs that match the
                                    clients. The client IDs are case-sensitive and
                                    must match the client IDs provided by the clients
                                    during connection. This subfield may be set if
                                    the method is Connect.
                                  items:
                                    type: string
                                  type: array
                                method:
                                  description: Give access for a MQTT method (i.e.,
                                    Connect, Subscribe, or Publish).
                                  enum:
                                  - Connect
                                  - connect
                                  - Publish
                                  - publish
                                  - Subscribe
                                  - subscribe
                                  type: string
                                topics:
                                  default: []
                                  description: A list of topics or topic patterns
                                    that match the topics that the clients can publish
                                    or subscribe to. This subfield is required if
                                    the method is Publish or Subscribe.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - method
                              type: object
                            type: array
                          principals:
                            description: Give access to clients based on the following
                              properties.
                            properties:
                              attributes:
                                default: []
                                description: A list of key-value pairs that match
                                  the attributes of the clients. The attributes are
                                  case-sensitive and must match the attributes provided
                                  by the clients during authentication.
                                items:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type: array
                              clientIds:
                                default: []
                                description: A list of client IDs that match the clients.
                                  The client IDs are case-sensitive and must match
                                  the client IDs provided by the clients during connection.
                                items:
                                  type: string
                                type: array
                              usernames:
                                default: []
                                description: A list of usernames that match the clients.
                                  The usernames are case-sensitive and must match
                                  the usernames provided by the clients during authentication.
                                items:
                                  type: string
                                type: array
                            type: object
                          stateStoreResources:
                            description: Give access to the state store resources.
                            items:
                              properties:
                                keyType:
                                  description: Allowed keyTypes pattern, string, binary.
                                    The key type used for matching, for example pattern
                                    tries to match the key to a glob-style pattern
                                    and string checks key is equal to value provided
                                    in keys.
                                  enum:
                                  - Pattern
                                  - pattern
                                  - String
                                  - string
                                  - Binary
                                  - binary
                                  type: string
                                keys:
                                  description: Give access to state store keys for
                                    the corresponding principals defined. When key
                                    type is pattern set glob-style pattern (e.g.,
                                    '*', 'clients/*').
                                  items:
                                    type: string
                                  type: array
                                method:
                                  description: Give access for `Read`, `Write` and
                                    `ReadWrite` access level.
                                  enum:
                                  - Read
                                  - read
                                  - Write
                                  - write
                                  - ReadWrite
                                  - readWrite
                                  type: string
                              required:
                              - keyType
                              - keys
                              - method
                              type: object
                            nullable: true
                            type: array
                        required:
                        - brokerResources
                        - principals
                        type: object
                      nullable: true
                      type: array
                  type: object
              required:
              - authorizationPolicies
              type: object
            status:
              nullable: true
              properties:
                provisioningStatus:
                  nullable: true
                  properties:
                    error:
                      nullable: true
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    failureCause:
                      nullable: true
                      type: string
                    logErrors:
                      nullable: true
                      type: boolean
                    operationId:
                      type: string
                    output:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    status:
                      type: string
                  required:
                  - operationId
                  - status
                  type: object
              type: object
          required:
          - spec
          title: BrokerAuthorization
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: BrokerAuthorization
      listKind: BrokerAuthorizationList
      plural: brokerauthorizations
      shortNames:
      - brokerauthz
      singular: brokerauthorization
    conditions:
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:19:11Z"
    generation: 1
    name: brokerlisteners.mqttbroker.iotoperations.azure.com
    resourceVersion: "15962"
    uid: 0a5a8af1-5f0f-4a0c-aa39-6979e44d4799
  spec:
    conversion:
      strategy: None
    group: mqttbroker.iotoperations.azure.com
    names:
      kind: BrokerListener
      listKind: BrokerListenerList
      plural: brokerlisteners
      shortNames:
      - brokerlistener
      singular: brokerlistener
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The Broker it is associated with
        jsonPath: .spec.brokerRef
        name: Broker Reference
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for BrokerListenerSpec via `CustomResource`
          properties:
            spec:
              description: Defines an MQTT broker listener. A listener is a collection
                of ports on which the broker accepts connections from clients.
              properties:
                brokerRef:
                  description: Broker associated with this listener. A Kubernetes
                    `ownerReference` may be used instead, so this field is optional.
                  nullable: true
                  type: string
                ports:
                  description: Ports on which this listener accepts client connections.
                  items:
                    description: Defines a TCP port on which a `BrokerListener` listens.
                    properties:
                      authenticationRef:
                        description: Reference to client authentication settings.
                          Omit to disable authentication.
                        nullable: true
                        type: string
                      authorizationRef:
                        description: Reference to client authorization settings. Omit
                          to disable authorization.
                        nullable: true
                        type: string
                      nodePort:
                        description: Kubernetes node port. Only relevant when this
                          port is associated with a `NodePort` listener.
                        format: uint16
                        maximum: 65535
                        minimum: 0
                        nullable: true
                        type: integer
                      port:
                        description: TCP port for accepting client connections.
                        format: uint16
                        maximum: 65535
                        minimum: 0
                        type: integer
                      protocol:
                        default: Mqtt
                        description: Protocol to use for client connections.
                        enum:
                        - Mqtt
                        - mqtt
                        - WebSockets
                        - webSockets
                        type: string
                      tls:
                        description: TLS server certificate settings for this port.
                          Omit to disable TLS.
                        oneOf:
                        - required:
                          - certManagerCertificateSpec
                        - required:
                          - manual
                        properties:
                          certManagerCertificateSpec:
                            description: Automatic TLS server certicate management
                              with cert-manager.
                            properties:
                              duration:
                                description: Lifetime of certificate. Must be specified
                                  using a Go time. Duration format (h|m|s). E.g. 240h
                                  for 240 hours and 45m for 45 minutes.
                                nullable: true
                                type: string
                              issuerRef:
                                description: cert-manager issuerRef.
                                properties:
                                  group:
                                    default: cert-manager.io
                                    description: group of issuer.
                                    type: string
                                  kind:
                                    description: kind of issuer.
                                    enum:
                                    - Issuer
                                    - ClusterIssuer
                                    type: string
                                  name:
                                    description: name of issuer.
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              privateKey:
                                default:
                                  algorithm: Ec256
                                  rotationPolicy: Always
                                description: Type of certificate private key.
                                properties:
                                  algorithm:
                                    description: Private key algorithm.
                                    enum:
                                    - Ec256
                                    - ec256
                                    - Ec384
                                    - ec384
                                    - Ec521
                                    - ec521
                                    - Ed25519
                                    - ed25519
                                    - Rsa2048
                                    - rsa2048
                                    - Rsa4096
                                    - rsa4096
                                    - Rsa8192
                                    - rsa8192
                                    type: string
                                  rotationPolicy:
                                    description: Private key rotation policy.
                                    enum:
                                    - Always
                                    - always
                                    - Never
                                    - never
                                    type: string
                                required:
                                - algorithm
                                - rotationPolicy
                                type: object
                              renewBefore:
                                description: When to begin renewing certificate. Must
                                  be specified using a Go time. Duration format (h|m|s).
                                  E.g. 240h for 240 hours and 45m for 45 minutes.
                                nullable: true
                                type: string
                              san:
                                description: Additional Subject Alternative Names
                                  (SANs) to include in the certificate.
                                properties:
                                  dns:
                                    default: []
                                    description: DNS SANs.
                                    items:
                                      type: string
                                    type: array
                                  ip:
                                    default: []
                                    description: IP address SANs.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              secretName:
                                description: Secret for storing server certificate.
                                  Any existing data will be overwritten. This is a
                                  reference to the secret through an identifying name,
                                  not the secret itself.
                                nullable: true
                                type: string
                            required:
                            - issuerRef
                            type: object
                          manual:
                            description: Manual TLS server certificate management
                              through a defined secret.
                            properties:
                              secretRef:
                                description: secret containing TLS cert.
                                type: string
                            required:
                            - secretRef
                            type: object
                          mode:
                            description: Mode of TLS server certificate management.
                            type: string
                        required:
                        - mode
                        type: object
                    required:
                    - port
                    type: object
                  type: array
                serviceName:
                  description: Kubernetes Service name of this listener.
                  nullable: true
                  type: string
                serviceType:
                  default: ClusterIp
                  description: Kubernetes Service type of this listener.
                  enum:
                  - LoadBalancer
                  - loadBalancer
                  - ClusterIp
                  - clusterIp
                  - NodePort
                  - nodePort
                  type: string
              required:
              - ports
              type: object
            status:
              nullable: true
              properties:
                provisioningStatus:
                  nullable: true
                  properties:
                    error:
                      nullable: true
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    failureCause:
                      nullable: true
                      type: string
                    logErrors:
                      nullable: true
                      type: boolean
                    operationId:
                      type: string
                    output:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    status:
                      type: string
                  required:
                  - operationId
                  - status
                  type: object
              type: object
          required:
          - spec
          title: BrokerListener
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: BrokerListener
      listKind: BrokerListenerList
      plural: brokerlisteners
      shortNames:
      - brokerlistener
      singular: brokerlistener
    conditions:
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:19:11Z"
    generation: 1
    name: brokers.mqttbroker.iotoperations.azure.com
    resourceVersion: "15959"
    uid: 5de1e10e-87ed-49b4-97fc-21f2268c490d
  spec:
    conversion:
      strategy: None
    group: mqttbroker.iotoperations.azure.com
    names:
      kind: Broker
      listKind: BrokerList
      plural: brokers
      shortNames:
      - broker
      singular: broker
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: number of frontend copies
        jsonPath: .spec.cardinality.frontend.replicas
        name: Frontends
        type: number
      - description: number of backend partitions
        jsonPath: .spec.cardinality.backendChain.partitions
        name: Backend Partitions
        type: number
      - description: Memory profile of Broker
        jsonPath: .spec.memoryProfile
        name: Memory Profile
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .status.runtimeStatus.status
        name: Status
        type: string
      - jsonPath: .status.runtimeStatus.description
        name: Status Description
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for BrokerSpec via `CustomResource`
          properties:
            spec:
              description: Spec defines the desired identities of distributed MQTT
                broker.
              properties:
                advanced:
                  default:
                    clients: null
                    encryptInternalTraffic: Enabled
                    tolerations: null
                  description: Advanced settings of Broker.
                  properties:
                    clients:
                      description: Configurations related to All Clients.
                      nullable: true
                      properties:
                        maxKeepAliveSeconds:
                          description: Upper bound of a client's Keep Alive, in seconds.
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          nullable: true
                          type: integer
                        maxMessageExpirySeconds:
                          description: Upper bound of Message Expiry Interval, in
                            seconds.
                          format: uint32
                          maximum: 4294967295
                          minimum: 1
                          nullable: true
                          type: integer
                        maxPacketSizeBytes:
                          description: Max message size for a packet in Bytes.
                          format: uint32
                          maximum: 268435456
                          minimum: 1
                          nullable: true
                          type: integer
                        maxReceiveMaximum:
                          description: Upper bound of Receive Maximum that a client
                            can request in the CONNECT packet. If a client requests
                            a value greater than this, the broker will cap it to this
                            value.
                          format: uint16
                          maximum: 65535
                          minimum: 1
                          nullable: true
                          type: integer
                        maxSessionExpirySeconds:
                          description: Upper bound of Session Expiry Interval
                          format: uint32
                          maximum: 4294967295
                          minimum: 1
                          nullable: true
                          type: integer
                        subscriberQueueLimit:
                          description: The limit on the number of queued messages
                            for a subscriber.
                          nullable: true
                          properties:
                            length:
                              default: 1000
                              description: The maximum length of the queue before
                                messages start getting dropped. If nothing is specified,
                                the default is 1000.
                              format: int64
                              maximum: 9223372036854000000
                              minimum: 1
                              type: integer
                            strategy:
                              default: None
                              description: The strategy to use for dropping messages
                                from the queue.
                              enum:
                              - None
                              - none
                              - DropOldest
                              - dropOldest
                              type: string
                          type: object
                      type: object
                    encryptInternalTraffic:
                      default: Enabled
                      description: The setting to enable or disable encryption of
                        internal Traffic.
                      enum:
                      - Enabled
                      - enabled
                      - Disabled
                      - disabled
                      type: string
                    internalCerts:
                      description: Certificate rotation and private key configuration.
                      properties:
                        duration:
                          description: Lifetime of certificate. Must be specified
                            using a Go time. Duration format (h|m|s). E.g. 240h for
                            240 hours and 45m for 45 minutes.
                          type: string
                        privateKey:
                          description: Type of certificate private key.
                          properties:
                            algorithm:
                              description: Private key algorithm.
                              enum:
                              - Ec256
                              - ec256
                              - Ec384
                              - ec384
                              - Ec521
                              - ec521
                              - Ed25519
                              - ed25519
                              - Rsa2048
                              - rsa2048
                              - Rsa4096
                              - rsa4096
                              - Rsa8192
                              - rsa8192
                              type: string
                            rotationPolicy:
                              description: Private key rotation policy.
                              enum:
                              - Always
                              - always
                              - Never
                              - never
                              type: string
                          required:
                          - algorithm
                          - rotationPolicy
                          type: object
                        renewBefore:
                          description: When to begin renewing certificate. Must be
                            specified using a Go time. Duration format (h|m|s). E.g.
                            240h for 240 hours and 45m for 45 minutes.
                          type: string
                      required:
                      - duration
                      - privateKey
                      - renewBefore
                      type: object
                    tolerations:
                      description: The details of Tolerations that are applied to
                        all Broker pods.
                      items:
                        properties:
                          effect:
                            description: Toleration effect.
                            type: string
                          key:
                            description: Toleration key.
                            type: string
                          operator:
                            description: Toleration operator like 'Exists', 'Equal'
                              etc.
                            enum:
                            - None
                            - none
                            - DropOldest
                            - dropOldest
                            type: string
                          value:
                            description: Toleration Value.
                            type: string
                        required:
                        - effect
                        - key
                        - operator
                        - value
                        type: object
                      nullable: true
                      type: array
                  type: object
                cardinality:
                  description: The cardinality details of the broker.
                  nullable: true
                  properties:
                    backendChain:
                      description: The backend broker desired properties
                      properties:
                        partitions:
                          format: uint8
                          maximum: 16
                          minimum: 1
                          type: integer
                        redundancyFactor:
                          description: The desired numbers of backend replicas (pods)
                            in a physical partition.
                          format: uint16
                          maximum: 5
                          minimum: 1
                          type: integer
                        workers:
                          default: 1
                          format: uint8
                          maximum: 16
                          minimum: 1
                          type: integer
                      required:
                      - partitions
                      - redundancyFactor
                      type: object
                    frontend:
                      description: The frontend desired properties
                      properties:
                        replicas:
                          description: The desired number of frontend instances (pods).
                          format: uint16
                          maximum: 16
                          minimum: 1
                          type: integer
                        workers:
                          default: 2
                          format: uint8
                          maximum: 16
                          minimum: 1
                          type: integer
                      required:
                      - replicas
                      type: object
                  required:
                  - backendChain
                  - frontend
                  type: object
                diagnostics:
                  default:
                    logs:
                      level: info
                    metrics:
                      prometheusPort: 9600
                    selfCheck:
                      intervalSeconds: 30
                      mode: Enabled
                      timeoutSeconds: 15
                    traces:
                      cacheSizeMegabytes: 16
                      mode: Enabled
                      selfTracing:
                        intervalSeconds: 30
                        mode: Enabled
                      spanChannelCapacity: 1000
                  description: Spec defines the desired identities of MQTT broker
                    diagnostics settings.
                  properties:
                    logs:
                      default:
                        level: info
                      description: The log settings of the broker.
                      properties:
                        level:
                          default: info
                          description: The log level. Examples - 'debug', 'info',
                            'warn', 'error', 'trace'.
                          type: string
                      type: object
                    metrics:
                      default:
                        prometheusPort: 9600
                      description: The metrics properties.
                      properties:
                        prometheusPort:
                          default: 9600
                          description: The prometheus port to expose the metrics.
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          type: integer
                      type: object
                    selfCheck:
                      default:
                        intervalSeconds: 30
                        mode: Enabled
                        timeoutSeconds: 15
                      description: The self check properties.
                      properties:
                        intervalSeconds:
                          default: 30
                          description: The self check interval.
                          format: uint64
                          maximum: 300
                          minimum: 30
                          type: integer
                        mode:
                          default: Enabled
                          description: The toggle to enable/disable self check.
                          enum:
                          - Enabled
                          - enabled
                          - Disabled
                          - disabled
                          type: string
                        timeoutSeconds:
                          default: 15
                          description: The timeout for self check.
                          format: uint64
                          maximum: 120
                          minimum: 5
                          type: integer
                      type: object
                    traces:
                      default:
                        cacheSizeMegabytes: 16
                        mode: Enabled
                        selfTracing:
                          intervalSeconds: 30
                          mode: Enabled
                        spanChannelCapacity: 1000
                      description: The trace properties.
                      properties:
                        cacheSizeMegabytes:
                          default: 16
                          description: The cache size in megabytes.
                          format: uint32
                          maximum: 128
                          minimum: 1
                          type: integer
                        mode:
                          default: Enabled
                          description: The toggle to enable/disable traces.
                          enum:
                          - Enabled
                          - enabled
                          - Disabled
                          - disabled
                          type: string
                        selfTracing:
                          default:
                            intervalSeconds: 30
                            mode: Enabled
                          description: The self tracing properties.
                          properties:
                            intervalSeconds:
                              default: 30
                              description: The self tracing interval.
                              format: uint64
                              maximum: 300
                              minimum: 1
                              type: integer
                            mode:
                              default: Enabled
                              description: The toggle to enable/disable self tracing.
                              enum:
                              - Enabled
                              - enabled
                              - Disabled
                              - disabled
                              type: string
                          type: object
                        spanChannelCapacity:
                          default: 1000
                          description: The span channel capacity.
                          format: uint64
                          maximum: 100000
                          minimum: 1000
                          type: integer
                      type: object
                  type: object
                diskBackedMessageBuffer:
                  description: Settings of Disk Backed Message Buffer.
                  nullable: true
                  properties:
                    ephemeralVolumeClaimSpec:
                      description: |-
                        Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer.

                        See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
                      nullable: true
                      properties:
                        accessModes:
                          description: 'accessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'dataSource field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                            * An existing PVC (PersistentVolumeClaim) If the provisioner
                            or an external controller can support the specified data
                            source, it will create a new volume based on the contents
                            of the specified data source. If the AnyVolumeDataSource
                            feature gate is enabled, this field will always have the
                            same contents as the DataSourceRef field.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        dataSourceRef:
                          description: |-
                            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef
                              allows any non-core object, as well as PersistentVolumeClaim objects.
                            * While DataSource ignores disallowed values (dropping them), DataSourceRef
                              preserves all values, and generates an error if a disallowed value is
                              specified.
                            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'resources represents the minimum resources
                            the volume should have. If RecoverVolumeExpansionFailure
                            feature is enabled users are allowed to specify resource
                            requirements that are lower than previous value but must
                            still be higher than capacity recorded in the status field
                            of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                description: "Quantity is a fixed-point representation
                                  of a number. It provides convenient marshaling/unmarshaling
                                  in JSON and YAML, in addition to String() and AsInt64()
                                  accessors.\n\nThe serialization format is:\n\n<quantity>
                                  \       ::= <signedNumber><suffix>\n\n\t(Note that
                                  <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>
                                  \          ::= 0 | 1 | ... | 9 <digits>          ::=
                                  <digit> | <digit><digits> <number>          ::=
                                  <digits> | <digits>.<digits> | <digits>. | .<digits>
                                  <sign>            ::= \"+\" | \"-\" <signedNumber>
                                  \   ::= <number> | <sign><number> <suffix>          ::=
                                  <binarySI> | <decimalExponent> | <decimalSI> <binarySI>
                                  \       ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International
                                  System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>
                                  \      ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note
                                  that 1024 = 1Ki but 1000 = 1k; I didn't choose the
                                  capitalization.)\n\n<decimalExponent> ::= \"e\"
                                  <signedNumber> | \"E\" <signedNumber>\n\nNo matter
                                  which of the three exponent forms is used, no quantity
                                  may represent a number greater than 2^63-1 in magnitude,
                                  nor may it have more than 3 decimal places. Numbers
                                  larger or more precise will be capped or rounded
                                  up. (E.g.: 0.1m will rounded up to 1m.) This may
                                  be extended in the future if we require larger or
                                  smaller quantities.\n\nWhen a Quantity is parsed
                                  from a string, it will remember the type of suffix
                                  it had, and will use the same type again when it
                                  is serialized.\n\nBefore serializing, Quantity will
                                  be put in \"canonical form\". This means that Exponent/suffix
                                  will be adjusted up or down (with a corresponding
                                  increase or decrease in Mantissa) such that:\n\n\ta.
                                  No precision is lost\n\tb. No fractional digits
                                  will be emitted\n\tc. The exponent (or suffix) is
                                  as large as possible.\n\nThe sign will be omitted
                                  unless the number is negative.\n\nExamples:\n\n\t1.5
                                  will be serialized as \"1500m\"\n\t1.5Gi will be
                                  serialized as \"1536Mi\"\n\nNote that the quantity
                                  will NEVER be internally represented by a floating
                                  point number. That is the whole point of this exercise.\n\nNon-canonical
                                  values will still parse as long as they are well
                                  formed, but will be re-emitted in their canonical
                                  form. (So always use canonical form, or don't diff.)\n\nThis
                                  format is intended to make it difficult to use these
                                  numbers without writing some sort of special handling
                                  code in the hopes that that will cause implementors
                                  to also use a fixed point implementation."
                                type: string
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                description: "Quantity is a fixed-point representation
                                  of a number. It provides convenient marshaling/unmarshaling
                                  in JSON and YAML, in addition to String() and AsInt64()
                                  accessors.\n\nThe serialization format is:\n\n<quantity>
                                  \       ::= <signedNumber><suffix>\n\n\t(Note that
                                  <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>
                                  \          ::= 0 | 1 | ... | 9 <digits>          ::=
                                  <digit> | <digit><digits> <number>          ::=
                                  <digits> | <digits>.<digits> | <digits>. | .<digits>
                                  <sign>            ::= \"+\" | \"-\" <signedNumber>
                                  \   ::= <number> | <sign><number> <suffix>          ::=
                                  <binarySI> | <decimalExponent> | <decimalSI> <binarySI>
                                  \       ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International
                                  System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>
                                  \      ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note
                                  that 1024 = 1Ki but 1000 = 1k; I didn't choose the
                                  capitalization.)\n\n<decimalExponent> ::= \"e\"
                                  <signedNumber> | \"E\" <signedNumber>\n\nNo matter
                                  which of the three exponent forms is used, no quantity
                                  may represent a number greater than 2^63-1 in magnitude,
                                  nor may it have more than 3 decimal places. Numbers
                                  larger or more precise will be capped or rounded
                                  up. (E.g.: 0.1m will rounded up to 1m.) This may
                                  be extended in the future if we require larger or
                                  smaller quantities.\n\nWhen a Quantity is parsed
                                  from a string, it will remember the type of suffix
                                  it had, and will use the same type again when it
                                  is serialized.\n\nBefore serializing, Quantity will
                                  be put in \"canonical form\". This means that Exponent/suffix
                                  will be adjusted up or down (with a corresponding
                                  increase or decrease in Mantissa) such that:\n\n\ta.
                                  No precision is lost\n\tb. No fractional digits
                                  will be emitted\n\tc. The exponent (or suffix) is
                                  as large as possible.\n\nThe sign will be omitted
                                  unless the number is negative.\n\nExamples:\n\n\t1.5
                                  will be serialized as \"1500m\"\n\t1.5Gi will be
                                  serialized as \"1536Mi\"\n\nNote that the quantity
                                  will NEVER be internally represented by a floating
                                  point number. That is the whole point of this exercise.\n\nNon-canonical
                                  values will still parse as long as they are well
                                  formed, but will be re-emitted in their canonical
                                  form. (So always use canonical form, or don't diff.)\n\nThis
                                  format is intended to make it difficult to use these
                                  numbers without writing some sort of special handling
                                  code in the hopes that that will cause implementors
                                  to also use a fixed point implementation."
                                type: string
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        selector:
                          description: selector is a label query over volumes to consider
                            for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'storageClassName is the name of the StorageClass
                            required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec.
                          type: string
                        volumeName:
                          description: volumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    maxSize:
                      description: |-
                        The max size of the message buffer on disk.

                        If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template.

                        If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
                      type: string
                    persistentVolumeClaimSpec:
                      description: Use the specified persistent volume claim template
                        to mount a persistent volume for the message buffer.
                      nullable: true
                      properties:
                        accessModes:
                          description: 'accessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'dataSource field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                            * An existing PVC (PersistentVolumeClaim) If the provisioner
                            or an external controller can support the specified data
                            source, it will create a new volume based on the contents
                            of the specified data source. If the AnyVolumeDataSource
                            feature gate is enabled, this field will always have the
                            same contents as the DataSourceRef field.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        dataSourceRef:
                          description: |-
                            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef
                              allows any non-core object, as well as PersistentVolumeClaim objects.
                            * While DataSource ignores disallowed values (dropping them), DataSourceRef
                              preserves all values, and generates an error if a disallowed value is
                              specified.
                            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'resources represents the minimum resources
                            the volume should have. If RecoverVolumeExpansionFailure
                            feature is enabled users are allowed to specify resource
                            requirements that are lower than previous value but must
                            still be higher than capacity recorded in the status field
                            of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                description: "Quantity is a fixed-point representation
                                  of a number. It provides convenient marshaling/unmarshaling
                                  in JSON and YAML, in addition to String() and AsInt64()
                                  accessors.\n\nThe serialization format is:\n\n<quantity>
                                  \       ::= <signedNumber><suffix>\n\n\t(Note that
                                  <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>
                                  \          ::= 0 | 1 | ... | 9 <digits>          ::=
                                  <digit> | <digit><digits> <number>          ::=
                                  <digits> | <digits>.<digits> | <digits>. | .<digits>
                                  <sign>            ::= \"+\" | \"-\" <signedNumber>
                                  \   ::= <number> | <sign><number> <suffix>          ::=
                                  <binarySI> | <decimalExponent> | <decimalSI> <binarySI>
                                  \       ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International
                                  System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>
                                  \      ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note
                                  that 1024 = 1Ki but 1000 = 1k; I didn't choose the
                                  capitalization.)\n\n<decimalExponent> ::= \"e\"
                                  <signedNumber> | \"E\" <signedNumber>\n\nNo matter
                                  which of the three exponent forms is used, no quantity
                                  may represent a number greater than 2^63-1 in magnitude,
                                  nor may it have more than 3 decimal places. Numbers
                                  larger or more precise will be capped or rounded
                                  up. (E.g.: 0.1m will rounded up to 1m.) This may
                                  be extended in the future if we require larger or
                                  smaller quantities.\n\nWhen a Quantity is parsed
                                  from a string, it will remember the type of suffix
                                  it had, and will use the same type again when it
                                  is serialized.\n\nBefore serializing, Quantity will
                                  be put in \"canonical form\". This means that Exponent/suffix
                                  will be adjusted up or down (with a corresponding
                                  increase or decrease in Mantissa) such that:\n\n\ta.
                                  No precision is lost\n\tb. No fractional digits
                                  will be emitted\n\tc. The exponent (or suffix) is
                                  as large as possible.\n\nThe sign will be omitted
                                  unless the number is negative.\n\nExamples:\n\n\t1.5
                                  will be serialized as \"1500m\"\n\t1.5Gi will be
                                  serialized as \"1536Mi\"\n\nNote that the quantity
                                  will NEVER be internally represented by a floating
                                  point number. That is the whole point of this exercise.\n\nNon-canonical
                                  values will still parse as long as they are well
                                  formed, but will be re-emitted in their canonical
                                  form. (So always use canonical form, or don't diff.)\n\nThis
                                  format is intended to make it difficult to use these
                                  numbers without writing some sort of special handling
                                  code in the hopes that that will cause implementors
                                  to also use a fixed point implementation."
                                type: string
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                description: "Quantity is a fixed-point representation
                                  of a number. It provides convenient marshaling/unmarshaling
                                  in JSON and YAML, in addition to String() and AsInt64()
                                  accessors.\n\nThe serialization format is:\n\n<quantity>
                                  \       ::= <signedNumber><suffix>\n\n\t(Note that
                                  <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>
                                  \          ::= 0 | 1 | ... | 9 <digits>          ::=
                                  <digit> | <digit><digits> <number>          ::=
                                  <digits> | <digits>.<digits> | <digits>. | .<digits>
                                  <sign>            ::= \"+\" | \"-\" <signedNumber>
                                  \   ::= <number> | <sign><number> <suffix>          ::=
                                  <binarySI> | <decimalExponent> | <decimalSI> <binarySI>
                                  \       ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International
                                  System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>
                                  \      ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note
                                  that 1024 = 1Ki but 1000 = 1k; I didn't choose the
                                  capitalization.)\n\n<decimalExponent> ::= \"e\"
                                  <signedNumber> | \"E\" <signedNumber>\n\nNo matter
                                  which of the three exponent forms is used, no quantity
                                  may represent a number greater than 2^63-1 in magnitude,
                                  nor may it have more than 3 decimal places. Numbers
                                  larger or more precise will be capped or rounded
                                  up. (E.g.: 0.1m will rounded up to 1m.) This may
                                  be extended in the future if we require larger or
                                  smaller quantities.\n\nWhen a Quantity is parsed
                                  from a string, it will remember the type of suffix
                                  it had, and will use the same type again when it
                                  is serialized.\n\nBefore serializing, Quantity will
                                  be put in \"canonical form\". This means that Exponent/suffix
                                  will be adjusted up or down (with a corresponding
                                  increase or decrease in Mantissa) such that:\n\n\ta.
                                  No precision is lost\n\tb. No fractional digits
                                  will be emitted\n\tc. The exponent (or suffix) is
                                  as large as possible.\n\nThe sign will be omitted
                                  unless the number is negative.\n\nExamples:\n\n\t1.5
                                  will be serialized as \"1500m\"\n\t1.5Gi will be
                                  serialized as \"1536Mi\"\n\nNote that the quantity
                                  will NEVER be internally represented by a floating
                                  point number. That is the whole point of this exercise.\n\nNon-canonical
                                  values will still parse as long as they are well
                                  formed, but will be re-emitted in their canonical
                                  form. (So always use canonical form, or don't diff.)\n\nThis
                                  format is intended to make it difficult to use these
                                  numbers without writing some sort of special handling
                                  code in the hopes that that will cause implementors
                                  to also use a fixed point implementation."
                                type: string
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        selector:
                          description: selector is a label query over volumes to consider
                            for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'storageClassName is the name of the StorageClass
                            required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec.
                          type: string
                        volumeName:
                          description: volumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                  required:
                  - maxSize
                  type: object
                generateResourceLimits:
                  description: This setting controls whether Kubernetes CPU resource
                    limits are requested. Increasing the number of replicas or workers
                    proportionally increases the amount of CPU resources requested.
                    If this setting is enabled and there are insufficient CPU resources,
                    an error will be emitted.
                  nullable: true
                  properties:
                    cpu:
                      default: Enabled
                      description: The toggle to enable/disable cpu resource limits.
                      enum:
                      - Enabled
                      - enabled
                      - Disabled
                      - disabled
                      type: string
                  type: object
                memoryProfile:
                  default: Medium
                  description: Memory profile of Broker.
                  enum:
                  - Tiny
                  - tiny
                  - Low
                  - low
                  - Medium
                  - medium
                  - High
                  - high
                  type: string
              type: object
            status:
              nullable: true
              properties:
                provisioningStatus:
                  nullable: true
                  properties:
                    error:
                      nullable: true
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    failureCause:
                      nullable: true
                      type: string
                    logErrors:
                      nullable: true
                      type: boolean
                    operationId:
                      type: string
                    output:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    status:
                      type: string
                  required:
                  - operationId
                  - status
                  type: object
                runtimeStatus:
                  properties:
                    description:
                      type: string
                    status:
                      enum:
                      - Waiting
                      - Starting
                      - Running
                      - Recovering
                      - Failed
                      - Warning
                      type: string
                  required:
                  - description
                  - status
                  type: object
              required:
              - runtimeStatus
              type: object
          required:
          - spec
          title: Broker
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Broker
      listKind: BrokerList
      plural: brokers
      shortNames:
      - broker
      singular: broker
    conditions:
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:19:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      helm.sh/resource-policy: keep
      meta.helm.sh/release-name: azure-iot-operations-platform
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2024-12-03T01:07:15Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: azure-iot-operations-platform
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aio-trust-manager
      app.kubernetes.io/version: v0.11.0
      helm.sh/chart: trust-manager-v0.11.0
    name: bundles.trust.cert-manager.io
    resourceVersion: "8520"
    uid: 22b749ee-5550-4750-9754-6d0b2c33e7c8
  spec:
    conversion:
      strategy: None
    group: trust.cert-manager.io
    names:
      kind: Bundle
      listKind: BundleList
      plural: bundles
      singular: bundle
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Bundle ConfigMap Target Key
        jsonPath: .spec.target.configMap.key
        name: ConfigMap Target
        type: string
      - description: Bundle Secret Target Key
        jsonPath: .spec.target.secret.key
        name: Secret Target
        type: string
      - description: Bundle has been synced
        jsonPath: .status.conditions[?(@.type == "Synced")].status
        name: Synced
        type: string
      - description: Reason Bundle has Synced status
        jsonPath: .status.conditions[?(@.type == "Synced")].reason
        name: Reason
        type: string
      - description: Timestamp Bundle was created
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Bundle resource.
              properties:
                sources:
                  description: Sources is a set of references to data whose data will
                    sync to the target.
                  items:
                    description: |-
                      BundleSource is the set of sources whose data will be appended and synced to
                      the BundleTarget in all Namespaces.
                    properties:
                      configMap:
                        description: |-
                          ConfigMap is a reference (by name) to a ConfigMap's `data` key, or to a
                          list of ConfigMap's `data` key using label selector, in the trust Namespace.
                        properties:
                          key:
                            description: Key is the key of the entry in the object's
                              `data` field to be used.
                            type: string
                          name:
                            description: |-
                              Name is the name of the source object in the trust Namespace.
                              This field must be left empty when `selector` is set
                            type: string
                          selector:
                            description: |-
                              Selector is the label selector to use to fetch a list of objects. Must not be set
                              when `Name` is set.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - key
                        type: object
                      inLine:
                        description: InLine is a simple string to append as the source
                          data.
                        type: string
                      secret:
                        description: |-
                          Secret is a reference (by name) to a Secret's `data` key, or to a
                          list of Secret's `data` key using label selector, in the trust Namespace.
                        properties:
                          key:
                            description: Key is the key of the entry in the object's
                              `data` field to be used.
                            type: string
                          name:
                            description: |-
                              Name is the name of the source object in the trust Namespace.
                              This field must be left empty when `selector` is set
                            type: string
                          selector:
                            description: |-
                              Selector is the label selector to use to fetch a list of objects. Must not be set
                              when `Name` is set.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - key
                        type: object
                      useDefaultCAs:
                        description: |-
                          UseDefaultCAs, when true, requests the default CA bundle to be used as a source.
                          Default CAs are available if trust-manager was installed via Helm
                          or was otherwise set up to include a package-injecting init container by using the
                          "--default-package-location" flag when starting the trust-manager controller.
                          If default CAs were not configured at start-up, any request to use the default
                          CAs will fail.
                          The version of the default CA package which is used for a Bundle is stored in the
                          defaultCAPackageVersion field of the Bundle's status field.
                        type: boolean
                    type: object
                  type: array
                target:
                  description: Target is the target location in all namespaces to
                    sync source data to.
                  properties:
                    additionalFormats:
                      description: AdditionalFormats specifies any additional formats
                        to write to the target
                      properties:
                        jks:
                          description: |-
                            JKS requests a JKS-formatted binary trust bundle to be written to the target.
                            The bundle has "changeit" as the default password.
                            For more information refer to this link https://cert-manager.io/docs/faq/#keystore-passwords
                          properties:
                            key:
                              description: Key is the key of the entry in the object's
                                `data` field to be used.
                              type: string
                            password:
                              default: changeit
                              description: Password for JKS trust store
                              maxLength: 128
                              minLength: 1
                              type: string
                          required:
                          - key
                          type: object
                        pkcs12:
                          description: |-
                            PKCS12 requests a PKCS12-formatted binary trust bundle to be written to the target.
                            The bundle is by default created without a password.
                          properties:
                            key:
                              description: Key is the key of the entry in the object's
                                `data` field to be used.
                              type: string
                            password:
                              default: ""
                              description: Password for PKCS12 trust store
                              maxLength: 128
                              type: string
                          required:
                          - key
                          type: object
                      type: object
                    configMap:
                      description: |-
                        ConfigMap is the target ConfigMap in Namespaces that all Bundle source
                        data will be synced to.
                      properties:
                        key:
                          description: Key is the key of the entry in the object's
                            `data` field to be used.
                          type: string
                      required:
                      - key
                      type: object
                    namespaceSelector:
                      description: |-
                        NamespaceSelector will, if set, only sync the target resource in
                        Namespaces which match the selector.
                      properties:
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            MatchLabels matches on the set of labels that must be present on a
                            Namespace for the Bundle target to be synced there.
                          type: object
                      type: object
                    secret:
                      description: |-
                        Secret is the target Secret that all Bundle source data will be synced to.
                        Using Secrets as targets is only supported if enabled at trust-manager startup.
                        By default, trust-manager has no permissions for writing to secrets and can only read secrets in the trust namespace.
                      properties:
                        key:
                          description: Key is the key of the entry in the object's
                            `data` field to be used.
                          type: string
                      required:
                      - key
                      type: object
                  type: object
              required:
              - sources
              - target
              type: object
            status:
              description: Status of the Bundle. This is set and managed automatically.
              properties:
                conditions:
                  description: |-
                    List of status conditions to indicate the status of the Bundle.
                    Known condition types are `Bundle`.
                  items:
                    description: BundleCondition contains condition information for
                      a Bundle.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the timestamp corresponding to the last status
                          change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          Message is a human-readable description of the details of the last
                          transition, complementing reason.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          If set, this represents the .metadata.generation that the condition was
                          set based upon.
                          For instance, if .metadata.generation is currently 12, but the
                          .status.condition[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the Bundle.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          Reason is a brief machine-readable explanation for the condition's last
                          transition.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Synced`).
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - type
                  x-kubernetes-list-type: map
                defaultCAVersion:
                  description: |-
                    DefaultCAPackageVersion, if set and non-empty, indicates the version information
                    which was retrieved when the set of default CAs was requested in the bundle
                    source. This should only be set if useDefaultCAs was set to "true" on a source,
                    and will be the same for the same version of a bundle with identical certificates.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Bundle
      listKind: BundleList
      plural: bundles
      singular: bundle
    conditions:
    - lastTransitionTime: "2024-12-03T01:07:15Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:07:15Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      management.azure.com/api-version: 2024-01-01-preview
      management.azure.com/providerName: Microsoft.ArcContainerStorage
      management.azure.com/resourceType: cacheconfigurations
    creationTimestamp: "2024-12-03T01:11:09Z"
    generation: 1
    labels:
      generation: "1"
    name: cacheconfigurations.arccontainerstorage.azure.net
    resourceVersion: "10611"
    uid: b9ff6d2b-91a2-4ad0-92e5-1c711b5acd80
  spec:
    conversion:
      strategy: None
    group: arccontainerstorage.azure.net
    names:
      categories:
      - apps
      kind: CacheConfiguration
      listKind: CacheConfigurationList
      plural: cacheconfigurations
      shortNames:
      - cacheconfig
      - cacheconfigs
      singular: cacheconfiguration
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Size of the cache storage
        jsonPath: .spec.cacheNodeStorageSize
        name: CacheSize
        type: string
      - description: Size of the metadata storage
        jsonPath: .spec.metadataStorageSize
        name: Metadata size
        type: string
      - description: Storage class that will back the cache volumes
        jsonPath: .spec.diskStorageClasses
        name: DiskStorageClasses
        type: string
      - jsonPath: .spec.workloadIdentity.clientID
        name: WorkloadIdentity
        type: string
      - jsonPath: .status.state
        name: Status
        type: string
      - jsonPath: .status.details
        name: StatusDetails
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  type: string
                  x-kubernetes-validations:
                  - message: name must match the singleton "cache-configuration"
                    rule: self == "cache-configuration"
              type: object
            spec:
              properties:
                cacheNodeStorageSize:
                  default: 10Gi
                  description: 'Size of the cache storage, including storage unit
                    (example: 10Gi)'
                  type: string
                  x-kubernetes-validations:
                  - message: cacheNodeStorageSize is immutable
                    rule: self == oldSelf
                  - message: cacheNodeStorageSize must be a valid storage size
                    rule: self.matches("^[0-9][0-9]*([.][0-9]+)?[KMGTP]i?$")
                diskStorageClasses:
                  description: Storage class that will back the cache and metadata
                    volumes
                  items:
                    type: string
                  type: array
                  x-kubernetes-validations:
                  - message: diskStorageClasses cannot be an empty array
                    rule: self.size() > 0
                  - message: diskStorageClasses is immutable
                    rule: self == oldSelf
                  - message: storage class names cannot exceed 253 characters
                    rule: '!self.exists(s, s.size() > 253)'
                failoverCacheVolumeConsumers:
                  default: true
                  description: Failover cache volume consumers
                  type: boolean
                metadataStorageSize:
                  default: 4Gi
                  description: 'Size of the metadata storage, including storage unit
                    (example: 4Gi)'
                  type: string
                  x-kubernetes-validations:
                  - message: metadataStorageSize is immutable
                    rule: self == oldSelf
                serviceMesh:
                  default: osm
                  description: Which service mesh to use
                  enum:
                  - osm
                  - none
                  type: string
                workloadIdentity:
                  properties:
                    clientID:
                      format: uuid
                      type: string
                    tenantID:
                      format: uuid
                      type: string
                  type: object
              required:
              - diskStorageClasses
              type: object
            status:
              properties:
                details:
                  type: string
                state:
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - apps
      kind: CacheConfiguration
      listKind: CacheConfigurationList
      plural: cacheconfigurations
      shortNames:
      - cacheconfig
      - cacheconfigs
      singular: cacheconfiguration
    conditions:
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:07:08Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.13.1
    name: certificaterequests.cert-manager.io
    resourceVersion: "8470"
    uid: e278a287-c62e-43dd-af70-fa173fbf8a1c
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: CertificateRequest
      listKind: CertificateRequestList
      plural: certificaterequests
      shortNames:
      - cr
      - crs
      singular: certificaterequest
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `Ready` status condition and its `status.failureTime`
            field. \n A CertificateRequest is a one-shot resource, meaning it represents
            a single point in time request for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired state of the CertificateRequest
                resource. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
              properties:
                duration:
                  description: Requested 'duration' (i.e. lifetime) of the Certificate.
                    Note that the issuer may choose to ignore the requested duration,
                    just like any other requested attribute.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: "Requested basic constraints isCA value. Note that
                    the issuer may choose to ignore the requested isCA value, just
                    like any other requested attribute. \n NOTE: If the CSR in the
                    `Request` field has a BasicConstraints extension, it must have
                    the same isCA value as specified here. \n If true, this will automatically
                    add the `cert sign` usage to the list of requested `usages`."
                  type: boolean
                issuerRef:
                  description: "Reference to the issuer responsible for issuing the
                    certificate. If the issuer is namespace-scoped, it must be in
                    the same namespace as the Certificate. If the issuer is cluster-scoped,
                    it can be used from any namespace. \n The `name` field of the
                    reference must always be specified."
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: "The PEM-encoded X.509 certificate signing request
                    to be submitted to the issuer for signing. \n If the CSR has a
                    BasicConstraints extension, its isCA attribute must match the
                    `isCA` value of this CertificateRequest. If the CSR has a KeyUsage
                    extension, its key usages must match the key usages in the `usages`
                    field of this CertificateRequest. If the CSR has a ExtKeyUsage
                    extension, its extended key usages must match the extended key
                    usages in the `usages` field of this CertificateRequest."
                  format: byte
                  type: string
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: "Requested key usages and extended key usages. \n NOTE:
                    If the CSR in the `Request` field has uses the KeyUsage or ExtKeyUsage
                    extension, these extensions must have the same values as specified
                    here without any additional values. \n If unset, defaults to `digital
                    signature` and `key encipherment`."
                  items:
                    description: "KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      \n Valid KeyUsage values are as follows: \"signing\", \"digital
                      signature\", \"content commitment\", \"key encipherment\", \"key
                      agreement\", \"data encipherment\", \"cert sign\", \"crl sign\",
                      \"encipher only\", \"decipher only\", \"any\", \"server auth\",
                      \"client auth\", \"code signing\", \"email protection\", \"s/mime\",
                      \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\",
                      \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\""
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              description: 'Status of the CertificateRequest. This is set and managed
                automatically. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                ca:
                  description: The PEM encoded X.509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded X.509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`, `InvalidRequest`,
                    `Approved` and `Denied`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - type
                  x-kubernetes-list-type: map
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: CertificateRequest
      listKind: CertificateRequestList
      plural: certificaterequests
      shortNames:
      - cr
      - crs
      singular: certificaterequest
    conditions:
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:07:07Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.13.1
    name: certificates.cert-manager.io
    resourceVersion: "8461"
    uid: 707c4bc0-ccc4-4409-b4bc-26d710be0056
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: Certificate
      listKind: CertificateList
      plural: certificates
      shortNames:
      - cert
      - certs
      singular: certificate
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed X.509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the desired state of the Certificate resource.
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
              properties:
                additionalOutputFormats:
                  description: "Defines extra output formats of the private key and
                    signed certificate chain to be written to this Certificate's target
                    Secret. \n This is an Alpha Feature and is only enabled with the
                    `--feature-gates=AdditionalCertificateOutputFormats=true` option
                    set on both the controller and webhook components."
                  items:
                    description: CertificateAdditionalOutputFormat defines an additional
                      output format of a Certificate resource. These contain supplementary
                      data formats of the signed certificate chain and paired private
                      key.
                    properties:
                      type:
                        description: Type is the name of the format type that should
                          be written to the Certificate's target Secret.
                        enum:
                        - DER
                        - CombinedPEM
                        type: string
                    required:
                    - type
                    type: object
                  type: array
                commonName:
                  description: "Requested common name X509 certificate subject attribute.
                    More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6
                    NOTE: TLS clients will ignore this value when any subject alternative
                    name is set (see https://tools.ietf.org/html/rfc6125#section-6.4.4).
                    \n Should have a length of 64 characters or fewer to avoid generating
                    invalid CSRs. Cannot be set if the `literalSubject` field is set."
                  type: string
                dnsNames:
                  description: Requested DNS subject alternative names.
                  items:
                    type: string
                  type: array
                duration:
                  description: "Requested 'duration' (i.e. lifetime) of the Certificate.
                    Note that the issuer may choose to ignore the requested duration,
                    just like any other requested attribute. \n If unset, this defaults
                    to 90 days. Minimum accepted duration is 1 hour. Value must be
                    in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration."
                  type: string
                emailAddresses:
                  description: Requested email subject alternative names.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: "Whether the KeyUsage and ExtKeyUsage extensions should
                    be set in the encoded CSR. \n This option defaults to true, and
                    should only be disabled if the target issuer does not support
                    CSRs with these X509 KeyUsage/ ExtKeyUsage extensions."
                  type: boolean
                ipAddresses:
                  description: Requested IP address subject alternative names.
                  items:
                    type: string
                  type: array
                isCA:
                  description: "Requested basic constraints isCA value. The isCA value
                    is used to set the `isCA` field on the created CertificateRequest
                    resources. Note that the issuer may choose to ignore the requested
                    isCA value, just like any other requested attribute. \n If true,
                    this will automatically add the `cert sign` usage to the list
                    of requested `usages`."
                  type: boolean
                issuerRef:
                  description: "Reference to the issuer responsible for issuing the
                    certificate. If the issuer is namespace-scoped, it must be in
                    the same namespace as the Certificate. If the issuer is cluster-scoped,
                    it can be used from any namespace. \n The `name` field of the
                    reference must always be specified."
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keystores:
                  description: Additional keystore output formats to be stored in
                    the Certificate's Secret.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will be updated immediately. If the issuer provided
                            a CA certificate, a file named `truststore.jks` will also
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef` containing
                            the issuing Certificate Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will be updated immediately. If the issuer
                            provided a CA certificate, a file named `truststore.p12`
                            will also be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef` containing
                            the issuing Certificate Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                literalSubject:
                  description: "Requested X.509 certificate subject, represented using
                    the LDAP \"String Representation of a Distinguished Name\" [1].
                    Important: the LDAP string format also specifies the order of
                    the attributes in the subject, this is important when issuing
                    certs for LDAP authentication. Example: `CN=foo,DC=corp,DC=example,DC=com`
                    More info [1]: https://datatracker.ietf.org/doc/html/rfc4514 More
                    info: https://github.com/cert-manager/cert-manager/issues/3203
                    More info: https://github.com/cert-manager/cert-manager/issues/4424
                    \n Cannot be set if the `subject` or `commonName` field is set.
                    This is an Alpha Feature and is only enabled with the `--feature-gates=LiteralCertificateSubject=true`
                    option set on both the controller and webhook components."
                  type: string
                privateKey:
                  description: Private key options. These include the key algorithm
                    and size, the used encoding and the rotation policy.
                  properties:
                    algorithm:
                      description: "Algorithm is the private key algorithm of the
                        corresponding private key for this certificate. \n If provided,
                        allowed values are either `RSA`, `ECDSA` or `Ed25519`. If
                        `algorithm` is specified and `size` is not provided, key size
                        of 2048 will be used for `RSA` key algorithm and key size
                        of 256 will be used for `ECDSA` key algorithm. key size is
                        ignored when using the `Ed25519` key algorithm."
                      enum:
                      - RSA
                      - ECDSA
                      - Ed25519
                      type: string
                    encoding:
                      description: "The private key cryptography standards (PKCS)
                        encoding for this certificate's private key to be encoded
                        in. \n If provided, allowed values are `PKCS1` and `PKCS8`
                        standing for PKCS#1 and PKCS#8, respectively. Defaults to
                        `PKCS1` if not specified."
                      enum:
                      - PKCS1
                      - PKCS8
                      type: string
                    rotationPolicy:
                      description: "RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. \n If
                        set to `Never`, a private key will only be generated if one
                        does not already exist in the target `spec.secretName`. If
                        one does exists but it does not have the correct algorithm
                        or size, a warning will be raised to await user intervention.
                        If set to `Always`, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        `Never` for backward compatibility."
                      enum:
                      - Never
                      - Always
                      type: string
                    size:
                      description: "Size is the key bit size of the corresponding
                        private key for this certificate. \n If `algorithm` is set
                        to `RSA`, valid values are `2048`, `4096` or `8192`, and will
                        default to `2048` if not specified. If `algorithm` is set
                        to `ECDSA`, valid values are `256`, `384` or `521`, and will
                        default to `256` if not specified. If `algorithm` is set to
                        `Ed25519`, Size is ignored. No other values are allowed."
                      type: integer
                  type: object
                renewBefore:
                  description: "How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. For example,
                    if a certificate is valid for 60 minutes, and `renewBefore=10m`,
                    cert-manager will begin to attempt to renew the certificate 50
                    minutes after it was issued (i.e. when there are 10 minutes remaining
                    until the certificate is no longer valid). \n NOTE: The actual
                    lifetime of the issued certificate is used to determine the renewal
                    time. If an issuer returns a certificate with a different lifetime
                    than the one requested, cert-manager will use the lifetime of
                    the issued certificate. \n If unset, this defaults to 1/3 of the
                    issued certificate's lifetime. Minimum accepted value is 5 minutes.
                    Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration."
                  type: string
                revisionHistoryLimit:
                  description: "The maximum number of CertificateRequest revisions
                    that are maintained in the Certificate's history. Each revision
                    represents a single `CertificateRequest` created by this Certificate,
                    either when it was created, renewed, or Spec was changed. Revisions
                    will be removed by oldest first if the number of revisions exceeds
                    this number. \n If set, revisionHistoryLimit must be a value of
                    `1` or greater. If unset (`nil`), revisions will not be garbage
                    collected. Default value is `nil`."
                  format: int32
                  type: integer
                secretName:
                  description: Name of the Secret resource that will be automatically
                    created and managed by this Certificate resource. It will be populated
                    with a private key and certificate, signed by the denoted issuer.
                    The Secret resource lives in the same namespace as the Certificate
                    resource.
                  type: string
                secretTemplate:
                  description: Defines annotations and labels to be copied to the
                    Certificate's Secret. Labels and annotations on the Secret will
                    be changed as they appear on the SecretTemplate when added or
                    removed. SecretTemplate annotations are added in conjunction with,
                    and cannot overwrite, the base set of annotations cert-manager
                    sets on the Certificate's Secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: "Requested set of X509 certificate subject attributes.
                    More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6
                    \n The common name attribute is specified separately in the `commonName`
                    field. Cannot be set if the `literalSubject` field is set."
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uris:
                  description: Requested URI subject alternative names.
                  items:
                    type: string
                  type: array
                usages:
                  description: "Requested key usages and extended key usages. These
                    usages are used to set the `usages` field on the created CertificateRequest
                    resources. If `encodeUsagesInRequest` is unset or set to `true`,
                    the usages will additionally be encoded in the `request` field
                    which contains the CSR blob. \n If unset, defaults to `digital
                    signature` and `key encipherment`."
                  items:
                    description: "KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      \n Valid KeyUsage values are as follows: \"signing\", \"digital
                      signature\", \"content commitment\", \"key encipherment\", \"key
                      agreement\", \"data encipherment\", \"cert sign\", \"crl sign\",
                      \"encipher only\", \"decipher only\", \"any\", \"server auth\",
                      \"client auth\", \"code signing\", \"email protection\", \"s/mime\",
                      \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\",
                      \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\""
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: 'Status of the Certificate. This is set and managed automatically.
                Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - type
                  x-kubernetes-list-type: map
                failedIssuanceAttempts:
                  description: The number of continuous failed issuance attempts up
                    till now. This field gets removed (if set) on a successful issuance
                    and gets set to 1 if unset and an issuance has failed. If an issuance
                    has failed, the delay till the next issuance will be calculated
                    using formula time.Hour * 2 ^ (failedIssuanceAttempts - 1).
                  type: integer
                lastFailureTime:
                  description: LastFailureTime is set only if the lastest issuance
                    for this Certificate failed and contains the time of the failure.
                    If an issuance has failed, the delay till the next issuance will
                    be calculated using formula time.Hour * 2 ^ (failedIssuanceAttempts
                    - 1). If the latest issuance has succeeded this field will be
                    unset.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in `spec.secretName` is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: Certificate
      listKind: CertificateList
      plural: certificates
      shortNames:
      - cert
      - certs
      singular: certificate
    conditions:
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:07:08Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.13.1
    name: challenges.acme.cert-manager.io
    resourceVersion: "8471"
    uid: 992101a5-dc84-4ee9-ac23-5bb83c5cc67e
  spec:
    conversion:
      strategy: None
    group: acme.cert-manager.io
    names:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Challenge
      listKind: ChallengeList
      plural: challenges
      singular: challenge
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authorizationURL:
                  description: The URL to the ACME Authorization resource that this
                    challenge is a part of.
                  type: string
                dnsName:
                  description: dnsName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: References a properly configured ACME-type Issuer which
                    should be used to create this Challenge. If the Issuer does not
                    exist, processing will be retried. If the Issuer is not an 'ACME'
                    Issuer, an error will be returned and the Challenge will be marked
                    as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'The ACME challenge key for this challenge For HTTP01
                    challenges, this is the value that must be responded with to complete
                    the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                    from acme server for challenge>`. For DNS01 challenges, this is
                    the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                    from acme server for challenge>` text that must be set as the
                    TXT record content.'
                  type: string
                solver:
                  description: Contains the domain solving configuration that should
                    be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmeDNS:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azureDNS:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              description: name of the Azure environment (default
                                AzurePublicCloud)
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              description: name of the DNS zone that should be used
                              type: string
                            managedIdentity:
                              description: managed identity configuration, can not
                                be used at the same time as clientID, clientSecretSecretRef
                                or tenantID
                              properties:
                                clientID:
                                  description: client ID of the managed identity,
                                    can not be used at the same time as resourceID
                                  type: string
                                resourceID:
                                  description: resource ID of the managed identity,
                                    can not be used at the same time as clientID
                                  type: string
                              type: object
                            resourceGroupName:
                              description: resource group the DNS zone is located
                                in
                              type: string
                            subscriptionID:
                              description: ID of the Azure subscription
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        cloudDNS:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1]) ; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                Cannot be set when SecretAccessKeyID is set. If neither
                                the Access Key nor Key ID are set, we fall-back to
                                using env vars, shared credentials file or AWS Instance
                                metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            accessKeyIDSecretRef:
                              description: 'The SecretAccessKey is used for authentication.
                                If set, pull the AWS access key ID from a key within
                                a Kubernetes Secret. Cannot be set when AccessKeyID
                                is set. If neither the Access Key nor Key ID are set,
                                we fall-back to using env vars, shared credentials
                                file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: 'The SecretAccessKey is used for authentication.
                                If neither the Access Key nor Key ID are set, we fall-back
                                to using env vars, shared credentials file or AWS
                                Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: Custom labels that will be applied to HTTPRoutes
                                created by cert-manager while solving HTTP-01 challenges.
                              type: object
                            parentRefs:
                              description: 'When solving an HTTP-01 challenge, cert-manager
                                creates an HTTPRoute. cert-manager needs to know which
                                parentRefs should be used when creating the HTTPRoute.
                                Usually, the parentRef references a Gateway. See:
                                https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                              items:
                                description: "ParentReference identifies an API object
                                  (usually a Gateway) that can be considered a parent
                                  of this resource (usually a route). There are two
                                  kinds of parent resources with \"Core\" support:
                                  \n * Gateway (Gateway conformance profile) * Service
                                  (Mesh conformance profile, experimental, ClusterIP
                                  Services only) \n This API may be extended in the
                                  future to support additional kinds of parent resources.
                                  \n The API object must be valid in the cluster;
                                  the Group and Kind must be registered in the cluster
                                  for this reference to be valid."
                                properties:
                                  group:
                                    default: gateway.networking.k8s.io
                                    description: "Group is the group of the referent.
                                      When unspecified, \"gateway.networking.k8s.io\"
                                      is inferred. To set the core API group (such
                                      as for a \"Service\" kind referent), Group must
                                      be explicitly set to \"\" (empty string). \n
                                      Support: Core"
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Gateway
                                    description: "Kind is kind of the referent. \n
                                      There are two kinds of parent resources with
                                      \"Core\" support: \n * Gateway (Gateway conformance
                                      profile) * Service (Mesh conformance profile,
                                      experimental, ClusterIP Services only) \n Support
                                      for other resources is Implementation-Specific."
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: "Name is the name of the referent.
                                      \n Support: Core"
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: "Namespace is the namespace of the
                                      referent. When unspecified, this refers to the
                                      local namespace of the Route. \n Note that there
                                      are specific rules for ParentRefs which cross
                                      namespace boundaries. Cross-namespace references
                                      are only valid if they are explicitly allowed
                                      by something in the namespace they are referring
                                      to. For example: Gateway has the AllowedRoutes
                                      field, and ReferenceGrant provides a generic
                                      way to enable any other kind of cross-namespace
                                      reference. \n ParentRefs from a Route to a Service
                                      in the same namespace are \"producer\" routes,
                                      which apply default routing rules to inbound
                                      connections from any namespace to the Service.
                                      \n ParentRefs from a Route to a Service in a
                                      different namespace are \"consumer\" routes,
                                      and these routing rules are only applied to
                                      outbound connections originating from the same
                                      namespace as the Route, for which the intended
                                      destination of the connections are a Service
                                      targeted as a ParentRef of the Route. \n Support:
                                      Core"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: "Port is the network port this Route
                                      targets. It can be interpreted differently based
                                      on the type of parent resource. \n When the
                                      parent resource is a Gateway, this targets all
                                      listeners listening on the specified port that
                                      also support this kind of Route(and select this
                                      Route). It's not recommended to set `Port` unless
                                      the networking behaviors specified in a Route
                                      must apply to a specific port as opposed to
                                      a listener(s) whose port(s) may be changed.
                                      When both Port and SectionName are specified,
                                      the name and port of the selected listener must
                                      match both specified values. \n When the parent
                                      resource is a Service, this targets a specific
                                      port in the Service spec. When both Port (experimental)
                                      and SectionName are specified, the name and
                                      port of the selected port must match both specified
                                      values. \n Implementations MAY choose to support
                                      other parent resources. Implementations supporting
                                      other types of parent resources MUST clearly
                                      document how/if Port is interpreted. \n For
                                      the purpose of status, an attachment is considered
                                      successful as long as the parent resource accepts
                                      it partially. For example, Gateway listeners
                                      can restrict which Routes can attach to them
                                      by Route kind, namespace, or hostname. If 1
                                      of 2 Gateway listeners accept attachment from
                                      the referencing Route, the Route MUST be considered
                                      successfully attached. If no Gateway listeners
                                      accept attachment from this Route, the Route
                                      MUST be considered detached from the Gateway.
                                      \n Support: Extended \n <gateway:experimental>"
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  sectionName:
                                    description: "SectionName is the name of a section
                                      within the target resource. In the following
                                      resources, SectionName is interpreted as the
                                      following: \n * Gateway: Listener Name. When
                                      both Port (experimental) and SectionName are
                                      specified, the name and port of the selected
                                      listener must match both specified values. *
                                      Service: Port Name. When both Port (experimental)
                                      and SectionName are specified, the name and
                                      port of the selected listener must match both
                                      specified values. Note that attaching Routes
                                      to Services as Parents is part of experimental
                                      Mesh support and is not supported for any other
                                      purpose. \n Implementations MAY choose to support
                                      attaching Routes to other resources. If that
                                      is the case, they MUST clearly document how
                                      SectionName is interpreted. \n When unspecified
                                      (empty string), this will reference the entire
                                      resource. For the purpose of status, an attachment
                                      is considered successful if at least one section
                                      in the parent resource accepts it. For example,
                                      Gateway listeners can restrict which Routes
                                      can attach to them by Route kind, namespace,
                                      or hostname. If 1 of 2 Gateway listeners accept
                                      attachment from the referencing Route, the Route
                                      MUST be considered successfully attached. If
                                      no Gateway listeners accept attachment from
                                      this Route, the Route MUST be considered detached
                                      from the Gateway. \n Support: Core"
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: This field configures the annotation `kubernetes.io/ingress.class`
                                when creating Ingress resources to solve ACME challenges
                                that use this challenge solver. Only one of `class`,
                                `name` or `ingressClassName` may be specified.
                              type: string
                            ingressClassName:
                              description: This field configures the field `ingressClassName`
                                on the created Ingress resources used to solve ACME
                                challenges that use this challenge solver. This is
                                the recommended way of configuring the ingress class.
                                Only one of `class`, `name` or `ingressClassName`
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources. Only one of `class`,
                                `name` or `ingressClassName` may be specified.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Check ACMEChallengeSolverHTTP01IngressPodSpec
                                    to find out currently supported fields. All other
                                    fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    imagePullSecrets:
                                      description: If specified, the pod's imagePullSecrets
                                      items:
                                        description: LocalObjectReference contains
                                          enough information to let you locate the
                                          referenced object inside the same namespace.
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: The ACME challenge token for this challenge. This is
                    the raw value returned from the ACME server.
                  type: string
                type:
                  description: The type of ACME challenge this resource represents.
                    One of "HTTP-01" or "DNS-01".
                  enum:
                  - HTTP-01
                  - DNS-01
                  type: string
                url:
                  description: The URL of the ACME Challenge resource for this challenge.
                    This can be used to lookup details about the status of this challenge.
                  type: string
                wildcard:
                  description: wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authorizationURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Used to denote whether this challenge should be processed
                    or not. This field will only be set to true by the 'scheduling'
                    component. It will only be set to false by the 'challenges' controller,
                    after the challenge has reached a final state or timed out. If
                    this field is set to false, the challenge controller will not
                    take any more action.
                  type: boolean
                reason:
                  description: Contains human readable information on why the Challenge
                    is in the current state.
                  type: string
                state:
                  description: Contains the current 'state' of the challenge. If not
                    set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Challenge
      listKind: ChallengeList
      plural: challenges
      singular: challenge
    conditions:
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:07:07Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.13.1
    name: clusterissuers.cert-manager.io
    resourceVersion: "8468"
    uid: 68465ed6-9524-4f0e-9141-8bfe99bd1900
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: ClusterIssuer
      listKind: ClusterIssuerList
      plural: clusterissuers
      singular: clusterissuer
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which can be used
                        to validate the certificate chain presented by the ACME server.
                        Mutually exclusive with SkipTLSVerify; prefer using CABundle
                        to prevent various kinds of security vulnerabilities. If CABundle
                        and SkipTLSVerify are unset, the system certificate bundle
                        inside the container is used to validate the TLS connection.
                      format: byte
                      type: string
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: 'INSECURE: Enables or disables validation of the
                        ACME server TLS certificate. If true, requests to the ACME
                        server will not have the TLS certificate chain validated.
                        Mutually exclusive with CABundle; prefer using CABundle to
                        prevent various kinds of security vulnerabilities. Only enable
                        this option in development environments. If CABundle and SkipTLSVerify
                        are unset, the system certificate bundle inside the container
                        is used to validate the TLS connection. Defaults to false.'
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: An ACMEChallengeSolver describes how to solve
                          ACME challenges for the issuer it is part of. A selector
                          may be provided to use different solving strategies for
                          different DNS names. Only one of HTTP01 or DNS01 must be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      Cannot be set when SecretAccessKeyID is set.
                                      If neither the Access Key nor Key ID are set,
                                      we fall-back to using env vars, shared credentials
                                      file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  accessKeyIDSecretRef:
                                    description: 'The SecretAccessKey is used for
                                      authentication. If set, pull the AWS access
                                      key ID from a key within a Kubernetes Secret.
                                      Cannot be set when AccessKeyID is set. If neither
                                      the Access Key nor Key ID are set, we fall-back
                                      to using env vars, shared credentials file or
                                      AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: 'The SecretAccessKey is used for
                                      authentication. If neither the Access Key nor
                                      Key ID are set, we fall-back to using env vars,
                                      shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: Custom labels that will be applied
                                      to HTTPRoutes created by cert-manager while
                                      solving HTTP-01 challenges.
                                    type: object
                                  parentRefs:
                                    description: 'When solving an HTTP-01 challenge,
                                      cert-manager creates an HTTPRoute. cert-manager
                                      needs to know which parentRefs should be used
                                      when creating the HTTPRoute. Usually, the parentRef
                                      references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                                    items:
                                      description: "ParentReference identifies an
                                        API object (usually a Gateway) that can be
                                        considered a parent of this resource (usually
                                        a route). There are two kinds of parent resources
                                        with \"Core\" support: \n * Gateway (Gateway
                                        conformance profile) * Service (Mesh conformance
                                        profile, experimental, ClusterIP Services
                                        only) \n This API may be extended in the future
                                        to support additional kinds of parent resources.
                                        \n The API object must be valid in the cluster;
                                        the Group and Kind must be registered in the
                                        cluster for this reference to be valid."
                                      properties:
                                        group:
                                          default: gateway.networking.k8s.io
                                          description: "Group is the group of the
                                            referent. When unspecified, \"gateway.networking.k8s.io\"
                                            is inferred. To set the core API group
                                            (such as for a \"Service\" kind referent),
                                            Group must be explicitly set to \"\" (empty
                                            string). \n Support: Core"
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Gateway
                                          description: "Kind is kind of the referent.
                                            \n There are two kinds of parent resources
                                            with \"Core\" support: \n * Gateway (Gateway
                                            conformance profile) * Service (Mesh conformance
                                            profile, experimental, ClusterIP Services
                                            only) \n Support for other resources is
                                            Implementation-Specific."
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: "Name is the name of the referent.
                                            \n Support: Core"
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: "Namespace is the namespace
                                            of the referent. When unspecified, this
                                            refers to the local namespace of the Route.
                                            \n Note that there are specific rules
                                            for ParentRefs which cross namespace boundaries.
                                            Cross-namespace references are only valid
                                            if they are explicitly allowed by something
                                            in the namespace they are referring to.
                                            For example: Gateway has the AllowedRoutes
                                            field, and ReferenceGrant provides a generic
                                            way to enable any other kind of cross-namespace
                                            reference. \n ParentRefs from a Route
                                            to a Service in the same namespace are
                                            \"producer\" routes, which apply default
                                            routing rules to inbound connections from
                                            any namespace to the Service. \n ParentRefs
                                            from a Route to a Service in a different
                                            namespace are \"consumer\" routes, and
                                            these routing rules are only applied to
                                            outbound connections originating from
                                            the same namespace as the Route, for which
                                            the intended destination of the connections
                                            are a Service targeted as a ParentRef
                                            of the Route. \n Support: Core"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: "Port is the network port this
                                            Route targets. It can be interpreted differently
                                            based on the type of parent resource.
                                            \n When the parent resource is a Gateway,
                                            this targets all listeners listening on
                                            the specified port that also support this
                                            kind of Route(and select this Route).
                                            It's not recommended to set `Port` unless
                                            the networking behaviors specified in
                                            a Route must apply to a specific port
                                            as opposed to a listener(s) whose port(s)
                                            may be changed. When both Port and SectionName
                                            are specified, the name and port of the
                                            selected listener must match both specified
                                            values. \n When the parent resource is
                                            a Service, this targets a specific port
                                            in the Service spec. When both Port (experimental)
                                            and SectionName are specified, the name
                                            and port of the selected port must match
                                            both specified values. \n Implementations
                                            MAY choose to support other parent resources.
                                            Implementations supporting other types
                                            of parent resources MUST clearly document
                                            how/if Port is interpreted. \n For the
                                            purpose of status, an attachment is considered
                                            successful as long as the parent resource
                                            accepts it partially. For example, Gateway
                                            listeners can restrict which Routes can
                                            attach to them by Route kind, namespace,
                                            or hostname. If 1 of 2 Gateway listeners
                                            accept attachment from the referencing
                                            Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept
                                            attachment from this Route, the Route
                                            MUST be considered detached from the Gateway.
                                            \n Support: Extended \n <gateway:experimental>"
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        sectionName:
                                          description: "SectionName is the name of
                                            a section within the target resource.
                                            In the following resources, SectionName
                                            is interpreted as the following: \n *
                                            Gateway: Listener Name. When both Port
                                            (experimental) and SectionName are specified,
                                            the name and port of the selected listener
                                            must match both specified values. * Service:
                                            Port Name. When both Port (experimental)
                                            and SectionName are specified, the name
                                            and port of the selected listener must
                                            match both specified values. Note that
                                            attaching Routes to Services as Parents
                                            is part of experimental Mesh support and
                                            is not supported for any other purpose.
                                            \n Implementations MAY choose to support
                                            attaching Routes to other resources. If
                                            that is the case, they MUST clearly document
                                            how SectionName is interpreted. \n When
                                            unspecified (empty string), this will
                                            reference the entire resource. For the
                                            purpose of status, an attachment is considered
                                            successful if at least one section in
                                            the parent resource accepts it. For example,
                                            Gateway listeners can restrict which Routes
                                            can attach to them by Route kind, namespace,
                                            or hostname. If 1 of 2 Gateway listeners
                                            accept attachment from the referencing
                                            Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept
                                            attachment from this Route, the Route
                                            MUST be considered detached from the Gateway.
                                            \n Support: Core"
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: This field configures the annotation
                                      `kubernetes.io/ingress.class` when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of `class`,
                                      `name` or `ingressClassName` may be specified.
                                    type: string
                                  ingressClassName:
                                    description: This field configures the field `ingressClassName`
                                      on the created Ingress resources used to solve
                                      ACME challenges that use this challenge solver.
                                      This is the recommended way of configuring the
                                      ingress class. Only one of `class`, `name` or
                                      `ingressClassName` may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources. Only one of `class`, `name` or `ingressClassName`
                                      may be specified.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Check ACMEChallengeSolverHTTP01IngressPodSpec
                                          to find out currently supported fields.
                                          All other fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          imagePullSecrets:
                                            description: If specified, the pod's imagePullSecrets
                                            items:
                                              description: LocalObjectReference contains
                                                enough information to let you locate
                                                the referenced object inside the same
                                                namespace.
                                              properties:
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceAccountRef:
                              description: A reference to a service account that will
                                be used to request a bound token (also known as "projected
                                token"). Compared to using "secretRef", using this
                                field means that you don't rely on statically bound
                                tokens. To use this field, you must configure an RBAC
                                rule to let cert-manager request a token.
                              properties:
                                name:
                                  description: Name of the ServiceAccount used to
                                    request a token.
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which will be
                        used to validate the certificate chain presented by Vault.
                        Only used if using HTTPS to connect to Vault and ignored for
                        HTTP connections. Mutually exclusive with CABundleSecretRef.
                        If neither CABundle nor CABundleSecretRef are defined, the
                        certificate bundle in the cert-manager controller container
                        is used to validate the TLS connection.
                      format: byte
                      type: string
                    caBundleSecretRef:
                      description: Reference to a Secret containing a bundle of PEM-encoded
                        CAs to use when verifying the certificate chain presented
                        by Vault when using HTTPS. Mutually exclusive with CABundle.
                        If neither CABundle nor CABundleSecretRef are defined, the
                        certificate bundle in the cert-manager controller container
                        is used to validate the TLS connection. If no key for the
                        Secret is specified, cert-manager will default to 'ca.crt'.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: Base64-encoded bundle of PEM CAs which will
                            be used to validate the certificate chain presented by
                            the TPP server. Only used if using HTTPS; ignored for
                            HTTP. If undefined, the certificate bundle in the cert-manager
                            controller container is used to validate the chain.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastPrivateKeyHash:
                      description: LastPrivateKeyHash is a hash of the private key
                        associated with the latest registered ACME account, in order
                        to track changes made to registered account associated with
                        the Issuer
                      type: string
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - type
                  x-kubernetes-list-type: map
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: ClusterIssuer
      listKind: ClusterIssuerList
      plural: clusterissuers
      singular: clusterissuer
    conditions:
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"configs.config.gatekeeper.sh"},"spec":{"group":"config.gatekeeper.sh","names":{"kind":"Config","listKind":"ConfigList","plural":"configs","shortNames":["config"],"singular":"config"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Config is the Schema for the configs API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ConfigSpec defines the desired state of Config.","properties":{"match":{"description":"Configuration for namespace exclusion","items":{"properties":{"excludedNamespaces":{"items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"processes":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"readiness":{"description":"Configuration for readiness tracker","properties":{"statsEnabled":{"type":"boolean"}},"type":"object"},"sync":{"description":"Configuration for syncing k8s objects","properties":{"syncOnly":{"description":"If non-empty, only entries on this list will be replicated into OPA","items":{"properties":{"group":{"type":"string"},"kind":{"type":"string"},"version":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"validation":{"description":"Configuration for validation","properties":{"traces":{"description":"List of requests to trace. Both \"user\" and \"kinds\" must be specified","items":{"properties":{"dump":{"description":"Also dump the state of OPA with the trace. Set to `All` to dump everything.","type":"string"},"kind":{"description":"Only trace requests of the following GroupVersionKind","properties":{"group":{"type":"string"},"kind":{"type":"string"},"version":{"type":"string"}},"type":"object"},"user":{"description":"Only trace requests from the specified user","type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"status":{"description":"ConfigStatus defines the observed state of Config.","type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: configs.config.gatekeeper.sh
    resourceVersion: "4762"
    uid: 1dcbd539-dfa3-4304-8d7a-de7963cd364a
  spec:
    conversion:
      strategy: None
    group: config.gatekeeper.sh
    names:
      kind: Config
      listKind: ConfigList
      plural: configs
      shortNames:
      - config
      singular: config
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Config is the Schema for the configs API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ConfigSpec defines the desired state of Config.
              properties:
                match:
                  description: Configuration for namespace exclusion
                  items:
                    properties:
                      excludedNamespaces:
                        items:
                          description: |-
                            A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                            "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                            match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                          pattern: ^\*?[-:a-z0-9]*\*?$
                          type: string
                        type: array
                      processes:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                readiness:
                  description: Configuration for readiness tracker
                  properties:
                    statsEnabled:
                      type: boolean
                  type: object
                sync:
                  description: Configuration for syncing k8s objects
                  properties:
                    syncOnly:
                      description: If non-empty, only entries on this list will be
                        replicated into OPA
                      items:
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          version:
                            type: string
                        type: object
                      type: array
                  type: object
                validation:
                  description: Configuration for validation
                  properties:
                    traces:
                      description: List of requests to trace. Both "user" and "kinds"
                        must be specified
                      items:
                        properties:
                          dump:
                            description: Also dump the state of OPA with the trace.
                              Set to `All` to dump everything.
                            type: string
                          kind:
                            description: Only trace requests of the following GroupVersionKind
                            properties:
                              group:
                                type: string
                              kind:
                                type: string
                              version:
                                type: string
                            type: object
                          user:
                            description: Only trace requests from the specified user
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            status:
              description: ConfigStatus defines the observed state of Config.
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Config
      listKind: ConfigList
      plural: configs
      shortNames:
      - config
      singular: config
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: configsyncstatuses.clusterconfig.azure.com
    resourceVersion: "5029"
    uid: 758d490a-b6ac-480f-82e8-3ed53b3dbb6d
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: ConfigSyncStatus
      listKind: ConfigSyncStatusList
      plural: configsyncstatuses
      singular: configsyncstatus
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ConfigSyncStatus is the Schema for the configsyncstatuses API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConfigSyncStatusSpec defines the desired state of ConfigSyncStatus
              properties:
                agentOperationID:
                  type: string
                configApplyTime:
                  format: date-time
                  type: string
                configKind:
                  type: string
                resourceVersionSynced:
                  type: string
                syncTime:
                  format: date-time
                  type: string
              type: object
            status:
              description: ConfigSyncStatusStatus defines the observed state of ConfigSyncStatus
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ConfigSyncStatus
      listKind: ConfigSyncStatusList
      plural: configsyncstatuses
      singular: configsyncstatus
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
      resourceSync.arc.azure.com/ProviderNamespace: Microsoft.Kubernetes
      resourceSync.arc.azure.com/ResourceType: ConnectedClusters
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      azuresync: "true"
    name: connectedclusters.arc.azure.com
    resourceVersion: "5020"
    uid: b870b6f5-127d-4197-ba91-b65ca8eaa531
  spec:
    conversion:
      strategy: None
    group: arc.azure.com
    names:
      kind: ConnectedCluster
      listKind: ConnectedClusterList
      plural: connectedclusters
      singular: connectedcluster
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ConnectedCluster is the object for the ConnectedClusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ConnectedClusterSpec defines the desired state of ConnectedCluster
              properties:
                azureResourceId:
                  description: AzureResourceId is the armId of the cluster
                  type: string
              type: object
            status:
              description: ConnectedClusterStatus defines the observed state of ConnectedCluster
              properties:
                arcAgentVersion:
                  description: ArcAgentVersion is the version of the arc agents in
                    the cluster
                  type: string
                coreCount:
                  description: CoreCount is the collective no of cores limit over
                    all nodes present in the cluster
                  type: integer
                kubernetesAPIServerVersion:
                  description: KubernetesAPIServerVersion is the kubernetes version
                    the cluster is running on
                  type: string
                kubernetesDistribution:
                  description: This is the Kubernetes distribution of the Kubernetes
                    cluster onboarded to Azure arc
                  type: string
                kubernetesInfrastructure:
                  description: This is the Kubernetes Infrastructure of the Kubernetes
                    cluster onboarded to Azure arc
                  type: string
                lastConnectivityTime:
                  format: date-time
                  type: string
                managedIdentityCertificateExpirationTime:
                  format: date-time
                  type: string
                nodeCount:
                  description: NodeCount is the no of the nodes present in the cluster
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ConnectedCluster
      listKind: ConnectedClusterList
      plural: connectedclusters
      singular: connectedcluster
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"constraintpodstatuses.status.gatekeeper.sh"},"spec":{"group":"status.gatekeeper.sh","names":{"kind":"ConstraintPodStatus","listKind":"ConstraintPodStatusList","plural":"constraintpodstatuses","singular":"constraintpodstatus"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"ConstraintPodStatus is the Schema for the constraintpodstatuses API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"status":{"description":"ConstraintPodStatusStatus defines the observed state of ConstraintPodStatus.","properties":{"constraintUID":{"description":"Storing the constraint UID allows us to detect drift, such as\nwhen a constraint has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"enforced":{"type":"boolean"},"errors":{"items":{"description":"Error represents a single error caught while adding a constraint to engine.","properties":{"code":{"type":"string"},"location":{"type":"string"},"message":{"type":"string"}},"required":["code","message"],"type":"object"},"type":"array"},"id":{"type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: constraintpodstatuses.status.gatekeeper.sh
    resourceVersion: "4766"
    uid: 31a1d516-21d6-44a5-a14c-e25b0edb5816
  spec:
    conversion:
      strategy: None
    group: status.gatekeeper.sh
    names:
      kind: ConstraintPodStatus
      listKind: ConstraintPodStatusList
      plural: constraintpodstatuses
      singular: constraintpodstatus
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ConstraintPodStatus is the Schema for the constraintpodstatuses
            API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            status:
              description: ConstraintPodStatusStatus defines the observed state of
                ConstraintPodStatus.
              properties:
                constraintUID:
                  description: |-
                    Storing the constraint UID allows us to detect drift, such as
                    when a constraint has been recreated after its CRD was deleted
                    out from under it, interrupting the watch
                  type: string
                enforced:
                  type: boolean
                errors:
                  items:
                    description: Error represents a single error caught while adding
                      a constraint to engine.
                    properties:
                      code:
                        type: string
                      location:
                        type: string
                      message:
                        type: string
                    required:
                    - code
                    - message
                    type: object
                  type: array
                id:
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                operations:
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ConstraintPodStatus
      listKind: ConstraintPodStatusList
      plural: constraintpodstatuses
      singular: constraintpodstatus
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"constrainttemplatepodstatuses.status.gatekeeper.sh"},"spec":{"group":"status.gatekeeper.sh","names":{"kind":"ConstraintTemplatePodStatus","listKind":"ConstraintTemplatePodStatusList","plural":"constrainttemplatepodstatuses","singular":"constrainttemplatepodstatus"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"ConstraintTemplatePodStatus is the Schema for the constrainttemplatepodstatuses API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"status":{"description":"ConstraintTemplatePodStatusStatus defines the observed state of ConstraintTemplatePodStatus.","properties":{"errors":{"items":{"description":"CreateCRDError represents a single error caught during parsing, compiling, etc.","properties":{"code":{"type":"string"},"location":{"type":"string"},"message":{"type":"string"}},"required":["code","message"],"type":"object"},"type":"array"},"id":{"description":"Important: Run \"make\" to regenerate code after modifying this file","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"},"templateUID":{"description":"UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: constrainttemplatepodstatuses.status.gatekeeper.sh
    resourceVersion: "4768"
    uid: 672ea01c-0860-420b-8c98-ddec7d32a82e
  spec:
    conversion:
      strategy: None
    group: status.gatekeeper.sh
    names:
      kind: ConstraintTemplatePodStatus
      listKind: ConstraintTemplatePodStatusList
      plural: constrainttemplatepodstatuses
      singular: constrainttemplatepodstatus
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ConstraintTemplatePodStatus is the Schema for the constrainttemplatepodstatuses
            API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            status:
              description: ConstraintTemplatePodStatusStatus defines the observed
                state of ConstraintTemplatePodStatus.
              properties:
                errors:
                  items:
                    description: CreateCRDError represents a single error caught during
                      parsing, compiling, etc.
                    properties:
                      code:
                        type: string
                      location:
                        type: string
                      message:
                        type: string
                    required:
                    - code
                    - message
                    type: object
                  type: array
                id:
                  description: 'Important: Run "make" to regenerate code after modifying
                    this file'
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                operations:
                  items:
                    type: string
                  type: array
                templateUID:
                  description: |-
                    UID is a type that holds unique ID values, including UUIDs.  Because we
                    don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                    intent and helps make sure that UIDs and names do not get conflated.
                  type: string
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ConstraintTemplatePodStatus
      listKind: ConstraintTemplatePodStatusList
      plural: constrainttemplatepodstatuses
      singular: constrainttemplatepodstatus
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"constrainttemplates.templates.gatekeeper.sh"},"spec":{"group":"templates.gatekeeper.sh","names":{"kind":"ConstraintTemplate","listKind":"ConstraintTemplateList","plural":"constrainttemplates","shortNames":["constraints"],"singular":"constrainttemplate"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"description":"ConstraintTemplate is the Schema for the constrainttemplates API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ConstraintTemplateSpec defines the desired state of ConstraintTemplate.","properties":{"crd":{"properties":{"spec":{"properties":{"names":{"properties":{"kind":{"type":"string"},"shortNames":{"items":{"type":"string"},"type":"array"}},"type":"object"},"validation":{"default":{"legacySchema":false},"properties":{"legacySchema":{"default":false,"type":"boolean"},"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"}},"type":"object"},"targets":{"items":{"properties":{"code":{"description":"The source code options for the constraint template. \"Rego\" can only\nbe specified in one place (either here or in the \"rego\" field)","items":{"properties":{"engine":{"description":"The engine used to evaluate the code. Example: \"Rego\". Required.","type":"string"},"source":{"description":"The source code for the template. Required.","x-kubernetes-preserve-unknown-fields":true}},"required":["engine","source"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["engine"],"x-kubernetes-list-type":"map"},"libs":{"items":{"type":"string"},"type":"array"},"rego":{"type":"string"},"target":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"status":{"description":"ConstraintTemplateStatus defines the observed state of ConstraintTemplate.","properties":{"byPod":{"items":{"description":"ByPodStatus defines the observed state of ConstraintTemplate as seen by\nan individual controller","properties":{"errors":{"items":{"description":"CreateCRDError represents a single error caught during parsing, compiling, etc.","properties":{"code":{"type":"string"},"location":{"type":"string"},"message":{"type":"string"}},"required":["code","message"],"type":"object"},"type":"array"},"id":{"description":"a unique identifier for the pod that wrote the status","type":"string"},"observedGeneration":{"format":"int64","type":"integer"}},"type":"object","x-kubernetes-preserve-unknown-fields":true},"type":"array"},"created":{"type":"boolean"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"ConstraintTemplate is the Schema for the constrainttemplates API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ConstraintTemplateSpec defines the desired state of ConstraintTemplate.","properties":{"crd":{"properties":{"spec":{"properties":{"names":{"properties":{"kind":{"type":"string"},"shortNames":{"items":{"type":"string"},"type":"array"}},"type":"object"},"validation":{"default":{"legacySchema":true},"properties":{"legacySchema":{"default":true,"type":"boolean"},"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"}},"type":"object"},"targets":{"items":{"properties":{"code":{"description":"The source code options for the constraint template. \"Rego\" can only\nbe specified in one place (either here or in the \"rego\" field)","items":{"properties":{"engine":{"description":"The engine used to evaluate the code. Example: \"Rego\". Required.","type":"string"},"source":{"description":"The source code for the template. Required.","x-kubernetes-preserve-unknown-fields":true}},"required":["engine","source"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["engine"],"x-kubernetes-list-type":"map"},"libs":{"items":{"type":"string"},"type":"array"},"rego":{"type":"string"},"target":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"status":{"description":"ConstraintTemplateStatus defines the observed state of ConstraintTemplate.","properties":{"byPod":{"items":{"description":"ByPodStatus defines the observed state of ConstraintTemplate as seen by\nan individual controller","properties":{"errors":{"items":{"description":"CreateCRDError represents a single error caught during parsing, compiling, etc.","properties":{"code":{"type":"string"},"location":{"type":"string"},"message":{"type":"string"}},"required":["code","message"],"type":"object"},"type":"array"},"id":{"description":"a unique identifier for the pod that wrote the status","type":"string"},"observedGeneration":{"format":"int64","type":"integer"}},"type":"object","x-kubernetes-preserve-unknown-fields":true},"type":"array"},"created":{"type":"boolean"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"ConstraintTemplate is the Schema for the constrainttemplates API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ConstraintTemplateSpec defines the desired state of ConstraintTemplate.","properties":{"crd":{"properties":{"spec":{"properties":{"names":{"properties":{"kind":{"type":"string"},"shortNames":{"items":{"type":"string"},"type":"array"}},"type":"object"},"validation":{"default":{"legacySchema":true},"properties":{"legacySchema":{"default":true,"type":"boolean"},"openAPIV3Schema":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"}},"type":"object"},"targets":{"items":{"properties":{"code":{"description":"The source code options for the constraint template. \"Rego\" can only\nbe specified in one place (either here or in the \"rego\" field)","items":{"properties":{"engine":{"description":"The engine used to evaluate the code. Example: \"Rego\". Required.","type":"string"},"source":{"description":"The source code for the template. Required.","x-kubernetes-preserve-unknown-fields":true}},"required":["engine","source"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["engine"],"x-kubernetes-list-type":"map"},"libs":{"items":{"type":"string"},"type":"array"},"rego":{"type":"string"},"target":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"status":{"description":"ConstraintTemplateStatus defines the observed state of ConstraintTemplate.","properties":{"byPod":{"items":{"description":"ByPodStatus defines the observed state of ConstraintTemplate as seen by\nan individual controller","properties":{"errors":{"items":{"description":"CreateCRDError represents a single error caught during parsing, compiling, etc.","properties":{"code":{"type":"string"},"location":{"type":"string"},"message":{"type":"string"}},"required":["code","message"],"type":"object"},"type":"array"},"id":{"description":"a unique identifier for the pod that wrote the status","type":"string"},"observedGeneration":{"format":"int64","type":"integer"}},"type":"object","x-kubernetes-preserve-unknown-fields":true},"type":"array"},"created":{"type":"boolean"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: constrainttemplates.templates.gatekeeper.sh
    resourceVersion: "4778"
    uid: addc2534-d085-4bbb-accd-6d15657b5604
  spec:
    conversion:
      strategy: None
    group: templates.gatekeeper.sh
    names:
      kind: ConstraintTemplate
      listKind: ConstraintTemplateList
      plural: constrainttemplates
      shortNames:
      - constraints
      singular: constrainttemplate
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ConstraintTemplate is the Schema for the constrainttemplates
            API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ConstraintTemplateSpec defines the desired state of ConstraintTemplate.
              properties:
                crd:
                  properties:
                    spec:
                      properties:
                        names:
                          properties:
                            kind:
                              type: string
                            shortNames:
                              items:
                                type: string
                              type: array
                          type: object
                        validation:
                          default:
                            legacySchema: false
                          properties:
                            legacySchema:
                              default: false
                              type: boolean
                            openAPIV3Schema:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                targets:
                  items:
                    properties:
                      code:
                        description: |-
                          The source code options for the constraint template. "Rego" can only
                          be specified in one place (either here or in the "rego" field)
                        items:
                          properties:
                            engine:
                              description: 'The engine used to evaluate the code.
                                Example: "Rego". Required.'
                              type: string
                            source:
                              description: The source code for the template. Required.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - engine
                          - source
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - engine
                        x-kubernetes-list-type: map
                      libs:
                        items:
                          type: string
                        type: array
                      rego:
                        type: string
                      target:
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: ConstraintTemplateStatus defines the observed state of
                ConstraintTemplate.
              properties:
                byPod:
                  items:
                    description: |-
                      ByPodStatus defines the observed state of ConstraintTemplate as seen by
                      an individual controller
                    properties:
                      errors:
                        items:
                          description: CreateCRDError represents a single error caught
                            during parsing, compiling, etc.
                          properties:
                            code:
                              type: string
                            location:
                              type: string
                            message:
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      id:
                        description: a unique identifier for the pod that wrote the
                          status
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                created:
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ConstraintTemplate is the Schema for the constrainttemplates
            API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ConstraintTemplateSpec defines the desired state of ConstraintTemplate.
              properties:
                crd:
                  properties:
                    spec:
                      properties:
                        names:
                          properties:
                            kind:
                              type: string
                            shortNames:
                              items:
                                type: string
                              type: array
                          type: object
                        validation:
                          default:
                            legacySchema: true
                          properties:
                            legacySchema:
                              default: true
                              type: boolean
                            openAPIV3Schema:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                targets:
                  items:
                    properties:
                      code:
                        description: |-
                          The source code options for the constraint template. "Rego" can only
                          be specified in one place (either here or in the "rego" field)
                        items:
                          properties:
                            engine:
                              description: 'The engine used to evaluate the code.
                                Example: "Rego". Required.'
                              type: string
                            source:
                              description: The source code for the template. Required.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - engine
                          - source
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - engine
                        x-kubernetes-list-type: map
                      libs:
                        items:
                          type: string
                        type: array
                      rego:
                        type: string
                      target:
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: ConstraintTemplateStatus defines the observed state of
                ConstraintTemplate.
              properties:
                byPod:
                  items:
                    description: |-
                      ByPodStatus defines the observed state of ConstraintTemplate as seen by
                      an individual controller
                    properties:
                      errors:
                        items:
                          description: CreateCRDError represents a single error caught
                            during parsing, compiling, etc.
                          properties:
                            code:
                              type: string
                            location:
                              type: string
                            message:
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      id:
                        description: a unique identifier for the pod that wrote the
                          status
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                created:
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ConstraintTemplate is the Schema for the constrainttemplates
            API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ConstraintTemplateSpec defines the desired state of ConstraintTemplate.
              properties:
                crd:
                  properties:
                    spec:
                      properties:
                        names:
                          properties:
                            kind:
                              type: string
                            shortNames:
                              items:
                                type: string
                              type: array
                          type: object
                        validation:
                          default:
                            legacySchema: true
                          properties:
                            legacySchema:
                              default: true
                              type: boolean
                            openAPIV3Schema:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  type: object
                targets:
                  items:
                    properties:
                      code:
                        description: |-
                          The source code options for the constraint template. "Rego" can only
                          be specified in one place (either here or in the "rego" field)
                        items:
                          properties:
                            engine:
                              description: 'The engine used to evaluate the code.
                                Example: "Rego". Required.'
                              type: string
                            source:
                              description: The source code for the template. Required.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - engine
                          - source
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - engine
                        x-kubernetes-list-type: map
                      libs:
                        items:
                          type: string
                        type: array
                      rego:
                        type: string
                      target:
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: ConstraintTemplateStatus defines the observed state of
                ConstraintTemplate.
              properties:
                byPod:
                  items:
                    description: |-
                      ByPodStatus defines the observed state of ConstraintTemplate as seen by
                      an individual controller
                    properties:
                      errors:
                        items:
                          description: CreateCRDError represents a single error caught
                            during parsing, compiling, etc.
                          properties:
                            code:
                              type: string
                            location:
                              type: string
                            message:
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      id:
                        description: a unique identifier for the pod that wrote the
                          status
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                created:
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ConstraintTemplate
      listKind: ConstraintTemplateList
      plural: constrainttemplates
      shortNames:
      - constraints
      singular: constrainttemplate
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: customlocationsettings.clusterconfig.azure.com
    resourceVersion: "5007"
    uid: 6f7f16c9-8cd9-4e10-aba6-1eb3be06dea5
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: CustomLocationSettings
      listKind: CustomLocationSettingsList
      plural: customlocationsettings
      singular: customlocationsettings
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: CustomLocationSettings is the Schema for the customlocationsettings
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CustomLocationSettingsSpec defines the desired state of
                CustomLocationSettings
              properties:
                AnnotationSyncFilter:
                  items:
                    type: string
                  type: array
                ClusterRole:
                  type: string
                EnabledResourceTypes:
                  items:
                    properties:
                      ApiVersion:
                        type: string
                      ResourceMapping:
                        properties:
                          Group:
                            type: string
                          Kind:
                            type: string
                          Name:
                            type: string
                          Version:
                            type: string
                        type: object
                      ResourceProviderNamespace:
                        type: string
                      ResourceType:
                        type: string
                    type: object
                  type: array
                ExtensionRegistrationTime:
                  type: integer
                ExtensionType:
                  type: string
                LabelSyncFilter:
                  items:
                    type: string
                  type: array
                RPAppId:
                  description: Foo is an example field of CustomLocationSettings.
                    Edit CustomLocationSettings_types.go to remove/update
                  type: string
              type: object
            status:
              description: CustomLocationSettingsStatus defines the observed state
                of CustomLocationSettings
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CustomLocationSettings
      listKind: CustomLocationSettingsList
      plural: customlocationsettings
      singular: customlocationsettings
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:18:52Z"
    generation: 1
    name: dataflowendpoints.connectivity.iotoperations.azure.com
    resourceVersion: "15703"
    uid: 464c80d2-987f-45f0-850e-097455999bd8
  spec:
    conversion:
      strategy: None
    group: connectivity.iotoperations.azure.com
    names:
      kind: DataflowEndpoint
      listKind: DataflowEndpointList
      plural: dataflowendpoints
      singular: dataflowendpoint
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for DataflowEndpointSpec via `CustomResource`
          properties:
            spec:
              oneOf:
              - required:
                - mqttSettings
              - required:
                - kafkaSettings
              - required:
                - fabricOneLakeSettings
              - required:
                - dataLakeStorageSettings
              - required:
                - dataExplorerSettings
              - required:
                - localStorageSettings
              properties:
                dataExplorerSettings:
                  properties:
                    authentication:
                      oneOf:
                      - required:
                        - systemAssignedManagedIdentitySettings
                      - required:
                        - userAssignedManagedIdentitySettings
                      - required:
                        - accessTokenSettings
                      properties:
                        accessTokenSettings:
                          properties:
                            secretRef:
                              description: secret reference to token. Required
                              type: string
                          required:
                          - secretRef
                          type: object
                        method:
                          description: Selector used to determine which of the oneOf
                            values to use.
                          enum:
                          - UserAssignedManagedIdentity
                          - SystemAssignedManagedIdentity
                          - AccessToken
                          type: string
                        systemAssignedManagedIdentitySettings:
                          properties:
                            audience:
                              description: Audience of the service to authenticate
                                against. Optional; the operator will attempt to infer
                                it from endpoint if not provided.
                              nullable: true
                              type: string
                          type: object
                        userAssignedManagedIdentitySettings:
                          properties:
                            clientId:
                              description: Client ID for the user-assigned managed
                                identity. Required
                              type: string
                            scope:
                              description: Scope of the resource, affixed with the
                                .default suffix. Optional; the operator will attempt
                                to infer it from endpoint if not provided.
                              nullable: true
                              type: string
                            tenantId:
                              description: Tenant ID. Required.
                              type: string
                          required:
                          - clientId
                          - tenantId
                          type: object
                      required:
                      - method
                      type: object
                    batching:
                      default:
                        latencySeconds: 60
                        maxMessages: 100000
                      description: Batching configuration. Optional; no batching if
                        omitted.
                      properties:
                        latencySeconds:
                          default: 60
                          description: Batching latency in seconds. Optional; defaults
                            to 60.
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          type: integer
                        maxMessages:
                          default: 100000
                          description: Maximum number of messages in a batch. Optional;
                            defaults to 100000.
                          format: uint32
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    database:
                      description: Database name. Required
                      type: string
                    host:
                      description: Host of the Azure Data Explorer in the form of
                        <cluster>.<region>.kusto.windows.net.
                      pattern: .*\.*\.kusto\.windows\.net
                      type: string
                  required:
                  - authentication
                  - database
                  - host
                  type: object
                dataLakeStorageSettings:
                  properties:
                    authentication:
                      oneOf:
                      - required:
                        - systemAssignedManagedIdentitySettings
                      - required:
                        - userAssignedManagedIdentitySettings
                      - required:
                        - accessTokenSettings
                      properties:
                        accessTokenSettings:
                          properties:
                            secretRef:
                              description: secret reference to token. Required
                              type: string
                          required:
                          - secretRef
                          type: object
                        method:
                          description: Selector used to determine which of the oneOf
                            values to use.
                          enum:
                          - UserAssignedManagedIdentity
                          - SystemAssignedManagedIdentity
                          - AccessToken
                          type: string
                        systemAssignedManagedIdentitySettings:
                          properties:
                            audience:
                              description: Audience of the service to authenticate
                                against. Optional; the operator will attempt to infer
                                it from endpoint if not provided.
                              nullable: true
                              type: string
                          type: object
                        userAssignedManagedIdentitySettings:
                          properties:
                            clientId:
                              description: Client ID for the user-assigned managed
                                identity. Required
                              type: string
                            scope:
                              description: Scope of the resource, affixed with the
                                .default suffix. Optional; the operator will attempt
                                to infer it from endpoint if not provided.
                              nullable: true
                              type: string
                            tenantId:
                              description: Tenant ID. Required.
                              type: string
                          required:
                          - clientId
                          - tenantId
                          type: object
                      required:
                      - method
                      type: object
                    batching:
                      default:
                        latencySeconds: 60
                        maxMessages: 100000
                      description: Batching configuration. Optional; no batching if
                        omitted.
                      properties:
                        latencySeconds:
                          default: 60
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          type: integer
                        maxMessages:
                          default: 100000
                          format: uint32
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    host:
                      description: Host of the Azure Data Lake in the form of <account>.blob.core.windows.net.
                        Required.
                      pattern: .*\.blob\.core\.windows\.net
                      type: string
                  required:
                  - authentication
                  - host
                  type: object
                endpointType:
                  description: Selector used to determine which of the oneOf values
                    to use.
                  enum:
                  - DataExplorer
                  - dataExplorer
                  - DataLakeStorage
                  - dataLakeStorage
                  - FabricOneLake
                  - fabricOneLake
                  - Kafka
                  - kafka
                  - LocalStorage
                  - localStorage
                  - Mqtt
                  - mqtt
                  type: string
                fabricOneLakeSettings:
                  properties:
                    authentication:
                      oneOf:
                      - required:
                        - systemAssignedManagedIdentitySettings
                      - required:
                        - userAssignedManagedIdentitySettings
                      - required:
                        - accessTokenSettings
                      properties:
                        accessTokenSettings:
                          properties:
                            secretRef:
                              description: secret reference to token. Required
                              type: string
                          required:
                          - secretRef
                          type: object
                        method:
                          description: Selector used to determine which of the oneOf
                            values to use.
                          enum:
                          - UserAssignedManagedIdentity
                          - SystemAssignedManagedIdentity
                          - AccessToken
                          type: string
                        systemAssignedManagedIdentitySettings:
                          properties:
                            audience:
                              description: Audience of the service to authenticate
                                against. Optional; the operator will attempt to infer
                                it from endpoint if not provided.
                              nullable: true
                              type: string
                          type: object
                        userAssignedManagedIdentitySettings:
                          properties:
                            clientId:
                              description: Client ID for the user-assigned managed
                                identity. Required
                              type: string
                            scope:
                              description: Scope of the resource, affixed with the
                                .default suffix. Optional; the operator will attempt
                                to infer it from endpoint if not provided.
                              nullable: true
                              type: string
                            tenantId:
                              description: Tenant ID. Required.
                              type: string
                          required:
                          - clientId
                          - tenantId
                          type: object
                      required:
                      - method
                      type: object
                    batching:
                      default:
                        latencySeconds: 60
                        maxMessages: 100000
                      description: Batching configuration. Optional; no batching if
                        omitted.
                      properties:
                        latencySeconds:
                          default: 60
                          description: Batching latency in seconds. Optional; defaults
                            to 60.
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          type: integer
                        maxMessages:
                          default: 100000
                          description: Maximum number of messages in a batch. Optional;
                            defaults to 100000.
                          format: uint32
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    host:
                      description: Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
                        Required.
                      pattern: .*\.fabric\.microsoft\.com
                      type: string
                    names:
                      description: Names of the workspace and lakehouse. Required.
                      properties:
                        lakehouseName:
                          description: Lakehouse name.
                          type: string
                        workspaceName:
                          description: Workspace name.
                          type: string
                      required:
                      - lakehouseName
                      - workspaceName
                      type: object
                    oneLakePathType:
                      description: Type of location of the data in the workspace.
                        Can be either tables or files. Required.
                      enum:
                      - Files
                      - Tables
                      type: string
                  required:
                  - authentication
                  - host
                  - names
                  - oneLakePathType
                  type: object
                kafkaSettings:
                  properties:
                    authentication:
                      oneOf:
                      - required:
                        - systemAssignedManagedIdentitySettings
                      - required:
                        - userAssignedManagedIdentitySettings
                      - required:
                        - x509CertificateSettings
                      - required:
                        - saslSettings
                      - required:
                        - anonymousSettings
                      properties:
                        anonymousSettings:
                          type: object
                        method:
                          description: Selector used to determine which of the oneOf
                            values to use.
                          enum:
                          - UserAssignedManagedIdentity
                          - SystemAssignedManagedIdentity
                          - Sasl
                          - X509Certificate
                          - Anonymous
                          type: string
                        saslSettings:
                          properties:
                            saslType:
                              description: Type of SASL authentication. Can be PLAIN,
                                SCRAM-SHA-256, or SCRAM-SHA-512. Required.
                              enum:
                              - Plain
                              - plain
                              - ScramSha256
                              - scramSha256
                              - ScramSha512
                              - scramSha512
                              type: string
                            secretRef:
                              type: string
                          required:
                          - saslType
                          - secretRef
                          type: object
                        systemAssignedManagedIdentitySettings:
                          properties:
                            audience:
                              description: Audience of the service to authenticate
                                against. Optional; the operator will attempt to infer
                                it from endpoint if not provided.
                              nullable: true
                              type: string
                          type: object
                        userAssignedManagedIdentitySettings:
                          properties:
                            clientId:
                              description: Client ID for the user-assigned managed
                                identity. Required
                              type: string
                            scope:
                              description: Scope of the resource, affixed with the
                                .default suffix. Optional; the operator will attempt
                                to infer it from endpoint if not provided.
                              nullable: true
                              type: string
                            tenantId:
                              description: Tenant ID. Required.
                              type: string
                          required:
                          - clientId
                          - tenantId
                          type: object
                        x509CertificateSettings:
                          properties:
                            secretRef:
                              description: Secret name of the X.509 certificate. Required.
                              type: string
                          required:
                          - secretRef
                          type: object
                      required:
                      - method
                      type: object
                    batching:
                      default:
                        latencyMs: 5
                        maxBytes: 1000000
                        maxMessages: 100000
                        mode: Enabled
                      description: Batching configuration.
                      properties:
                        latencyMs:
                          default: 5
                          description: Batching latency in milliseconds.
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          type: integer
                        maxBytes:
                          default: 1000000
                          description: Maximum number of bytes in a batch.
                          format: uint32
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        maxMessages:
                          default: 100000
                          description: Maximum number of messages in a batch.
                          format: uint32
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        mode:
                          default: Enabled
                          description: Mode for batching.
                          enum:
                          - Enabled
                          - enabled
                          - Disabled
                          - disabled
                          type: string
                      type: object
                    cloudEventAttributes:
                      default: Propagate
                      enum:
                      - Propagate
                      - propagate
                      - CreateOrRemap
                      - createOrRemap
                      type: string
                    compression:
                      default: None
                      description: Compression. Can be none, gzip, lz4, or snappy.
                        No effect if the endpoint is used as a source.
                      enum:
                      - None
                      - Gzip
                      - Snappy
                      - Lz4
                      type: string
                    consumerGroupId:
                      description: Consumer group ID.
                      nullable: true
                      type: string
                    copyMqttProperties:
                      default: Disabled
                      description: Copy Broker properties. No effect if the endpoint
                        is used as a source or if the dataflow doesn't have an Broker
                        source.
                      enum:
                      - Enabled
                      - enabled
                      - Disabled
                      - disabled
                      type: string
                    host:
                      description: Kafka endpoint host.
                      nullable: true
                      type: string
                    kafkaAcks:
                      default: All
                      description: Kafka acks. Can be all, one, or zero. No effect
                        if the endpoint is used as a source.
                      enum:
                      - Zero
                      - zero
                      - One
                      - one
                      - All
                      - all
                      type: string
                    partitionStrategy:
                      default: Default
                      description: Partition handling strategy. Can be default or
                        static. No effect if the endpoint is used as a source.
                      enum:
                      - Default
                      - default
                      - Static
                      - static
                      - Topic
                      - topic
                      - Property
                      - property
                      type: string
                    tls:
                      description: TLS configuration.
                      properties:
                        mode:
                          default: Enabled
                          description: Mode for TLS.
                          enum:
                          - Enabled
                          - enabled
                          - Disabled
                          - disabled
                          type: string
                        trustedCaCertificateConfigMapRef:
                          description: Trusted CA certificate config map.
                          nullable: true
                          type: string
                      type: object
                  required:
                  - authentication
                  - tls
                  type: object
                localStorageSettings:
                  properties:
                    batching:
                      default:
                        latencySeconds: 60
                        maxMessages: 100000
                      description: Batching configuration. Optional;
                      properties:
                        latencySeconds:
                          default: 60
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          type: integer
                        maxMessages:
                          default: 100000
                          format: uint32
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    persistentVolumeClaimRef:
                      description: Persistent volume claim name.
                      type: string
                  required:
                  - persistentVolumeClaimRef
                  type: object
                mqttSettings:
                  properties:
                    authentication:
                      oneOf:
                      - required:
                        - systemAssignedManagedIdentitySettings
                      - required:
                        - userAssignedManagedIdentitySettings
                      - required:
                        - x509CertificateSettings
                      - required:
                        - serviceAccountTokenSettings
                      - required:
                        - anonymousSettings
                      properties:
                        anonymousSettings:
                          type: object
                        method:
                          description: Selector used to determine which of the oneOf
                            values to use.
                          enum:
                          - UserAssignedManagedIdentity
                          - SystemAssignedManagedIdentity
                          - ServiceAccountToken
                          - X509Certificate
                          - Anonymous
                          type: string
                        serviceAccountTokenSettings:
                          properties:
                            audience:
                              description: Audience of the service account. Required.
                              type: string
                          required:
                          - audience
                          type: object
                        systemAssignedManagedIdentitySettings:
                          properties:
                            audience:
                              description: Audience of the service to authenticate
                                against. Optional; the operator will attempt to infer
                                it from endpoint if not provided.
                              nullable: true
                              type: string
                          type: object
                        userAssignedManagedIdentitySettings:
                          properties:
                            clientId:
                              description: Client ID for the user-assigned managed
                                identity. Required
                              type: string
                            scope:
                              description: Scope of the resource, affixed with the
                                .default suffix. Optional; the operator will attempt
                                to infer it from endpoint if not provided.
                              nullable: true
                              type: string
                            tenantId:
                              description: Tenant ID. Required.
                              type: string
                          required:
                          - clientId
                          - tenantId
                          type: object
                        x509CertificateSettings:
                          properties:
                            secretRef:
                              description: Secret name of the X.509 certificate. Required.
                              type: string
                          required:
                          - secretRef
                          type: object
                      required:
                      - method
                      type: object
                    clientIdPrefix:
                      description: Client ID prefix. Client ID generated by the dataflow
                        is <prefix>-TBD. Optional; no prefix if omitted.
                      nullable: true
                      type: string
                    cloudEventAttributes:
                      default: Propagate
                      enum:
                      - Propagate
                      - propagate
                      - CreateOrRemap
                      - createOrRemap
                      type: string
                    host:
                      default: aio-broker:18883
                      description: Host of the MQTT broker in the form of <hostname>:<port>.
                        Optional; connects to MQ broker if omitted.
                      type: string
                    keepAliveSeconds:
                      default: 60
                      description: Broker `KeepAlive` for connection in seconds.
                      format: uint16
                      minimum: 0
                      type: integer
                    maxInflightMessages:
                      default: 100
                      description: The max number of messages to keep in flight. For
                        subscribe, this is the receive maximum. For publish, this
                        is the maximum number of messages to send before waiting for
                        an ack.
                      format: uint16
                      minimum: 0
                      type: integer
                    protocol:
                      default: Mqtt
                      description: Enable or disable websockets. Optional; defaults
                        to mqtt
                      enum:
                      - Mqtt
                      - mqtt
                      - WebSockets
                      - webSockets
                      type: string
                    qos:
                      default: 1
                      description: Qos for Broker connection.
                      format: uint8
                      maximum: 2
                      minimum: 0
                      type: integer
                    retain:
                      default: Keep
                      description: Whether or not to keep the retain setting. Optional;
                        defaults to true
                      enum:
                      - Keep
                      - keep
                      - Never
                      - never
                      type: string
                    sessionExpirySeconds:
                      default: 600
                      description: Session expiry in seconds. Optional; defaults to
                        600
                      format: uint32
                      minimum: 0
                      type: integer
                    tls:
                      default:
                        mode: Enabled
                        trustedCaCertificateConfigMapRef: null
                      description: TLS configuration. Optional; default is TLS enabled
                      properties:
                        mode:
                          default: Enabled
                          description: Mode for TLS.
                          enum:
                          - Enabled
                          - enabled
                          - Disabled
                          - disabled
                          type: string
                        trustedCaCertificateConfigMapRef:
                          description: Trusted CA certificate config map.
                          nullable: true
                          type: string
                      type: object
                  required:
                  - authentication
                  type: object
              required:
              - endpointType
              type: object
            status:
              nullable: true
              properties:
                provisioningStatus:
                  nullable: true
                  properties:
                    error:
                      nullable: true
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    failureCause:
                      nullable: true
                      type: string
                    logErrors:
                      nullable: true
                      type: boolean
                    operationId:
                      type: string
                    output:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    status:
                      type: string
                  required:
                  - operationId
                  - status
                  type: object
              type: object
          required:
          - spec
          title: DataflowEndpoint
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: DataflowEndpoint
      listKind: DataflowEndpointList
      plural: dataflowendpoints
      singular: dataflowendpoint
    conditions:
    - lastTransitionTime: "2024-12-03T01:18:52Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:18:52Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:18:52Z"
    generation: 1
    name: dataflowprofiles.connectivity.iotoperations.azure.com
    resourceVersion: "15692"
    uid: e09377cc-942c-4b7f-9ca6-303fdbde9c1a
  spec:
    conversion:
      strategy: None
    group: connectivity.iotoperations.azure.com
    names:
      kind: DataflowProfile
      listKind: DataflowProfileList
      plural: dataflowprofiles
      singular: dataflowprofile
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Validity of the configuration
        jsonPath: .status.runtimeStatus.level
        name: Config Status
        type: string
      - description: More information about current state
        jsonPath: .status.runtimeStatus.description
        name: Description
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for DataflowProfileSpec via `CustomResource`
          properties:
            spec:
              properties:
                diagnostics:
                  default:
                    logs:
                      level: info
                    metrics:
                      prometheusPort: 9600
                  description: Spec defines the desired identities of NBC diagnostics
                    settings.
                  properties:
                    logs:
                      default:
                        level: info
                      description: The log settings for the dataflow profile.
                      properties:
                        level:
                          default: info
                          description: The log level. Examples - 'debug', 'info',
                            'warn', 'error', 'trace'.
                          type: string
                      type: object
                    metrics:
                      default:
                        prometheusPort: 9600
                      description: The metrics settings for the dataflow profile.
                      properties:
                        prometheusPort:
                          default: 9600
                          description: The prometheus port to expose the metrics.
                          format: uint16
                          maximum: 65535
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                instanceCount:
                  default: 1
                  format: uint16
                  maximum: 20
                  minimum: 1
                  type: integer
              type: object
            status:
              nullable: true
              properties:
                provisioningStatus:
                  nullable: true
                  properties:
                    error:
                      nullable: true
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    failureCause:
                      nullable: true
                      type: string
                    logErrors:
                      nullable: true
                      type: boolean
                    operationId:
                      type: string
                    output:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    status:
                      type: string
                  required:
                  - operationId
                  - status
                  type: object
                runtimeStatus:
                  properties:
                    description:
                      nullable: true
                      type: string
                    level:
                      enum:
                      - ok
                      - warn
                      type: string
                  required:
                  - level
                  type: object
              required:
              - runtimeStatus
              type: object
          required:
          - spec
          title: DataflowProfile
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: DataflowProfile
      listKind: DataflowProfileList
      plural: dataflowprofiles
      singular: dataflowprofile
    conditions:
    - lastTransitionTime: "2024-12-03T01:18:52Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:18:52Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:18:52Z"
    generation: 1
    name: dataflows.connectivity.iotoperations.azure.com
    resourceVersion: "15697"
    uid: f9a88816-190d-481c-9df6-1596edc76464
  spec:
    conversion:
      strategy: None
    group: connectivity.iotoperations.azure.com
    names:
      kind: Dataflow
      listKind: DataflowList
      plural: dataflows
      singular: dataflow
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for DataflowSpec via `CustomResource`
          properties:
            spec:
              properties:
                mode:
                  default: Enabled
                  description: Mode for `DataFlow`.
                  enum:
                  - Enabled
                  - enabled
                  - Disabled
                  - disabled
                  type: string
                operations:
                  description: List of operations including source and destination
                    references as well as transformation.
                  items:
                    oneOf:
                    - required:
                      - sourceSettings
                    - required:
                      - builtInTransformationSettings
                    - required:
                      - destinationSettings
                    properties:
                      builtInTransformationSettings:
                        properties:
                          datasets:
                            default: []
                            description: Enrich data from Broker State Store. Dataset
                              references a key in Broker State Store. Optional.
                            items:
                              properties:
                                description:
                                  description: A user provided optional description
                                    of the dataset. Unused by the connector
                                  nullable: true
                                  type: string
                                expression:
                                  description: 'Condition to enrich data from Broker
                                    State Store. Example: $1 < 0 || $1 > $2 (Assuming
                                    inputs section $1 and $2 are provided)'
                                  nullable: true
                                  type: string
                                inputs:
                                  description: List of fields for enriching from the
                                    Broker State Store.
                                  items:
                                    type: string
                                  type: array
                                key:
                                  description: Dataset reference key in Broker State
                                    Store. Required
                                  type: string
                                schemaRef:
                                  description: 'The reference to the schema that describes
                                    the dataset. Allowed: JSON Schema/draft-7.'
                                  nullable: true
                                  type: string
                              required:
                              - inputs
                              - key
                              type: object
                            type: array
                          filter:
                            default: []
                            items:
                              properties:
                                description:
                                  description: A user provided optional description
                                    of the filter. Unused by the connector
                                  nullable: true
                                  type: string
                                expression:
                                  description: Condition to filter data. Can reference
                                    input fields with {n} where n is the index of
                                    the input field starting from 1. Required.
                                  type: string
                                inputs:
                                  description: List of fields for filtering in JSON
                                    path expression. Required.
                                  items:
                                    type: string
                                  type: array
                                type:
                                  description: The type of dataflow operation. Unused
                                    by the connector
                                  enum:
                                  - Filter
                                  nullable: true
                                  type: string
                              required:
                              - expression
                              - inputs
                              type: object
                            type: array
                          map:
                            default: []
                            description: Maps input to output message. Optional.
                            items:
                              properties:
                                description:
                                  description: A user provided optional description
                                    of the mapping function. Unused by the connector
                                  nullable: true
                                  type: string
                                expression:
                                  description: Modify the inputs field(s) to the final
                                    output field. Optional.
                                  nullable: true
                                  type: string
                                inputs:
                                  description: List of fields for mapping in JSON
                                    path expression. Required.
                                  items:
                                    type: string
                                  type: array
                                output:
                                  description: Where and how the input fields to be
                                    organized in the output record. Required.
                                  type: string
                                type:
                                  description: Type of transformation. Unused by the
                                    connector
                                  enum:
                                  - NewProperties
                                  - Rename
                                  - Compute
                                  - PassThrough
                                  - BuiltInFunction
                                  nullable: true
                                  type: string
                              required:
                              - inputs
                              - output
                              type: object
                            type: array
                          schemaRef:
                            description: Reference to the schema that describes the
                              output of the transformation.
                            nullable: true
                            type: string
                          serializationFormat:
                            default: Json
                            description: 'Serialization format. Optional; defaults
                              to JSON. Allowed value JSON Schema/draft-7, Parquet.
                              Default: Json'
                            enum:
                            - Delta
                            - delta
                            - Parquet
                            - parquet
                            - Json
                            - json
                            type: string
                        type: object
                      destinationSettings:
                        properties:
                          dataDestination:
                            description: Destination location, can be a topic or table
                              name. With MQTT, supports with $topic, $systemProperties,
                              $userProperties, $payload, $context, and $subscription.
                              Required.
                            type: string
                          endpointRef:
                            description: Reference to the Endpoint CR. Can be of MQTT,
                              Kafka, Fabric, ADLS, ADX type. Required.
                            type: string
                        required:
                        - dataDestination
                        - endpointRef
                        type: object
                      name:
                        description: Name of operation. Unused
                        nullable: true
                        type: string
                      operationType:
                        description: Selector used to determine which of the oneOf
                          values to use.
                        enum:
                        - Source
                        - source
                        - BuiltInTransformation
                        - builtInTransformation
                        - Destination
                        - destination
                        type: string
                      sourceSettings:
                        properties:
                          assetRef:
                            description: Reference to the resource in Azure Device
                              Registry where the data in the endpoint originates from.
                            nullable: true
                            type: string
                          dataSources:
                            description: 'List of source paths. Can be MQTT or Kafka
                              topics. Supports wildcards # and +. Required.'
                            items:
                              type: string
                            type: array
                          endpointRef:
                            description: Reference to the Endpoint CR. Can only be
                              of MQTT or Kafka type. Required.
                            type: string
                          schemaRef:
                            description: Schema CR reference. JSON and Avro schema
                              supported. Data will be deserialized according to the
                              schema, and dropped if it doesn't match. Optional; required
                              if data source isn't JSON
                            nullable: true
                            type: string
                          serializationFormat:
                            default: Json
                            description: Serialization format. Optional; defaults
                              to JSON.
                            enum:
                            - Json
                            type: string
                        required:
                        - dataSources
                        - endpointRef
                        type: object
                    required:
                    - operationType
                    type: object
                  type: array
                profileRef:
                  description: Reference to the `DataflowProfile` CR. A Kubernetes
                    `ownerReference` may be used instead, so this field is optional.
                  nullable: true
                  type: string
              required:
              - operations
              type: object
            status:
              nullable: true
              properties:
                provisioningStatus:
                  nullable: true
                  properties:
                    error:
                      nullable: true
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    failureCause:
                      nullable: true
                      type: string
                    logErrors:
                      nullable: true
                      type: boolean
                    operationId:
                      type: string
                    output:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    status:
                      type: string
                  required:
                  - operationId
                  - status
                  type: object
              type: object
          required:
          - spec
          title: Dataflow
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Dataflow
      listKind: DataflowList
      plural: dataflows
      singular: dataflow
    conditions:
    - lastTransitionTime: "2024-12-03T01:18:52Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:18:52Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.15.0
    creationTimestamp: "2024-12-03T01:17:38Z"
    generation: 1
    name: discoveredassetendpointprofiles.deviceregistry.microsoft.com
    resourceVersion: "14805"
    uid: 38d903b0-7e7d-46b2-9156-7946bf4c09c0
  spec:
    conversion:
      strategy: None
    group: deviceregistry.microsoft.com
    names:
      kind: DiscoveredAssetEndpointProfile
      listKind: DiscoveredAssetEndpointProfileList
      plural: discoveredassetendpointprofiles
      singular: discoveredassetendpointprofile
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: DiscoveredAssetEndpointProfile is the Schema for the discoveredassetendpointprofiles
            API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: DiscoveredAssetEndpointProfileSpec defines the desired
                state of DiscoveredAssetEndpointProfile
              properties:
                additionalConfiguration:
                  description: Contains connectivity type specific configuration (e.g.,
                    OPC UA, Modbus, ONVIF).
                  type: string
                discoveryId:
                  description: Unique identifier used to detect changes in the discovered
                    asset endpoint profile.
                  type: string
                endpointProfileType:
                  description: Defines the configuration for the connector type that
                    is being used with the endpoint profile.
                  type: string
                supportedAuthenticationMethods:
                  description: List of supported authentication methods supported
                    by the target server.
                  items:
                    enum:
                    - Anonymous
                    - UsernamePassword
                    - Certificate
                    type: string
                  type: array
                targetAddress:
                  description: The local valid URI specifying the network address/DNS
                    name of a southbound device. The scheme part of the targetAddress
                    URI specifies the type of the device. The additionalConfiguration
                    field holds further connector type specific configuration.
                  type: string
                version:
                  description: An integer that is incremented each time the resource
                    is modified.
                  format: int64
                  type: integer
              required:
              - discoveryId
              - endpointProfileType
              - targetAddress
              - version
              type: object
            status:
              description: DiscoveredAssetEndpointProfileStatus defines the observed
                state of DiscoveredAssetEndpointProfile
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: DiscoveredAssetEndpointProfile
      listKind: DiscoveredAssetEndpointProfileList
      plural: discoveredassetendpointprofiles
      singular: discoveredassetendpointprofile
    conditions:
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.15.0
    creationTimestamp: "2024-12-03T01:17:38Z"
    generation: 1
    name: discoveredassets.deviceregistry.microsoft.com
    resourceVersion: "14809"
    uid: 70244860-986d-4aef-8df7-7b4a2032c29b
  spec:
    conversion:
      strategy: None
    group: deviceregistry.microsoft.com
    names:
      kind: DiscoveredAsset
      listKind: DiscoveredAssetList
      plural: discoveredassets
      singular: discoveredasset
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: DiscoveredAsset is the Schema for the discoveredassets API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: DiscoveredAssetSpec defines the desired state of DiscoveredAsset
              properties:
                assetEndpointProfileRef:
                  description: A reference to the asset endpoint profile (connection
                    information) used by brokers to connect to an endpoint that provides
                    data points for this asset. Must provide asset endpoint profile
                    name.
                  type: string
                datasets:
                  description: Array of datasets that are part of the asset. Each
                    data set spec describes the data points that make up the set.
                  items:
                    properties:
                      dataPoints:
                        description: Array of data points that are part of the dataset.
                          Each data point can have per-data point configuration.
                        items:
                          properties:
                            dataPointConfiguration:
                              description: Stringified JSON that contains connector-specific
                                configuration for the data point. For OPC UA, this
                                could include configuration like, publishingInterval,
                                samplingInterval, and queueSize.
                              type: string
                            dataSource:
                              description: The address of the source of the data in
                                the discovered asset (e.g. URL) so that a client can
                                access the data source on the asset.
                              type: string
                            lastUpdatedOn:
                              description: Timestamp indicating when the data point
                                was added or modified.
                              format: date-time
                              type: string
                            name:
                              description: The name of the data point.
                              type: string
                          required:
                          - dataSource
                          type: object
                        maxItems: 1000
                        type: array
                      datasetConfiguration:
                        description: Stringified JSON that contains connector-specific
                          properties that describes configuration for the specific
                          dataset."
                        type: string
                      name:
                        description: The name of the data set.
                        type: string
                      topic:
                        description: Object that describes the topic information for
                          the specific dataset.
                        properties:
                          path:
                            description: The topic path for messages published to
                              an MQTT broker.
                            type: string
                          retain:
                            default: Never
                            description: 'When set to ''Keep'', messages published
                              to an MQTT broker will have the retain flag set. Default:
                              ''Never''.'
                            enum:
                            - Keep
                            - Never
                            type: string
                        required:
                        - path
                        type: object
                    required:
                    - name
                    type: object
                  maxItems: 1
                  type: array
                defaultDatasetsConfiguration:
                  description: Stringified JSON that contains connector-specific default
                    configuration for all datasets. Each dataset can have its own
                    configuration that overrides the default settings here.
                  type: string
                defaultEventsConfiguration:
                  description: Stringified JSON that contains connector-specific default
                    configuration for all events. Each event can have its own configuration
                    that overrides the default settings here.
                  type: string
                defaultTopic:
                  description: Object that describes the default topic information
                    for the asset
                  properties:
                    path:
                      description: The topic path for messages published to an MQTT
                        broker.
                      type: string
                    retain:
                      default: Never
                      description: 'When set to ''Keep'', messages published to an
                        MQTT broker will have the retain flag set. Default: ''Never''.'
                      enum:
                      - Keep
                      - Never
                      type: string
                  required:
                  - path
                  type: object
                discoveryId:
                  description: Unique identifier used to detect changes in the discovered
                    asset.
                  type: string
                documentationUri:
                  description: Reference to the documentation.
                  type: string
                events:
                  description: Array of events that are part of the asset. Each event
                    can have per-event configuration.
                  items:
                    properties:
                      eventConfiguration:
                        description: Stringified JSON that contains connector-specific
                          configuration for the event. For OPC UA, this could include
                          configuration like, publishingInterval, samplingInterval,
                          and queueSize.
                        type: string
                      eventNotifier:
                        description: The address of the notifier of the event in the
                          discovered asset (e.g. URL) so that a client can access
                          the event on the asset.
                        type: string
                      lastUpdatedOn:
                        description: Timestamp indicating when the event was added
                          or modified.
                        format: date-time
                        type: string
                      name:
                        description: The name of the event.
                        type: string
                      topic:
                        description: Object that describes the topic information for
                          the specific event.
                        properties:
                          path:
                            description: The topic path for messages published to
                              an MQTT broker.
                            type: string
                          retain:
                            default: Never
                            description: 'When set to ''Keep'', messages published
                              to an MQTT broker will have the retain flag set. Default:
                              ''Never''.'
                            enum:
                            - Keep
                            - Never
                            type: string
                        required:
                        - path
                        type: object
                    required:
                    - eventNotifier
                    - name
                    type: object
                  maxItems: 1000
                  type: array
                hardwareRevision:
                  description: Revision number of the hardware.
                  type: string
                manufacturer:
                  description: Asset manufacturer name.
                  type: string
                manufacturerUri:
                  description: Asset manufacturer URI.
                  type: string
                model:
                  description: Asset model name.
                  type: string
                productCode:
                  description: Asset product code.
                  type: string
                serialNumber:
                  description: Asset serial number.
                  type: string
                softwareRevision:
                  description: Revision number of the software.
                  type: string
                version:
                  description: An integer that is incremented each time the resource
                    is modified.
                  format: int64
                  type: integer
              required:
              - assetEndpointProfileRef
              - discoveryId
              - version
              type: object
            status:
              description: DiscoveredAssetStatus defines the observed state of DiscoveredAsset
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: DiscoveredAsset
      listKind: DiscoveredAssetList
      plural: discoveredassets
      singular: discoveredasset
    conditions:
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:17:38Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:11:09Z"
    generation: 1
    labels:
      generation: "1"
    name: edgeingestpolicies.arccontainerstorage.azure.net
    resourceVersion: "10614"
    uid: 0c0de601-8ceb-4f6c-b831-5e6ce9ba09c2
  spec:
    conversion:
      strategy: None
    group: arccontainerstorage.azure.net
    names:
      categories:
      - edgepolicies
      - eip
      kind: EdgeIngestPolicy
      listKind: EdgeIngestPolicyList
      plural: edgeingestpolicies
      shortNames:
      - eips
      singular: edgeingestpolicy
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: Status
        type: string
      - jsonPath: .status.details
        name: StatusDetails
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  type: string
              type: object
            spec:
              properties:
                eviction:
                  properties:
                    minDelaySec:
                      default: 300
                      description: The number of seconds before a clean file is eligible
                        for eviction
                      maximum: 31536000
                      minimum: 0
                      type: integer
                    order:
                      default: unordered
                      description: The order in which clean files will be evicted
                        - this is best effort, not a guarantee
                      enum:
                      - never
                      - unordered
                      type: string
                  type: object
                ingest:
                  properties:
                    minDelaySec:
                      default: 60
                      description: The minimum number of seconds before a dirty file
                        is eligible for ingest
                      maximum: 31536000
                      minimum: 0
                      type: integer
                    order:
                      default: oldest-first
                      description: The order in which dirty files will be uploaded
                        - this is best effort, not a guarantee
                      enum:
                      - oldest-first
                      - newest-first
                      type: string
                  type: object
              type: object
            status:
              properties:
                details:
                  type: string
                state:
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - edgepolicies
      - eip
      kind: EdgeIngestPolicy
      listKind: EdgeIngestPolicyList
      plural: edgeingestpolicies
      shortNames:
      - eips
      singular: edgeingestpolicy
    conditions:
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      management.azure.com/api-version: 2024-01-01-preview
      management.azure.com/providerName: Microsoft.ArcContainerStorage
      management.azure.com/resourceType: edgestorageconfigurations
    creationTimestamp: "2024-12-03T01:11:09Z"
    generation: 1
    labels:
      generation: "1"
    name: edgestorageconfigurations.arccontainerstorage.azure.net
    resourceVersion: "10617"
    uid: 25869593-4178-40ab-8d8d-cb50650f3506
  spec:
    conversion:
      strategy: None
    group: arccontainerstorage.azure.net
    names:
      categories:
      - apps
      kind: EdgeStorageConfiguration
      listKind: EdgeStorageConfigurationList
      plural: edgestorageconfigurations
      shortNames:
      - edgestorageconfig
      - edgestorageconfigs
      singular: edgestorageconfiguration
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.defaultDiskStorageClasses
        name: DefaultDiskStorageClasses
        type: string
      - jsonPath: .spec.workloadIdentity.clientID
        name: WorkloadIdentity
        type: string
      - jsonPath: .status.state
        name: Status
        type: string
      - jsonPath: .status.details
        name: StatusDetails
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  type: string
                  x-kubernetes-validations:
                  - message: name must match the singleton "edge-storage-configuration"
                    rule: self == "edge-storage-configuration"
              type: object
            spec:
              properties:
                defaultDiskStorageClasses:
                  description: The default storage class(es) that will be used for
                    edge volumes
                  items:
                    type: string
                  type: array
                  x-kubernetes-validations:
                  - message: defaultDiskStorageClasses cannot be an empty array
                    rule: self.size() > 0
                  - message: defaultDiskStorageClasses is immutable
                    rule: self == oldSelf
                  - message: storage class names cannot exceed 253 characters
                    rule: '!self.exists(s, s.size() > 253)'
                failoverEdgeVolumeConsumers:
                  default: true
                  description: Automatically failover edge volume consumers
                  type: boolean
                serviceMesh:
                  default: osm
                  description: Which service mesh to use
                  enum:
                  - osm
                  - none
                  type: string
                workloadIdentity:
                  properties:
                    clientID:
                      format: uuid
                      type: string
                    tenantID:
                      format: uuid
                      type: string
                  type: object
              required:
              - defaultDiskStorageClasses
              type: object
            status:
              properties:
                details:
                  type: string
                state:
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - apps
      kind: EdgeStorageConfiguration
      listKind: EdgeStorageConfigurationList
      plural: edgestorageconfigurations
      shortNames:
      - edgestorageconfig
      - edgestorageconfigs
      singular: edgestorageconfiguration
    conditions:
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:11:09Z"
    generation: 1
    labels:
      generation: "6"
    name: edgesubvolumes.arccontainerstorage.azure.net
    resourceVersion: "10621"
    uid: fcb5f159-01c2-4448-8f8b-302a4dab49f6
  spec:
    conversion:
      strategy: None
    group: arccontainerstorage.azure.net
    names:
      categories:
      - apps
      kind: EdgeSubvolume
      listKind: EdgeSubvolumeList
      plural: edgesubvolumes
      shortNames:
      - esvs
      singular: edgesubvolume
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: Status
        type: string
      - jsonPath: .status.lastConfigError
        name: LastConfigError
        type: string
      - jsonPath: .status.edgeVolumeRef
        name: EdgeVolumeRef
        type: string
      - jsonPath: .status.numberFilesLeftToUpload
        name: NumberFilesLeftToUpload
        type: integer
      - jsonPath: .status.backendConnectionStatus
        name: BackendConnection
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  type: string
              type: object
            spec:
              properties:
                auth:
                  properties:
                    authType:
                      enum:
                      - SAS
                      - KEY
                      - CONNECTION_STRING
                      - WORKLOAD_IDENTITY
                      - MANAGED_IDENTITY
                      type: string
                    secretName:
                      description: Name of the secret containing the credentials
                      type: string
                    secretNamespace:
                      description: Namespace of the secret containing the credentials
                      type: string
                  type: object
                  x-kubernetes-validations:
                  - message: Secret name and namespace must be provided for some authentication
                      types
                    rule: '!(self.authType in [''SAS'', ''KEY'', ''CONNECTION_STRING''])
                      || (has(self.secretName) && has(self.secretNamespace))'
                authSys:
                  description: Optional, owning uid/gid of the subvolume.
                  properties:
                    gid:
                      default: 4294967294
                      description: GID
                      maximum: 4294967294
                      minimum: 1
                      type: integer
                    uid:
                      default: 4294967294
                      description: UID
                      maximum: 4294967294
                      minimum: 1
                      type: integer
                  type: object
                container:
                  description: Blob container
                  minLength: 3
                  type: string
                edgevolume:
                  description: Name of the EdgeVolume
                  maxLength: 255
                  minLength: 1
                  type: string
                ingestPolicy:
                  default: edgeingestpolicy-default
                  description: EdgeIngestPolicy used by this subvolume
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-zA-Z0-9][a-zA-Z0-9-\.]+[a-zA-Z0-9]$
                  type: string
                path:
                  description: Top level path for this cloud sync configuration
                  maxLength: 255
                  minLength: 1
                  pattern: ^/?[a-zA-Z0-9-\._]*$
                  type: string
                storageaccountendpoint:
                  description: 'Blob storage endpoint, for ex: https://mysa.core.windows.net'
                  maxLength: 1024
                  minLength: 3
                  type: string
              required:
              - edgevolume
              - path
              - ingestPolicy
              type: object
              x-kubernetes-validations:
              - message: Storage account, container and authentication are required
                rule: (self.path == '/' || has(self.auth)) && (!has(self.auth) ||
                  (has(self.storageaccountendpoint) && has(self.container)))
            status:
              default: {}
              properties:
                backendConnection:
                  type: string
                edgeVolumeRef:
                  type: string
                fileErrors:
                  items:
                    properties:
                      error:
                        type: string
                      export:
                        type: integer
                      fileName:
                        type: string
                      lastSeen:
                        type: string
                    type: object
                  type: array
                lastConfigError:
                  type: string
                numberFilesLeftToUpload:
                  type: integer
                requestedSyncSubvolume:
                  type: string
                state:
                  default: unknown
                  type: string
                totalFileErrors:
                  type: integer
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - apps
      kind: EdgeSubvolume
      listKind: EdgeSubvolumeList
      plural: edgesubvolumes
      shortNames:
      - esvs
      singular: edgesubvolume
    conditions:
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:11:09Z"
    generation: 1
    labels:
      generation: "3"
    name: edgevolumes.arccontainerstorage.azure.net
    resourceVersion: "10624"
    uid: 0afb7193-9d54-4a3b-a082-80f166619e00
  spec:
    conversion:
      strategy: None
    group: arccontainerstorage.azure.net
    names:
      categories:
      - apps
      kind: EdgeVolume
      listKind: EdgeVolumeList
      plural: edgevolumes
      shortNames:
      - evs
      singular: edgevolume
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: Status
        type: string
      - jsonPath: .status.details
        name: StatusDetails
        type: string
      - jsonPath: .status.spaceAvailable
        name: SpaceAvailable
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  type: string
              type: object
            spec:
              properties:
                ingestOperationConcurrency:
                  description: Weight of concurrency for ingest operations
                  maximum: 256
                  minimum: 1
                  type: integer
                requestedSize:
                  description: 'Size of the EdgeVolume (example: 1Gi)'
                  type: string
                  x-kubernetes-validations:
                  - message: requestedSize is immutable once set
                    rule: self == oldSelf
                  - message: requestedSize must be a valid storage size
                    rule: self.matches("^[0-9][0-9]*([.][0-9]+)?[KMGTP]i?$")
              required:
              - requestedSize
              type: object
            status:
              default: {}
              properties:
                details:
                  type: string
                persistentVolume:
                  type: string
                spaceAvailable:
                  type: string
                state:
                  default: unknown
                  type: string
                subvolumesWithErrors:
                  items:
                    type: string
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - apps
      kind: EdgeVolume
      listKind: EdgeVolumeList
      plural: edgevolumes
      shortNames:
      - evs
      singular: edgevolume
    conditions:
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"egresses.policy.openservicemesh.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"policy.openservicemesh.io","names":{"plural":"egresses","singular":"egress","shortNames":["egress"],"kind":"Egress","listKind":"EgressList"},"scope":"Namespaced","versions":[{"name":"v1alpha1","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["sources","ports"],"properties":{"hosts":{"description":"Hosts that the sources are allowed to direct external traffic to.","type":"array","items":{"type":"string"}},"ipAddresses":{"description":"IP address ranges that the sources are allowed to direct external traffic to.","type":"array","items":{"type":"string","pattern":"((?:\\d{1,3}\\.){3}\\d{1,3})\\/(\\d{1,2})$"}},"matches":{"description":"The resource references an Egress policy should match on.","type":"array","items":{"type":"object","required":["apiGroup","kind","name"],"properties":{"apiGroup":{"description":"API group for the resource being referenced.","type":"string"},"kind":{"description":"Type of resource being referenced.","type":"string"},"name":{"description":"Name of resource being referenced.","type":"string"}}}},"ports":{"description":"Ports that the sources are allowed to direct external traffic to.","type":"array","items":{"type":"object","required":["number","protocol"],"properties":{"number":{"description":"Port number of this port.","type":"integer","maximum":65535,"minimum":1},"protocol":{"description":"Protocol served by this port.","type":"string"}}}},"sources":{"description":"Sources the egress policy is applicable to.","type":"array","items":{"type":"object","required":["kind","name","namespace"],"properties":{"kind":{"description":"Kind of this source.","type":"string","enum":["ServiceAccount"]},"name":{"description":"Name of this source.","type":"string"},"namespace":{"description":"Namespace of this source.","type":"string"}}}}}}}}}}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:21Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: egresses.policy.openservicemesh.io
    resourceVersion: "9213"
    uid: 68ae1285-2bbd-47d3-a0fb-9c4f6ef909e3
  spec:
    conversion:
      strategy: None
    group: policy.openservicemesh.io
    names:
      kind: Egress
      listKind: EgressList
      plural: egresses
      shortNames:
      - egress
      singular: egress
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                hosts:
                  description: Hosts that the sources are allowed to direct external
                    traffic to.
                  items:
                    type: string
                  type: array
                ipAddresses:
                  description: IP address ranges that the sources are allowed to direct
                    external traffic to.
                  items:
                    pattern: ((?:\d{1,3}\.){3}\d{1,3})\/(\d{1,2})$
                    type: string
                  type: array
                matches:
                  description: The resource references an Egress policy should match
                    on.
                  items:
                    properties:
                      apiGroup:
                        description: API group for the resource being referenced.
                        type: string
                      kind:
                        description: Type of resource being referenced.
                        type: string
                      name:
                        description: Name of resource being referenced.
                        type: string
                    required:
                    - apiGroup
                    - kind
                    - name
                    type: object
                  type: array
                ports:
                  description: Ports that the sources are allowed to direct external
                    traffic to.
                  items:
                    properties:
                      number:
                        description: Port number of this port.
                        maximum: 65535
                        minimum: 1
                        type: integer
                      protocol:
                        description: Protocol served by this port.
                        type: string
                    required:
                    - number
                    - protocol
                    type: object
                  type: array
                sources:
                  description: Sources the egress policy is applicable to.
                  items:
                    properties:
                      kind:
                        description: Kind of this source.
                        enum:
                        - ServiceAccount
                        type: string
                      name:
                        description: Name of this source.
                        type: string
                      namespace:
                        description: Namespace of this source.
                        type: string
                    required:
                    - kind
                    - name
                    - namespace
                    type: object
                  type: array
              required:
              - sources
              - ports
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Egress
      listKind: EgressList
      plural: egresses
      shortNames:
      - egress
      singular: egress
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"expansiontemplate.expansion.gatekeeper.sh"},"spec":{"group":"expansion.gatekeeper.sh","names":{"kind":"ExpansionTemplate","listKind":"ExpansionTemplateList","plural":"expansiontemplate","singular":"expansiontemplate"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"ExpansionTemplate is the Schema for the ExpansionTemplate API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"properties":{"name":{"maxLength":63,"type":"string"}},"type":"object"},"spec":{"description":"ExpansionTemplateSpec defines the desired state of ExpansionTemplate.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds of generator resources\nwhich will be expanded.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"enforcementAction":{"description":"EnforcementAction specifies the enforcement action to be used for resources\nmatching the ExpansionTemplate. Specifying an empty value will use the\nenforcement action specified by the Constraint in violation.","type":"string"},"generatedGVK":{"description":"GeneratedGVK specifies the GVK of the resources which the generator\nresource creates.","properties":{"group":{"type":"string"},"kind":{"type":"string"},"version":{"type":"string"}},"type":"object"},"templateSource":{"description":"TemplateSource specifies the source field on the generator resource to\nuse as the base for expanded resource. For Pod-creating generators, this\nis usually spec.template","type":"string"}},"type":"object"},"status":{"description":"ExpansionTemplateStatus defines the observed state of ExpansionTemplate.","properties":{"byPod":{"items":{"description":"ExpansionTemplatePodStatusStatus defines the observed state of ExpansionTemplatePodStatus.","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"description":"Important: Run \"make\" to regenerate code after modifying this file","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"},"templateUID":{"description":"UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.","type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"ExpansionTemplate is the Schema for the ExpansionTemplate API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ExpansionTemplateSpec defines the desired state of ExpansionTemplate.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds of generator resources\nwhich will be expanded.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"enforcementAction":{"description":"EnforcementAction specifies the enforcement action to be used for resources\nmatching the ExpansionTemplate. Specifying an empty value will use the\nenforcement action specified by the Constraint in violation.","type":"string"},"generatedGVK":{"description":"GeneratedGVK specifies the GVK of the resources which the generator\nresource creates.","properties":{"group":{"type":"string"},"kind":{"type":"string"},"version":{"type":"string"}},"type":"object"},"templateSource":{"description":"TemplateSource specifies the source field on the generator resource to\nuse as the base for expanded resource. For Pod-creating generators, this\nis usually spec.template","type":"string"}},"type":"object"},"status":{"description":"ExpansionTemplateStatus defines the observed state of ExpansionTemplate.","properties":{"byPod":{"items":{"description":"ExpansionTemplatePodStatusStatus defines the observed state of ExpansionTemplatePodStatus.","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"description":"Important: Run \"make\" to regenerate code after modifying this file","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"},"templateUID":{"description":"UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.","type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: expansiontemplate.expansion.gatekeeper.sh
    resourceVersion: "4793"
    uid: 4e933bb6-5a01-4eb6-8f70-62d36fa9a142
  spec:
    conversion:
      strategy: None
    group: expansion.gatekeeper.sh
    names:
      kind: ExpansionTemplate
      listKind: ExpansionTemplateList
      plural: expansiontemplate
      singular: expansiontemplate
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ExpansionTemplate is the Schema for the ExpansionTemplate API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              description: ExpansionTemplateSpec defines the desired state of ExpansionTemplate.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds of generator resources
                    which will be expanded.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                enforcementAction:
                  description: |-
                    EnforcementAction specifies the enforcement action to be used for resources
                    matching the ExpansionTemplate. Specifying an empty value will use the
                    enforcement action specified by the Constraint in violation.
                  type: string
                generatedGVK:
                  description: |-
                    GeneratedGVK specifies the GVK of the resources which the generator
                    resource creates.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    version:
                      type: string
                  type: object
                templateSource:
                  description: |-
                    TemplateSource specifies the source field on the generator resource to
                    use as the base for expanded resource. For Pod-creating generators, this
                    is usually spec.template
                  type: string
              type: object
            status:
              description: ExpansionTemplateStatus defines the observed state of ExpansionTemplate.
              properties:
                byPod:
                  items:
                    description: ExpansionTemplatePodStatusStatus defines the observed
                      state of ExpansionTemplatePodStatus.
                    properties:
                      errors:
                        items:
                          properties:
                            message:
                              type: string
                            type:
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        description: 'Important: Run "make" to regenerate code after
                          modifying this file'
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                      templateUID:
                        description: |-
                          UID is a type that holds unique ID values, including UUIDs.  Because we
                          don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                          intent and helps make sure that UIDs and names do not get conflated.
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ExpansionTemplate is the Schema for the ExpansionTemplate API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ExpansionTemplateSpec defines the desired state of ExpansionTemplate.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds of generator resources
                    which will be expanded.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                enforcementAction:
                  description: |-
                    EnforcementAction specifies the enforcement action to be used for resources
                    matching the ExpansionTemplate. Specifying an empty value will use the
                    enforcement action specified by the Constraint in violation.
                  type: string
                generatedGVK:
                  description: |-
                    GeneratedGVK specifies the GVK of the resources which the generator
                    resource creates.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    version:
                      type: string
                  type: object
                templateSource:
                  description: |-
                    TemplateSource specifies the source field on the generator resource to
                    use as the base for expanded resource. For Pod-creating generators, this
                    is usually spec.template
                  type: string
              type: object
            status:
              description: ExpansionTemplateStatus defines the observed state of ExpansionTemplate.
              properties:
                byPod:
                  items:
                    description: ExpansionTemplatePodStatusStatus defines the observed
                      state of ExpansionTemplatePodStatus.
                    properties:
                      errors:
                        items:
                          properties:
                            message:
                              type: string
                            type:
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        description: 'Important: Run "make" to regenerate code after
                          modifying this file'
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                      templateUID:
                        description: |-
                          UID is a type that holds unique ID values, including UUIDs.  Because we
                          don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                          intent and helps make sure that UIDs and names do not get conflated.
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ExpansionTemplate
      listKind: ExpansionTemplateList
      plural: expansiontemplate
      singular: expansiontemplate
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"expansiontemplatepodstatuses.status.gatekeeper.sh"},"spec":{"group":"status.gatekeeper.sh","names":{"kind":"ExpansionTemplatePodStatus","listKind":"ExpansionTemplatePodStatusList","plural":"expansiontemplatepodstatuses","singular":"expansiontemplatepodstatus"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"ExpansionTemplatePodStatus is the Schema for the expansiontemplatepodstatuses API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"status":{"description":"ExpansionTemplatePodStatusStatus defines the observed state of ExpansionTemplatePodStatus.","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"description":"Important: Run \"make\" to regenerate code after modifying this file","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"},"templateUID":{"description":"UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: expansiontemplatepodstatuses.status.gatekeeper.sh
    resourceVersion: "4795"
    uid: fd2cb402-69f1-4ec7-9fcb-e7f9e2949a67
  spec:
    conversion:
      strategy: None
    group: status.gatekeeper.sh
    names:
      kind: ExpansionTemplatePodStatus
      listKind: ExpansionTemplatePodStatusList
      plural: expansiontemplatepodstatuses
      singular: expansiontemplatepodstatus
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ExpansionTemplatePodStatus is the Schema for the expansiontemplatepodstatuses
            API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            status:
              description: ExpansionTemplatePodStatusStatus defines the observed state
                of ExpansionTemplatePodStatus.
              properties:
                errors:
                  items:
                    properties:
                      message:
                        type: string
                      type:
                        type: string
                    required:
                    - message
                    type: object
                  type: array
                id:
                  description: 'Important: Run "make" to regenerate code after modifying
                    this file'
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                operations:
                  items:
                    type: string
                  type: array
                templateUID:
                  description: |-
                    UID is a type that holds unique ID values, including UUIDs.  Because we
                    don't ONLY use UUIDs, this is an alias to string.  Being a type captures
                    intent and helps make sure that UIDs and names do not get conflated.
                  type: string
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ExpansionTemplatePodStatus
      listKind: ExpansionTemplatePodStatusList
      plural: expansiontemplatepodstatuses
      singular: expansiontemplatepodstatus
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: extensionconfigs.clusterconfig.azure.com
    resourceVersion: "5003"
    uid: 0f65d464-a271-4522-b698-c45b1022ed82
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: ExtensionConfig
      listKind: ExtensionConfigList
      plural: extensionconfigs
      shortNames:
      - ec
      singular: extensionconfig
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Extension Type
        jsonPath: .spec.extensionType
        name: Type
        type: string
      - description: Extension Version
        jsonPath: .spec.version
        name: Version
        type: string
      - description: Extension Creation Time
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ExtensionConfig is the Schema for the extensionconfigs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ExtensionConfigSpec defines the desired state of ExtensionConfig
              properties:
                autoUpgradeMinorVersion:
                  type: boolean
                correlationId:
                  type: string
                customResourceTemplates:
                  items:
                    type: string
                  type: array
                eventOperationId:
                  type: string
                extensionRegistrationTime:
                  format: int64
                  type: integer
                extensionType:
                  type: string
                lastModifiedTime:
                  format: date-time
                  type: string
                operationId:
                  type: string
                operationTriggerType:
                  type: string
                parameter:
                  additionalProperties:
                    type: string
                  type: object
                protectedParameters:
                  properties:
                    referenceName:
                      type: string
                    version:
                      type: string
                  type: object
                reconcilerIntervalInSeconds:
                  type: integer
                releaseTrain:
                  type: string
                repoUrl:
                  type: string
                softDelete:
                  type: boolean
                version:
                  type: string
              type: object
            status:
              description: ExtensionConfigStatus defines the observed state of ExtensionConfig
              properties:
                configAppliedTime:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  type: string
                helmReleaseStatus:
                  properties:
                    lastReleaseStatus:
                      type: string
                    lastReleaseUpdatedTime:
                      type: string
                    lastReleaseVersion:
                      type: string
                    operationTriggerType:
                      type: string
                  type: object
                lastSuccessfulReconciledTime:
                  type: string
                message:
                  type: string
                observedEventOperationId:
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                observedOperationId:
                  type: string
                operatorPropertiesHashed:
                  type: string
                reconciliationError:
                  type: string
                status:
                  type: string
                syncStatus:
                  properties:
                    isSyncedWithAzure:
                      type: boolean
                    lastSyncTime:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ExtensionConfig
      listKind: ExtensionConfigList
      plural: extensionconfigs
      shortNames:
      - ec
      singular: extensionconfig
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.15.0
      meta.helm.sh/release-name: microsoft.extensiondiagnostics-v0
      meta.helm.sh/release-namespace: azure-arc
    creationTimestamp: "2024-12-03T01:09:11Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: microsoft.extensiondiagnostics-v0
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: diagnostics-operator
      app.kubernetes.io/version: 0.106.1-preview
      helm.sh/chart: diagnostics-operator-0.106.1-preview
    name: extensiondiagnosticssinks.azuremonitor.microsoft.com
    resourceVersion: "9619"
    uid: b6152b33-e449-4102-a804-9bde63885069
  spec:
    conversion:
      strategy: None
    group: azuremonitor.microsoft.com
    names:
      kind: ExtensionDiagnosticsSink
      listKind: ExtensionDiagnosticsSinkList
      plural: extensiondiagnosticssinks
      singular: extensiondiagnosticssink
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ExtensionDiagnosticsSink is the Schema for the ExtensionDiagnosticsSink
            API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ExtensionDiagnosticsSinkSpec defines the desired state
                of ExtensionDiagnosticsSink
              properties:
                apiVersion:
                  description: |-
                    APIVersion defines the versioned schema of this representation of an object.
                    Servers should convert recognized schemas to the latest internal value, and
                    may reject unrecognized values.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                  type: string
                kind:
                  description: |-
                    Kind is a string value representing the REST resource this object represents.
                    Servers may infer this from the endpoint the client submits requests to.
                    Cannot be updated.
                    In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                tenantConfig:
                  properties:
                    genevaConfigVersion:
                      type: string
                    logsAccount:
                      type: string
                    logsEnvironment:
                      type: string
                    logsNamespace:
                      type: string
                    metricsAccount:
                      type: string
                    metricsNamespace:
                      type: string
                    resourceId:
                      type: string
                  required:
                  - genevaConfigVersion
                  - logsAccount
                  - logsEnvironment
                  - logsNamespace
                  - metricsAccount
                  - metricsNamespace
                  - resourceId
                  type: object
                version:
                  type: string
              required:
              - tenantConfig
              - version
              type: object
            status:
              description: ExtensionDiagnosticsSinkStatus defines the observed state
                of ExtensionDiagnosticsSink
              properties:
                extensionProperties:
                  additionalProperties:
                    type: string
                  type: object
                lastDeployed:
                  format: date-time
                  type: string
                state:
                  description: Arc contract items
                  type: string
              required:
              - extensionProperties
              - state
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ExtensionDiagnosticsSink
      listKind: ExtensionDiagnosticsSinkList
      plural: extensiondiagnosticssinks
      singular: extensiondiagnosticssink
    conditions:
    - lastTransitionTime: "2024-12-03T01:09:11Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:09:11Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.2
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: extensionevents.clusterconfig.azure.com
    resourceVersion: "5033"
    uid: bc777ff1-d7b1-4333-8632-cdbd4c37506e
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: ExtensionEvents
      listKind: ExtensionEventsList
      plural: extensionevents
      singular: extensionevents
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: ExtensionEvents is the Schema for the extensionevents API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ExtensionEventsSpec defines the desired state of ExtensionEvents
              properties:
                armOperationId:
                  type: string
                endTime:
                  format: date-time
                  type: string
                extensionEvents:
                  items:
                    properties:
                      eventTime:
                        format: date-time
                        type: string
                      innerError:
                        type: string
                      logType:
                        type: string
                      message:
                        type: string
                      source:
                        type: string
                      troubleshootLink:
                        type: string
                    required:
                    - logType
                    - message
                    type: object
                  type: array
                extensionName:
                  type: string
                extensionType:
                  type: string
                extensionVersion:
                  type: string
                operationId:
                  type: string
                operationName:
                  type: string
                operationStatus:
                  type: string
                startTime:
                  format: date-time
                  type: string
                timeoutTime:
                  format: date-time
                  type: string
              type: object
            status:
              description: ExtensionEventsStatus defines the observed state of ExtensionEvents
              properties:
                observedGeneration:
                  format: int64
                  type: integer
                retryCount:
                  format: int64
                  type: integer
                syncTime:
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ExtensionEvents
      listKind: ExtensionEventsList
      plural: extensionevents
      singular: extensionevents
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: gitconfigs.clusterconfig.azure.com
    resourceVersion: "5035"
    uid: 29f4d662-4ae6-4785-8aa0-c0d88df43dda
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: GitConfig
      listKind: GitConfigList
      plural: gitconfigs
      singular: gitconfig
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: GitConfig is the Schema for the gitconfigs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitConfigSpec defines the desired state of GitConfig
              properties:
                correlationId:
                  type: string
                deleteOperator:
                  type: boolean
                enableHelmOperator:
                  type: boolean
                giturl:
                  type: string
                helmOperatorProperties:
                  properties:
                    chartName:
                      type: string
                    chartValues:
                      type: string
                    chartVersion:
                      type: string
                    repoUrl:
                      type: string
                  type: object
                operatorClientLocation:
                  type: string
                operatorInstanceName:
                  type: string
                operatorParams:
                  type: string
                operatorScope:
                  type: string
                operatorType:
                  type: string
                protectedParameters:
                  properties:
                    referenceName:
                      type: string
                    version:
                      type: string
                  required:
                  - referenceName
                  - version
                  type: object
                sshKnownHostsContents:
                  type: string
              required:
              - giturl
              - operatorClientLocation
              - operatorParams
              - operatorType
              - operatorScope
              - operatorInstanceName
              - enableHelmOperator
              type: object
            status:
              description: GitConfigStatus defines the observed state of GitConfig
              properties:
                configAppliedTime:
                  type: string
                errorsInTheLastSynced:
                  type: string
                isSyncedWithAzure:
                  type: boolean
                lastGitCommitInformation:
                  type: string
                lastPolledStatusTime:
                  type: string
                message:
                  type: string
                mostRecentEventsFromFlux:
                  items:
                    type: string
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                proxyConfigHash:
                  type: string
                publicKey:
                  type: string
                retryCountPublicKey:
                  type: integer
                status:
                  type: string
              required:
              - configAppliedTime
              - lastPolledStatusTime
              - message
              - proxyConfigHash
              - publicKey
              - status
              - isSyncedWithAzure
              - retryCountPublicKey
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: GitConfig
      listKind: GitConfigList
      plural: gitconfigs
      singular: gitconfig
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: healthstates.clusterconfig.azure.com
    resourceVersion: "5009"
    uid: 5192f801-403c-4720-8cb8-00ca0aab1c18
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: HealthState
      listKind: HealthStateList
      plural: healthstates
      singular: healthstate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: HealthState is the Schema for the healthstates API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HealthStateSpec defines the desired state of HealthState
              properties:
                healthStateObjects:
                  description: HealthStateObjects is the list of HealthState objects
                    which contains state of the resource to be verified
                  items:
                    properties:
                      errorCodeForFailure:
                        description: ErrorCodeForFailure is the error metric to be
                          emitted if resource is not present
                        type: string
                      id:
                        description: 'Id is the full ARM Resource Id of the parent
                          resource (eg: Custom Location) that this object belongs
                          to.'
                        type: string
                      location:
                        description: 'Location is the location of the parent resource
                          (eg: Custom Location)'
                        type: string
                      name:
                        description: Name is the name of the resource that we need
                          to verify
                        type: string
                      namespace:
                        description: Namespace is the namespace that the resource
                          is present in
                        type: string
                      type:
                        description: Type is the type of the resource that we need
                          to verify
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: HealthStateStatus defines the observed state of HealthState
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: HealthState
      listKind: HealthStateList
      plural: healthstates
      singular: healthstate
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"httproutegroups.specs.smi-spec.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"specs.smi-spec.io","names":{"plural":"httproutegroups","singular":"httproutegroup","shortNames":["htr"],"kind":"HTTPRouteGroup"},"scope":"Namespaced","versions":[{"name":"v1alpha4","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["matches"],"properties":{"matches":{"description":"Match conditions of this route group.","type":"array","items":{"type":"object","required":["name"],"properties":{"headers":{"description":"Header match conditions of this route.","type":"array","items":{"description":"Header match condition of this route.","type":"object","additionalProperties":{"type":"string"}}},"methods":{"description":"The HTTP methods of this HTTP route.","type":"array","items":{"description":"The HTTP method of this HTTP route.","type":"string","enum":["*","GET","HEAD","PUT","POST","DELETE","CONNECT","OPTIONS","TRACE","PATCH"]}},"name":{"description":"Name of the HTTP route.","type":"string"},"pathRegex":{"description":"URI path regex of the HTTP route.","type":"string"}}}}}}}}}},{"name":"v1alpha3","served":false,"storage":false,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["matches"],"properties":{"matches":{"description":"Match conditions of this route group.","type":"array","items":{"type":"object","required":["name"],"properties":{"headers":{"description":"Header match conditions of this route.","type":"array","items":{"description":"Header match condition of this route.","type":"object","additionalProperties":{"type":"string"}}},"methods":{"description":"The HTTP methods of this HTTP route.","type":"array","items":{"description":"The HTTP method of this HTTP route.","type":"string","enum":["*","GET","HEAD","PUT","POST","DELETE","CONNECT","OPTIONS","TRACE","PATCH"]}},"name":{"description":"Name of the HTTP route.","type":"string"},"pathRegex":{"description":"URI path regex of the HTTP route.","type":"string"}}}}}}}}}},{"name":"v1alpha2","served":false,"storage":false,"schema":{"openAPIV3Schema":{"type":"object","required":["matches"],"properties":{"matches":{"description":"Match conditions of this route group.","type":"array","items":{"type":"object","required":["name"],"properties":{"headers":{"description":"Header match conditions of this route.","type":"array","items":{"description":"Header match condition of this route.","type":"object","additionalProperties":{"type":"string"}}},"methods":{"description":"The HTTP methods of this HTTP route.","type":"array","items":{"description":"The HTTP method of this HTTP route.","type":"string","enum":["*","GET","HEAD","PUT","POST","DELETE","CONNECT","OPTIONS","TRACE","PATCH"]}},"name":{"description":"Name of the HTTP route.","type":"string"},"pathRegex":{"description":"URI path regex of the HTTP route.","type":"string"}}}}}}}},{"name":"v1alpha1","served":false,"storage":false,"schema":{"openAPIV3Schema":{"type":"object","required":["matches"],"properties":{"matches":{"description":"Match conditions of this route group.","type":"array","items":{"type":"object","required":["name"],"properties":{"headers":{"description":"Header match conditions of this route.","type":"array","items":{"description":"Header match condition of this route.","type":"object","additionalProperties":{"type":"string"}}},"methods":{"description":"The HTTP methods of this HTTP route.","type":"array","items":{"description":"The HTTP method of this HTTP route.","type":"string","enum":["*","GET","HEAD","PUT","POST","DELETE","CONNECT","OPTIONS","TRACE","PATCH"]}},"name":{"description":"Name of the HTTP route.","type":"string"},"pathRegex":{"description":"URI path regex of the HTTP route.","type":"string"}}}}}}}}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:22Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: httproutegroups.specs.smi-spec.io
    resourceVersion: "9232"
    uid: 1f7e58b3-1289-41e2-a69a-abc97dee855e
  spec:
    conversion:
      strategy: None
    group: specs.smi-spec.io
    names:
      kind: HTTPRouteGroup
      listKind: HTTPRouteGroupList
      plural: httproutegroups
      shortNames:
      - htr
      singular: httproutegroup
    scope: Namespaced
    versions:
    - name: v1alpha4
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                matches:
                  description: Match conditions of this route group.
                  items:
                    properties:
                      headers:
                        description: Header match conditions of this route.
                        items:
                          additionalProperties:
                            type: string
                          description: Header match condition of this route.
                          type: object
                        type: array
                      methods:
                        description: The HTTP methods of this HTTP route.
                        items:
                          description: The HTTP method of this HTTP route.
                          enum:
                          - '*'
                          - GET
                          - HEAD
                          - PUT
                          - POST
                          - DELETE
                          - CONNECT
                          - OPTIONS
                          - TRACE
                          - PATCH
                          type: string
                        type: array
                      name:
                        description: Name of the HTTP route.
                        type: string
                      pathRegex:
                        description: URI path regex of the HTTP route.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              required:
              - matches
              type: object
          type: object
      served: true
      storage: true
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                matches:
                  description: Match conditions of this route group.
                  items:
                    properties:
                      headers:
                        description: Header match conditions of this route.
                        items:
                          additionalProperties:
                            type: string
                          description: Header match condition of this route.
                          type: object
                        type: array
                      methods:
                        description: The HTTP methods of this HTTP route.
                        items:
                          description: The HTTP method of this HTTP route.
                          enum:
                          - '*'
                          - GET
                          - HEAD
                          - PUT
                          - POST
                          - DELETE
                          - CONNECT
                          - OPTIONS
                          - TRACE
                          - PATCH
                          type: string
                        type: array
                      name:
                        description: Name of the HTTP route.
                        type: string
                      pathRegex:
                        description: URI path regex of the HTTP route.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              required:
              - matches
              type: object
          type: object
      served: false
      storage: false
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          properties:
            matches:
              description: Match conditions of this route group.
              items:
                properties:
                  headers:
                    description: Header match conditions of this route.
                    items:
                      additionalProperties:
                        type: string
                      description: Header match condition of this route.
                      type: object
                    type: array
                  methods:
                    description: The HTTP methods of this HTTP route.
                    items:
                      description: The HTTP method of this HTTP route.
                      enum:
                      - '*'
                      - GET
                      - HEAD
                      - PUT
                      - POST
                      - DELETE
                      - CONNECT
                      - OPTIONS
                      - TRACE
                      - PATCH
                      type: string
                    type: array
                  name:
                    description: Name of the HTTP route.
                    type: string
                  pathRegex:
                    description: URI path regex of the HTTP route.
                    type: string
                required:
                - name
                type: object
              type: array
          required:
          - matches
          type: object
      served: false
      storage: false
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            matches:
              description: Match conditions of this route group.
              items:
                properties:
                  headers:
                    description: Header match conditions of this route.
                    items:
                      additionalProperties:
                        type: string
                      description: Header match condition of this route.
                      type: object
                    type: array
                  methods:
                    description: The HTTP methods of this HTTP route.
                    items:
                      description: The HTTP method of this HTTP route.
                      enum:
                      - '*'
                      - GET
                      - HEAD
                      - PUT
                      - POST
                      - DELETE
                      - CONNECT
                      - OPTIONS
                      - TRACE
                      - PATCH
                      type: string
                    type: array
                  name:
                    description: Name of the HTTP route.
                    type: string
                  pathRegex:
                    description: URI path regex of the HTTP route.
                    type: string
                required:
                - name
                type: object
              type: array
          required:
          - matches
          type: object
      served: false
      storage: false
  status:
    acceptedNames:
      kind: HTTPRouteGroup
      listKind: HTTPRouteGroupList
      plural: httproutegroups
      shortNames:
      - htr
      singular: httproutegroup
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha4
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.0
      meta.helm.sh/release-name: aks-managed-image-cleaner
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-12-03T00:49:39Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      helm.toolkit.fluxcd.io/name: image-cleaner-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 674e54c2a995a90001425029
      kubernetes.azure.com/managedby: aks
    name: imagejobs.eraser.sh
    resourceVersion: "1492"
    uid: 0a0bd64d-6e60-4e03-a5a7-5ca56e34ba77
  spec:
    conversion:
      strategy: None
    group: eraser.sh
    names:
      kind: ImageJob
      listKind: ImageJobList
      plural: imagejobs
      singular: imagejob
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ImageJob is the Schema for the imagejobs API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              description: ImageJobStatus defines the observed state of ImageJob.
              properties:
                deleteAfter:
                  description: Time to delay deletion until
                  format: date-time
                  type: string
                desired:
                  description: desired number of pods
                  type: integer
                failed:
                  description: number of pods that failed
                  type: integer
                phase:
                  description: job running, successfully completed, or failed
                  type: string
                skipped:
                  description: number of nodes that were skipped e.g. because they
                    are not a linux node
                  type: integer
                succeeded:
                  description: number of pods that completed successfully
                  type: integer
              required:
              - desired
              - failed
              - phase
              - skipped
              - succeeded
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - deprecated: true
      deprecationWarning: v1alpha1 of the eraser API has been deprecated. Please migrate
        to v1.
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ImageJob is the Schema for the imagejobs API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              description: ImageJobStatus defines the observed state of ImageJob.
              properties:
                deleteAfter:
                  description: Time to delay deletion until
                  format: date-time
                  type: string
                desired:
                  description: desired number of pods
                  type: integer
                failed:
                  description: number of pods that failed
                  type: integer
                phase:
                  description: job running, successfully completed, or failed
                  type: string
                skipped:
                  description: number of nodes that were skipped e.g. because they
                    are not a linux node
                  type: integer
                succeeded:
                  description: number of pods that completed successfully
                  type: integer
              required:
              - desired
              - failed
              - phase
              - skipped
              - succeeded
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ImageJob
      listKind: ImageJobList
      plural: imagejobs
      singular: imagejob
    conditions:
    - lastTransitionTime: "2024-12-03T00:49:39Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:49:39Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.9.0
      meta.helm.sh/release-name: aks-managed-image-cleaner
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2024-12-03T00:49:39Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      helm.toolkit.fluxcd.io/name: image-cleaner-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 674e54c2a995a90001425029
      kubernetes.azure.com/managedby: aks
    name: imagelists.eraser.sh
    resourceVersion: "1495"
    uid: 215f027d-8cab-41b8-beb5-82f07251dcbe
  spec:
    conversion:
      strategy: None
    group: eraser.sh
    names:
      kind: ImageList
      listKind: ImageListList
      plural: imagelists
      singular: imagelist
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: ImageList is the Schema for the imagelists API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageListSpec defines the desired state of ImageList.
              properties:
                images:
                  description: The list of non-compliant images to delete if non-running.
                  items:
                    type: string
                  type: array
              required:
              - images
              type: object
            status:
              description: ImageListStatus defines the observed state of ImageList.
              properties:
                failed:
                  description: Number of nodes that failed to run the job
                  format: int64
                  type: integer
                skipped:
                  description: Number of nodes that were skipped due to a skip selector
                  format: int64
                  type: integer
                success:
                  description: Number of nodes that successfully ran the job
                  format: int64
                  type: integer
                timestamp:
                  description: Information when the job was completed.
                  format: date-time
                  type: string
              required:
              - failed
              - skipped
              - success
              - timestamp
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - deprecated: true
      deprecationWarning: v1alpha1 of the eraser API has been deprecated. Please migrate
        to v1.
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ImageList is the Schema for the imagelists API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ImageListSpec defines the desired state of ImageList.
              properties:
                images:
                  description: The list of non-compliant images to delete if non-running.
                  items:
                    type: string
                  type: array
              required:
              - images
              type: object
            status:
              description: ImageListStatus defines the observed state of ImageList.
              properties:
                failed:
                  description: Number of nodes that failed to run the job
                  format: int64
                  type: integer
                skipped:
                  description: Number of nodes that were skipped due to a skip selector
                  format: int64
                  type: integer
                success:
                  description: Number of nodes that successfully ran the job
                  format: int64
                  type: integer
                timestamp:
                  description: Information when the job was completed.
                  format: date-time
                  type: string
              required:
              - failed
              - skipped
              - success
              - timestamp
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ImageList
      listKind: ImageListList
      plural: imagelists
      singular: imagelist
    conditions:
    - lastTransitionTime: "2024-12-03T00:49:39Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:49:39Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"ingressbackends.policy.openservicemesh.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"policy.openservicemesh.io","names":{"plural":"ingressbackends","singular":"ingressbackend","shortNames":["ingressbackend"],"kind":"IngressBackend","listKind":"IngressBackendList"},"scope":"Namespaced","versions":[{"name":"v1alpha1","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["backends","sources"],"properties":{"backends":{"description":"Backends the IngressBackend policy is applicable to.","type":"array","items":{"type":"object","required":["name","port"],"properties":{"name":{"description":"Name of the backend.","type":"string"},"port":{"description":"Port of the backend.","type":"object","required":["number","protocol"],"properties":{"number":{"description":"Port number of this port.","type":"integer","maximum":65535,"minimum":1},"protocol":{"description":"Protocol served by this port.","type":"string"}}},"tls":{"description":"TLS configuration for the backend.","type":"object","required":["skipClientCertValidation"],"properties":{"skipClientCertValidation":{"description":"Skip client certificate validation.","type":"boolean"},"sniHosts":{"description":"SNI hosts allowed by the backend.","type":"array","items":{"type":"string"}}}}}}},"matches":{"description":"The resource references an IngressBackend policy should match on.","type":"array","items":{"type":"object","required":["apiGroup","kind","name"],"properties":{"apiGroup":{"description":"API group for the resource being referenced.","type":"string"},"kind":{"description":"Type of resource being referenced.","type":"string"},"name":{"description":"Name of resource being referenced.","type":"string"}}}},"sources":{"description":"Sources the IngressBackend policy is applicable to.","type":"array","items":{"type":"object","required":["kind","name"],"properties":{"kind":{"description":"Kind of this source.","type":"string"},"name":{"description":"Name of this source.","type":"string"},"namespace":{"description":"Namespace of this source.","type":"string"}}}}}},"status":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}}},"subresources":{"status":{}},"additionalPrinterColumns":[{"name":"Status","type":"string","description":"Current status of the IngressBackend policy.","jsonPath":".status.currentStatus"}]}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:21Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: ingressbackends.policy.openservicemesh.io
    resourceVersion: "9216"
    uid: 304d40be-7684-4dc1-9c5d-2c087e237351
  spec:
    conversion:
      strategy: None
    group: policy.openservicemesh.io
    names:
      kind: IngressBackend
      listKind: IngressBackendList
      plural: ingressbackends
      shortNames:
      - ingressbackend
      singular: ingressbackend
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Current status of the IngressBackend policy.
        jsonPath: .status.currentStatus
        name: Status
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                backends:
                  description: Backends the IngressBackend policy is applicable to.
                  items:
                    properties:
                      name:
                        description: Name of the backend.
                        type: string
                      port:
                        description: Port of the backend.
                        properties:
                          number:
                            description: Port number of this port.
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            description: Protocol served by this port.
                            type: string
                        required:
                        - number
                        - protocol
                        type: object
                      tls:
                        description: TLS configuration for the backend.
                        properties:
                          skipClientCertValidation:
                            description: Skip client certificate validation.
                            type: boolean
                          sniHosts:
                            description: SNI hosts allowed by the backend.
                            items:
                              type: string
                            type: array
                        required:
                        - skipClientCertValidation
                        type: object
                    required:
                    - name
                    - port
                    type: object
                  type: array
                matches:
                  description: The resource references an IngressBackend policy should
                    match on.
                  items:
                    properties:
                      apiGroup:
                        description: API group for the resource being referenced.
                        type: string
                      kind:
                        description: Type of resource being referenced.
                        type: string
                      name:
                        description: Name of resource being referenced.
                        type: string
                    required:
                    - apiGroup
                    - kind
                    - name
                    type: object
                  type: array
                sources:
                  description: Sources the IngressBackend policy is applicable to.
                  items:
                    properties:
                      kind:
                        description: Kind of this source.
                        type: string
                      name:
                        description: Name of this source.
                        type: string
                      namespace:
                        description: Namespace of this source.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
              required:
              - backends
              - sources
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: IngressBackend
      listKind: IngressBackendList
      plural: ingressbackends
      shortNames:
      - ingressbackend
      singular: ingressbackend
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: azure-iot-operations/aio-operator-serving-cert
    creationTimestamp: "2024-12-03T01:16:39Z"
    generation: 2
    name: instances.iotoperations.azure.com
    resourceVersion: "14230"
    uid: dd9d3750-41e5-47c1-8946-46fbc69cda40
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQU5nSXZqdUQzRUJsNUtMT2cvYlVVdmd3RFFZSktvWklodmNOQVFFTEJRQXcKQURBZUZ3MHlOREV5TURNd01URTJOREphRncweU5UQXpNRE13TVRFMk5ESmFNQUF3Z2dFaU1BMEdDU3FHU0liMwpEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNyak4vL2JIajMxaUYvU0NEQ3czcTZPTS80TEs3UHpHZFl5YnZrCmx2bjUyTVVyNnFDMmtKTCtBdml6QjVNKzFKVmU3V25OUXJYMDhIZXFXZFdkYUJyUG8vVEdrS1RmanRndWRaaVEKUUV1emdVU2ZjakV1aE53RUlCdlBkRFR4N05yd3IrY0hzRnRpOVN0aUZuSnFMTHV6cTRjb2luR1lUcy9veVlhNAoySWZ4RE01QXpXSVhYVkRJNzI3ek13UUFKK3pidCtjN1dxOXB6bndxUTQ2Q0VHNkloNm5DRVRNVHdQZEpXaVE1Cllma0ZXTlVzcjFWS0hnREdCK0xBRmZNbjdCSzVwbzYzYTVhUDkrY3hlenZTd2x4OEdONEtkTVhnQjVEZnN3clEKZUJXWk1SM0IrbGozemQwenhVVjJYSllFMmVOcHkrYmVYcWlkd0JPRUxqTFpaVVZuQWdNQkFBR2pnWXN3Z1lndwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01Bd0dBMVVkRXdFQi93UUNNQUF3YUFZRFZSMFJBUUgvQkY0d1hJSWxZV2x2CkxXOXdaWEpoZEc5eUxtRjZkWEpsTFdsdmRDMXZjR1Z5WVhScGIyNXpMbk4yWTRJellXbHZMVzl3WlhKaGRHOXkKTG1GNmRYSmxMV2x2ZEMxdmNHVnlZWFJwYjI1ekxuTjJZeTVqYkhWemRHVnlMbXh2WTJGc01BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUJoUnFxZk1odzdhdFNwREZmSGZrZUExR3U2VUZxUjR3Rm5pMEZtTnhMb1dkZk5IZXB3CjBiRUxidXZ6Nkc1Z3JDN1YrbG1tbE9XM0M1WjRIM3NkZWtsTG1hUGtKMVpub3hOZDJBcWFoVzRCVjd6aFNMWGgKbERjZk9RbUM3ZmthVkl4dnpKWUVNRmJQUXZCekUxS2JRTjFVNFhFM1psWG92b3k3dzVCdUNPb01pU0RmT3UxSgovWmlWUFNFWndNeGJyd0tScGFiN2dqVUxqZ3JhM1lzd0puSEF0dHRiZXFmRUxSZWZaU0o0SitKemxNM0NuVmQzCkh5RjZPVGNyQ3JHaW1PWHEyK1MvT1BxTno3WUEreFpUT0gxb2NZRXd2WkJ3RzhzU3FtZ0ZDeDdNaXBhenFXQmEKU2pWVEYvdnliNXRxWGtNUklNdTViN3FZTkdsSFV0aklFTWNiCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: aio-operator
            namespace: azure-iot-operations
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
    group: iotoperations.azure.com
    names:
      kind: Instance
      listKind: InstanceList
      plural: instances
      singular: instance
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Instance is the Schema for the instances API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: InstanceSpec defines the desired state of Instance.
              properties:
                description:
                  type: string
                schemaRegistryRef:
                  description: SchemaRegistryRef defines the reference to the Schema
                    Registry.
                  properties:
                    resourceId:
                      type: string
                  required:
                  - resourceId
                  type: object
              required:
              - schemaRegistryRef
              type: object
            status:
              description: Status defines the observed state of the resource.
              properties:
                provisioningStatus:
                  description: |-
                    OperationStatus defines the provisioning status of a Azure resource
                    projected from Cloud to Edge. It's a RPaaS/K8sBridge compliant format.
                  properties:
                    error:
                      description: |-
                        ErrorType is the error output of the resource on status = Failed or
                        status = Cancelled. The code is the error code associated with the
                        human-readable message and is compulsory.
                      properties:
                        code:
                          type: string
                        details:
                          description: ErrorDetails is additional details about the
                            root error.
                          items:
                            properties:
                              code:
                                type: string
                              message:
                                type: string
                              target:
                                type: string
                            type: object
                          type: array
                        message:
                          type: string
                        target:
                          type: string
                      type: object
                    failureCause:
                      description: |-
                        FailureCause is original cause of where the error occured. We must
                        specify between the following: UserRP, Internal, Dependency, EndUser, or Unkown.
                      type: string
                    operationId:
                      type: string
                    output:
                      description: MapAny defines a map[string]any.
                      type: object
                    status:
                      description: ProvisioningStatus defines the status of the operation
                        being executed.
                      type: string
                  type: object
                version:
                  description: Version is the version of the AIO Instance.
                  type: string
              type: object
          type: object
      served: true
      storage: false
    - name: v1internal
      schema:
        openAPIV3Schema:
          description: Instance is the Schema for the instances API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: InstanceSpec defines the desired state of Instance.
              properties:
                description:
                  type: string
                schemaRegistryRef:
                  description: SchemaRegistryRef defines the reference to the Schema
                    Registry.
                  properties:
                    resourceId:
                      type: string
                  required:
                  - resourceId
                  type: object
              type: object
            status:
              description: Status defines the observed state of the resource.
              properties:
                provisioningStatus:
                  description: |-
                    OperationStatus defines the provisioning status of a Azure resource
                    projected from Cloud to Edge. It's a RPaaS/K8sBridge compliant format.
                  properties:
                    error:
                      description: |-
                        ErrorType is the error output of the resource on status = Failed or
                        status = Cancelled. The code is the error code associated with the
                        human-readable message and is compulsory.
                      properties:
                        code:
                          type: string
                        details:
                          description: ErrorDetails is additional details about the
                            root error.
                          items:
                            properties:
                              code:
                                type: string
                              message:
                                type: string
                              target:
                                type: string
                            type: object
                          type: array
                        message:
                          type: string
                        target:
                          type: string
                      type: object
                    failureCause:
                      description: |-
                        FailureCause is original cause of where the error occured. We must
                        specify between the following: UserRP, Internal, Dependency, EndUser, or Unkown.
                      type: string
                    operationId:
                      type: string
                    output:
                      description: MapAny defines a map[string]any.
                      type: object
                    status:
                      description: ProvisioningStatus defines the status of the operation
                        being executed.
                      type: string
                  type: object
                version:
                  description: Version is the version of the AIO Instance.
                  type: string
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Instance
      listKind: InstanceList
      plural: instances
      singular: instance
    conditions:
    - lastTransitionTime: "2024-12-03T01:16:39Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:16:39Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1internal
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:07:08Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.13.1
    name: issuers.cert-manager.io
    resourceVersion: "8474"
    uid: 54d7d052-8c9f-4200-8358-6a048114c506
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: Issuer
      listKind: IssuerList
      plural: issuers
      singular: issuer
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which can be used
                        to validate the certificate chain presented by the ACME server.
                        Mutually exclusive with SkipTLSVerify; prefer using CABundle
                        to prevent various kinds of security vulnerabilities. If CABundle
                        and SkipTLSVerify are unset, the system certificate bundle
                        inside the container is used to validate the TLS connection.
                      format: byte
                      type: string
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: 'INSECURE: Enables or disables validation of the
                        ACME server TLS certificate. If true, requests to the ACME
                        server will not have the TLS certificate chain validated.
                        Mutually exclusive with CABundle; prefer using CABundle to
                        prevent various kinds of security vulnerabilities. Only enable
                        this option in development environments. If CABundle and SkipTLSVerify
                        are unset, the system certificate bundle inside the container
                        is used to validate the TLS connection. Defaults to false.'
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: An ACMEChallengeSolver describes how to solve
                          ACME challenges for the issuer it is part of. A selector
                          may be provided to use different solving strategies for
                          different DNS names. Only one of HTTP01 or DNS01 must be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      Cannot be set when SecretAccessKeyID is set.
                                      If neither the Access Key nor Key ID are set,
                                      we fall-back to using env vars, shared credentials
                                      file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  accessKeyIDSecretRef:
                                    description: 'The SecretAccessKey is used for
                                      authentication. If set, pull the AWS access
                                      key ID from a key within a Kubernetes Secret.
                                      Cannot be set when AccessKeyID is set. If neither
                                      the Access Key nor Key ID are set, we fall-back
                                      to using env vars, shared credentials file or
                                      AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: 'The SecretAccessKey is used for
                                      authentication. If neither the Access Key nor
                                      Key ID are set, we fall-back to using env vars,
                                      shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: Custom labels that will be applied
                                      to HTTPRoutes created by cert-manager while
                                      solving HTTP-01 challenges.
                                    type: object
                                  parentRefs:
                                    description: 'When solving an HTTP-01 challenge,
                                      cert-manager creates an HTTPRoute. cert-manager
                                      needs to know which parentRefs should be used
                                      when creating the HTTPRoute. Usually, the parentRef
                                      references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                                    items:
                                      description: "ParentReference identifies an
                                        API object (usually a Gateway) that can be
                                        considered a parent of this resource (usually
                                        a route). There are two kinds of parent resources
                                        with \"Core\" support: \n * Gateway (Gateway
                                        conformance profile) * Service (Mesh conformance
                                        profile, experimental, ClusterIP Services
                                        only) \n This API may be extended in the future
                                        to support additional kinds of parent resources.
                                        \n The API object must be valid in the cluster;
                                        the Group and Kind must be registered in the
                                        cluster for this reference to be valid."
                                      properties:
                                        group:
                                          default: gateway.networking.k8s.io
                                          description: "Group is the group of the
                                            referent. When unspecified, \"gateway.networking.k8s.io\"
                                            is inferred. To set the core API group
                                            (such as for a \"Service\" kind referent),
                                            Group must be explicitly set to \"\" (empty
                                            string). \n Support: Core"
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Gateway
                                          description: "Kind is kind of the referent.
                                            \n There are two kinds of parent resources
                                            with \"Core\" support: \n * Gateway (Gateway
                                            conformance profile) * Service (Mesh conformance
                                            profile, experimental, ClusterIP Services
                                            only) \n Support for other resources is
                                            Implementation-Specific."
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: "Name is the name of the referent.
                                            \n Support: Core"
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: "Namespace is the namespace
                                            of the referent. When unspecified, this
                                            refers to the local namespace of the Route.
                                            \n Note that there are specific rules
                                            for ParentRefs which cross namespace boundaries.
                                            Cross-namespace references are only valid
                                            if they are explicitly allowed by something
                                            in the namespace they are referring to.
                                            For example: Gateway has the AllowedRoutes
                                            field, and ReferenceGrant provides a generic
                                            way to enable any other kind of cross-namespace
                                            reference. \n ParentRefs from a Route
                                            to a Service in the same namespace are
                                            \"producer\" routes, which apply default
                                            routing rules to inbound connections from
                                            any namespace to the Service. \n ParentRefs
                                            from a Route to a Service in a different
                                            namespace are \"consumer\" routes, and
                                            these routing rules are only applied to
                                            outbound connections originating from
                                            the same namespace as the Route, for which
                                            the intended destination of the connections
                                            are a Service targeted as a ParentRef
                                            of the Route. \n Support: Core"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: "Port is the network port this
                                            Route targets. It can be interpreted differently
                                            based on the type of parent resource.
                                            \n When the parent resource is a Gateway,
                                            this targets all listeners listening on
                                            the specified port that also support this
                                            kind of Route(and select this Route).
                                            It's not recommended to set `Port` unless
                                            the networking behaviors specified in
                                            a Route must apply to a specific port
                                            as opposed to a listener(s) whose port(s)
                                            may be changed. When both Port and SectionName
                                            are specified, the name and port of the
                                            selected listener must match both specified
                                            values. \n When the parent resource is
                                            a Service, this targets a specific port
                                            in the Service spec. When both Port (experimental)
                                            and SectionName are specified, the name
                                            and port of the selected port must match
                                            both specified values. \n Implementations
                                            MAY choose to support other parent resources.
                                            Implementations supporting other types
                                            of parent resources MUST clearly document
                                            how/if Port is interpreted. \n For the
                                            purpose of status, an attachment is considered
                                            successful as long as the parent resource
                                            accepts it partially. For example, Gateway
                                            listeners can restrict which Routes can
                                            attach to them by Route kind, namespace,
                                            or hostname. If 1 of 2 Gateway listeners
                                            accept attachment from the referencing
                                            Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept
                                            attachment from this Route, the Route
                                            MUST be considered detached from the Gateway.
                                            \n Support: Extended \n <gateway:experimental>"
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        sectionName:
                                          description: "SectionName is the name of
                                            a section within the target resource.
                                            In the following resources, SectionName
                                            is interpreted as the following: \n *
                                            Gateway: Listener Name. When both Port
                                            (experimental) and SectionName are specified,
                                            the name and port of the selected listener
                                            must match both specified values. * Service:
                                            Port Name. When both Port (experimental)
                                            and SectionName are specified, the name
                                            and port of the selected listener must
                                            match both specified values. Note that
                                            attaching Routes to Services as Parents
                                            is part of experimental Mesh support and
                                            is not supported for any other purpose.
                                            \n Implementations MAY choose to support
                                            attaching Routes to other resources. If
                                            that is the case, they MUST clearly document
                                            how SectionName is interpreted. \n When
                                            unspecified (empty string), this will
                                            reference the entire resource. For the
                                            purpose of status, an attachment is considered
                                            successful if at least one section in
                                            the parent resource accepts it. For example,
                                            Gateway listeners can restrict which Routes
                                            can attach to them by Route kind, namespace,
                                            or hostname. If 1 of 2 Gateway listeners
                                            accept attachment from the referencing
                                            Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept
                                            attachment from this Route, the Route
                                            MUST be considered detached from the Gateway.
                                            \n Support: Core"
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: This field configures the annotation
                                      `kubernetes.io/ingress.class` when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of `class`,
                                      `name` or `ingressClassName` may be specified.
                                    type: string
                                  ingressClassName:
                                    description: This field configures the field `ingressClassName`
                                      on the created Ingress resources used to solve
                                      ACME challenges that use this challenge solver.
                                      This is the recommended way of configuring the
                                      ingress class. Only one of `class`, `name` or
                                      `ingressClassName` may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources. Only one of `class`, `name` or `ingressClassName`
                                      may be specified.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Check ACMEChallengeSolverHTTP01IngressPodSpec
                                          to find out currently supported fields.
                                          All other fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          imagePullSecrets:
                                            description: If specified, the pod's imagePullSecrets
                                            items:
                                              description: LocalObjectReference contains
                                                enough information to let you locate
                                                the referenced object inside the same
                                                namespace.
                                              properties:
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceAccountRef:
                              description: A reference to a service account that will
                                be used to request a bound token (also known as "projected
                                token"). Compared to using "secretRef", using this
                                field means that you don't rely on statically bound
                                tokens. To use this field, you must configure an RBAC
                                rule to let cert-manager request a token.
                              properties:
                                name:
                                  description: Name of the ServiceAccount used to
                                    request a token.
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which will be
                        used to validate the certificate chain presented by Vault.
                        Only used if using HTTPS to connect to Vault and ignored for
                        HTTP connections. Mutually exclusive with CABundleSecretRef.
                        If neither CABundle nor CABundleSecretRef are defined, the
                        certificate bundle in the cert-manager controller container
                        is used to validate the TLS connection.
                      format: byte
                      type: string
                    caBundleSecretRef:
                      description: Reference to a Secret containing a bundle of PEM-encoded
                        CAs to use when verifying the certificate chain presented
                        by Vault when using HTTPS. Mutually exclusive with CABundle.
                        If neither CABundle nor CABundleSecretRef are defined, the
                        certificate bundle in the cert-manager controller container
                        is used to validate the TLS connection. If no key for the
                        Secret is specified, cert-manager will default to 'ca.crt'.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: Base64-encoded bundle of PEM CAs which will
                            be used to validate the certificate chain presented by
                            the TPP server. Only used if using HTTPS; ignored for
                            HTTP. If undefined, the certificate bundle in the cert-manager
                            controller container is used to validate the chain.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastPrivateKeyHash:
                      description: LastPrivateKeyHash is a hash of the private key
                        associated with the latest registered ACME account, in order
                        to track changes made to registered account associated with
                        the Issuer
                      type: string
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - type
                  x-kubernetes-list-type: map
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: Issuer
      listKind: IssuerList
      plural: issuers
      singular: issuer
    conditions:
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:00:43Z"
    generation: 1
    labels:
      gatekeeper.sh/constraint: "yes"
      managed-by: azure-policy-addon
    name: k8sazurecustomcontainerallowedimages.constraints.gatekeeper.sh
    ownerReferences:
    - apiVersion: templates.gatekeeper.sh/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ConstraintTemplate
      name: k8sazurecustomcontainerallowedimages
      uid: 5bd1bd78-b871-4958-a785-41f62c2f1486
    resourceVersion: "6364"
    uid: f5304aed-a384-4908-a7bb-d27f56737fd4
  spec:
    conversion:
      strategy: None
    group: constraints.gatekeeper.sh
    names:
      categories:
      - constraint
      - constraints
      kind: K8sAzureCustomContainerAllowedImages
      listKind: K8sAzureCustomContainerAllowedImagesList
      plural: k8sazurecustomcontainerallowedimages
      singular: k8sazurecustomcontainerallowedimages
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Type of enforcement action
        jsonPath: .spec.enforcementAction
        name: enforcement-action
        type: string
      - description: Total number of violations
        jsonPath: .status.totalViolations
        name: total-violations
        type: integer
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              properties:
                enforcementAction:
                  default: deny
                  type: string
                match:
                  description: Match selects which objects are in scope.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  properties:
                    excludedContainers:
                      items:
                        type: string
                      type: array
                    imageRegex:
                      type: string
                  x-kubernetes-preserve-unknown-fields: true
                scopedEnforcementActions:
                  items:
                    properties:
                      action:
                        type: string
                      enforcementPoints:
                        items:
                          properties:
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
            status:
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Type of enforcement action
        jsonPath: .spec.enforcementAction
        name: enforcement-action
        type: string
      - description: Total number of violations
        jsonPath: .status.totalViolations
        name: total-violations
        type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              properties:
                enforcementAction:
                  default: deny
                  type: string
                match:
                  description: Match selects which objects are in scope.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  properties:
                    excludedContainers:
                      items:
                        type: string
                      type: array
                    imageRegex:
                      type: string
                  x-kubernetes-preserve-unknown-fields: true
                scopedEnforcementActions:
                  items:
                    properties:
                      action:
                        type: string
                      enforcementPoints:
                        items:
                          properties:
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
            status:
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - constraint
      - constraints
      kind: K8sAzureCustomContainerAllowedImages
      listKind: K8sAzureCustomContainerAllowedImagesList
      plural: k8sazurecustomcontainerallowedimages
      singular: k8sazurecustomcontainerallowedimages
    conditions:
    - lastTransitionTime: "2024-12-03T01:00:43Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:00:43Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:00:43Z"
    generation: 1
    labels:
      gatekeeper.sh/constraint: "yes"
      managed-by: azure-policy-addon
    name: k8sazurev2customcontainerallowedimages.constraints.gatekeeper.sh
    ownerReferences:
    - apiVersion: templates.gatekeeper.sh/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ConstraintTemplate
      name: k8sazurev2customcontainerallowedimages
      uid: 9b5efa02-cc65-44ab-b38b-4704d5a16ecb
    resourceVersion: "6370"
    uid: bd9c8f61-7744-4f39-970c-6ff63cff2415
  spec:
    conversion:
      strategy: None
    group: constraints.gatekeeper.sh
    names:
      categories:
      - constraint
      - constraints
      kind: K8sAzureV2CustomContainerAllowedImages
      listKind: K8sAzureV2CustomContainerAllowedImagesList
      plural: k8sazurev2customcontainerallowedimages
      singular: k8sazurev2customcontainerallowedimages
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Type of enforcement action
        jsonPath: .spec.enforcementAction
        name: enforcement-action
        type: string
      - description: Total number of violations
        jsonPath: .status.totalViolations
        name: total-violations
        type: integer
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              properties:
                enforcementAction:
                  default: deny
                  type: string
                match:
                  description: Match selects which objects are in scope.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  properties:
                    excludedContainers:
                      items:
                        type: string
                      type: array
                    imageRegex:
                      type: string
                  x-kubernetes-preserve-unknown-fields: true
                scopedEnforcementActions:
                  items:
                    properties:
                      action:
                        type: string
                      enforcementPoints:
                        items:
                          properties:
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
            status:
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Type of enforcement action
        jsonPath: .spec.enforcementAction
        name: enforcement-action
        type: string
      - description: Total number of violations
        jsonPath: .status.totalViolations
        name: total-violations
        type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              properties:
                enforcementAction:
                  default: deny
                  type: string
                match:
                  description: Match selects which objects are in scope.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  properties:
                    excludedContainers:
                      items:
                        type: string
                      type: array
                    imageRegex:
                      type: string
                  x-kubernetes-preserve-unknown-fields: true
                scopedEnforcementActions:
                  items:
                    properties:
                      action:
                        type: string
                      enforcementPoints:
                        items:
                          properties:
                            name:
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
            status:
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - constraint
      - constraints
      kind: K8sAzureV2CustomContainerAllowedImages
      listKind: K8sAzureV2CustomContainerAllowedImagesList
      plural: k8sazurev2customcontainerallowedimages
      singular: k8sazurev2customcontainerallowedimages
    conditions:
    - lastTransitionTime: "2024-12-03T01:00:43Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:00:43Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"meshconfigs.config.openservicemesh.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"config.openservicemesh.io","names":{"plural":"meshconfigs","singular":"meshconfig","shortNames":["meshconfig"],"kind":"MeshConfig","listKind":"MeshConfigList"},"scope":"Namespaced","versions":[{"name":"v1alpha2","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","properties":{"certificate":{"description":"Configuration for certificate management","type":"object","required":["serviceCertValidityDuration","certKeyBitSize"],"properties":{"certKeyBitSize":{"description":"Sets the certificate key bit size for data plane certificates.","type":"integer"},"ingressGateway":{"description":"Configuration for the ingress gateway's certificate","type":"object","required":["subjectAltNames","validityDuration","secret"],"properties":{"secret":{"description":"Secret reference to store the certificate in","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret","type":"string"},"namespace":{"description":"Namespace of the secret","type":"string"}}},"subjectAltNames":{"description":"Subject Alternative Names secured by the certificate","type":"array","minItems":1,"items":{"type":"string"}},"validityDuration":{"description":"Certificate validity duration, represented as a sequence of decimal numbers each with optional fraction and a unit suffix","type":"string"}}},"serviceCertValidityDuration":{"description":"Sets the service certificate validity duration, represented as a sequence of decimal numbers each with optional fraction and a unit suffix.","type":"string"}}},"featureFlags":{"description":"OSM feature flags","type":"object","properties":{"enableAsyncProxyServiceMapping":{"type":"boolean"},"enableEgressPolicy":{"type":"boolean"},"enableEnvoyActiveHealthChecks":{"type":"boolean"},"enableIngressBackendPolicy":{"type":"boolean"},"enableMulticlusterMode":{"description":"DEPRECATED, no longer used","type":"boolean"},"enableRetryPolicy":{"type":"boolean"},"enableSnapshotCacheMode":{"type":"boolean"},"enableWASMStats":{"type":"boolean"}}},"observability":{"description":"Configuration for observing the service mesh, including metrics, logs, tracing etc,.","type":"object","properties":{"enableDebugServer":{"description":"Enables a debug endpoint on the osm-controller pod to list information regarding the mesh such as proxy connections, certificates, and SMI policies.","type":"boolean"},"osmLogLevel":{"description":"Allows setting OSM control plane log level at runtime","type":"string"},"tracing":{"description":"Configuration for distributed tracing","type":"object","properties":{"address":{"description":"Address of Jaeger tracing deployment, if tracing is enabled.","type":"string"},"enable":{"description":"Enables Jaeger tracing for the mesh.","type":"boolean"},"endpoint":{"description":"Endpoint for tracing data, if tracing is enabled.","type":"string"},"port":{"description":"Port on which tracing is enabled.","type":"integer"}}}}},"sidecar":{"description":"Configuration for Envoy sidecar","type":"object","properties":{"cipherSuites":{"description":"A list of ciphers that listener supports when negotiating TLS 1.0-1.2. This setting has no effect when negotiating TLS 1.3. For valid cipher names, see the latest OpenSSL ciphers manual page. E.g. https://www.openssl.org/docs/man1.1.1/apps/ciphers.html.","type":"array","items":{"type":"string"}},"configResyncInterval":{"description":"Resync interval for regular proxy broadcast updates","type":"string"},"ecdhCurves":{"description":"A list of ECDH curves that TLS connection supports. If not specified, the curves are [X25519, P-256] for non-FIPS build and P-256 for builds using BoringSSL FIPS.","type":"array","items":{"type":"string"}},"enablePrivilegedInitContainer":{"description":"Enables privileged init containers for pods in mesh. When false, init containers only have NET_ADMIN.","type":"boolean"},"envoyImage":{"description":"Image for the Envoy sidecar","type":"string"},"envoyWindowsImage":{"description":"Image for the Envoy sidecar on Windows workers","type":"string"},"httpIdleTimeout":{"description":"Idle timeout for HTTP connections (in seconds). A value of zero (0) defers to the Envoy defaults for idle timeout","type":"integer"},"initContainerImage":{"description":"Image for the init container","type":"string"},"localProxyMode":{"description":"Sets the destination ip address the envoy proxy will use when connecting to the backend application. Acceptable values are [Localhost, PodIP]. The default value is Localhost","type":"string","default":"Localhost","enum":["Localhost","PodIP"]},"logLevel":{"description":"Sets the logging verbosity of Envoy proxy sidecar, only applicable to newly created pods joining the mesh.","type":"string","enum":["trace","debug","info","warning","warn","error","critical",false]},"maxDataPlaneConnections":{"description":"Max allowed data plane sidecar connections","type":"integer"},"resources":{"type":"object","properties":{"limits":{"description":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object","additionalProperties":true},"requests":{"description":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object","additionalProperties":true}}},"tcpIdleTimeout":{"description":"Idle timeout for TCP connections (in seconds). A value of zero (0) defers to the Envoy defaults for idle timeout","type":"integer"},"tlsMaxProtocolVersion":{"description":"The maximum TLS protocol version that the sidecar supports. Valid TLS protocol versions are TLS_AUTO, TLSv1_0 (deprecated), TLSv1_1 (deprecated), TLSv1_2 and TLSv1_3.","type":"string","default":"TLSv1_3","enum":["TLS_AUTO","TLSv1_0","TLSv1_1","TLSv1_2","TLSv1_3"]},"tlsMinProtocolVersion":{"description":"The minimum TLS protocol version that the sidecar supports. Valid TLS protocol versions are TLS_AUTO, TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.","type":"string","default":"TLSv1_2","enum":["TLS_AUTO","TLSv1_0","TLSv1_1","TLSv1_2","TLSv1_3"]}}},"traffic":{"description":"Configuration for traffic management","type":"object","properties":{"enableEgress":{"description":"Enables egress in the mesh","type":"boolean"},"enablePermissiveTrafficPolicyMode":{"description":"True for allowing traffic to flow between client and service pods within the mesh without SMI traffic policies, i.e. no traffic policy enforcement in the mesh. If set to false, enables deny-all traffic policy in mesh i.e. an SMI Traffic Target is necessary for services to communicate.","type":"boolean"},"inboundExternalAuthorization":{"description":"Configures external authorization for inbound and ingress connections.","type":"object","properties":{"address":{"description":"Target destination endpoint that will handle external authorization.","type":"string"},"enable":{"description":"Enables/disables the inbound external authorization policy if present.","type":"boolean"},"failureModeAllow":{"description":"Allows specifying if traffic should succeed or fail if the external authorization endpoint fails to respond.","type":"boolean"},"port":{"description":"Remote destination port for the external authorization endpoint.","type":"integer","maximum":65535,"minimum":1},"statPrefix":{"description":"String prefix for inbound external authorization related metrics.","type":"string","default":"inboundExtAuthz"},"timeout":{"description":"Defines the timeout to consider for the remote endpoint to reply in time.","type":"string","default":"1s"}}},"inboundPortExclusionList":{"description":"Global list of ports to exclude from inbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"integer","maximum":65535,"minimum":1}},"networkInterfaceExclusionList":{"description":"NetworkInterfaceExclusionList defines a global list of network interface names to exclude from inbound and outbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"string"}},"outboundIPRangeExclusionList":{"description":"Global list of IP address ranges to exclude from outbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"string","pattern":"((?:\\d{1,3}\\.){3}\\d{1,3})\\/(\\d{1,2})$"}},"outboundIPRangeInclusionList":{"description":"Global list of IP address ranges to include for outbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"string","pattern":"((?:\\d{1,3}\\.){3}\\d{1,3})\\/(\\d{1,2})$"}},"outboundPortExclusionList":{"description":"Global list of ports to exclude from outbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"integer","maximum":65535,"minimum":1}}}}}}}}}},{"name":"v1alpha1","served":true,"storage":false,"deprecated":true,"deprecationWarning":"config.openservicemesh.io/v1alpha1 MeshConfig is deprecated; use config.openservicemesh.io/v1alpha2 MeshConfig","schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","properties":{"certificate":{"description":"Configuration for certificate management","type":"object","required":["serviceCertValidityDuration","certKeyBitSize"],"properties":{"certKeyBitSize":{"description":"Sets the certificate key bit size for data plane certificates.","type":"integer"},"ingressGateway":{"description":"Configuration for the ingress gateway's certificate","type":"object","required":["subjectAltNames","validityDuration","secret"],"properties":{"secret":{"description":"Secret reference to store the certificate in","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret","type":"string"},"namespace":{"description":"Namespace of the secret","type":"string"}}},"subjectAltNames":{"description":"Subject Alternative Names secured by the certificate","type":"array","minItems":1,"items":{"type":"string"}},"validityDuration":{"description":"Certificate validity duration, represented as a sequence of decimal numbers each with optional fraction and a unit suffix","type":"string"}}},"serviceCertValidityDuration":{"description":"Sets the service certificate validity duration, represented as a sequence of decimal numbers each with optional fraction and a unit suffix.","type":"string"}}},"featureFlags":{"description":"OSM feature flags","type":"object","properties":{"enableAsyncProxyServiceMapping":{"type":"boolean"},"enableEgressPolicy":{"type":"boolean"},"enableEnvoyActiveHealthChecks":{"type":"boolean"},"enableIngressBackendPolicy":{"type":"boolean"},"enableMulticlusterMode":{"description":"DEPRECATED, no longer used","type":"boolean"},"enableRetryPolicy":{"type":"boolean"},"enableSnapshotCacheMode":{"type":"boolean"},"enableWASMStats":{"type":"boolean"}}},"observability":{"description":"Configuration for observing the service mesh, including metrics, logs, tracing etc,.","type":"object","properties":{"enableDebugServer":{"description":"Enables a debug endpoint on the osm-controller pod to list information regarding the mesh such as proxy connections, certificates, and SMI policies.","type":"boolean"},"osmLogLevel":{"description":"Allows setting OSM control plane log level at runtime","type":"string"},"tracing":{"description":"Configuration for distributed tracing","type":"object","properties":{"address":{"description":"Address of Jaeger tracing deployment, if tracing is enabled.","type":"string"},"enable":{"description":"Enables Jaeger tracing for the mesh.","type":"boolean"},"endpoint":{"description":"Endpoint for tracing data, if tracing is enabled.","type":"string"},"port":{"description":"Port on which tracing is enabled.","type":"integer"}}}}},"sidecar":{"description":"Configuration for Envoy sidecar","type":"object","properties":{"configResyncInterval":{"description":"Resync interval for regular proxy broadcast updates","type":"string"},"enablePrivilegedInitContainer":{"description":"Enables privileged init containers for pods in mesh. When false, init containers only have NET_ADMIN.","type":"boolean"},"envoyImage":{"description":"Image for the Envoy sidecar","type":"string"},"envoyWindowsImage":{"description":"Image for the Envoy sidecar on Windows workers","type":"string"},"initContainerImage":{"description":"Image for the init container","type":"string"},"logLevel":{"description":"Sets the logging verbosity of Envoy proxy sidecar, only applicable to newly created pods joining the mesh.","type":"string","enum":["trace","debug","info","warning","warn","error","critical",false]},"maxDataPlaneConnections":{"description":"Max allowed data plane sidecar connections","type":"integer"},"resources":{"type":"object","properties":{"limits":{"description":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object","additionalProperties":true},"requests":{"description":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object","additionalProperties":true}}}}},"traffic":{"description":"Configuration for traffic management","type":"object","properties":{"enableEgress":{"description":"Enables egress in the mesh","type":"boolean"},"enablePermissiveTrafficPolicyMode":{"description":"True for allowing traffic to flow between client and service pods within the mesh without SMI traffic policies, i.e. no traffic policy enforcement in the mesh. If set to false, enables deny-all traffic policy in mesh i.e. an SMI Traffic Target is necessary for services to communicate.","type":"boolean"},"inboundExternalAuthorization":{"description":"Configures external authorization for inbound and ingress connections.","type":"object","properties":{"address":{"description":"Target destination endpoint that will handle external authorization.","type":"string"},"enable":{"description":"Enables/disables the inbound external authorization policy if present.","type":"boolean"},"failureModeAllow":{"description":"Allows specifying if traffic should succeed or fail if the external authorization endpoint fails to respond.","type":"boolean"},"port":{"description":"Remote destination port for the external authorization endpoint.","type":"integer","maximum":65535,"minimum":1},"statPrefix":{"description":"String prefix for inbound external authorization related metrics.","type":"string","default":"inboundExtAuthz"},"timeout":{"description":"Defines the timeout to consider for the remote endpoint to reply in time.","type":"string","default":"1s"}}},"inboundPortExclusionList":{"description":"Global list of ports to exclude from inbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"integer","maximum":65535,"minimum":1}},"outboundIPRangeExclusionList":{"description":"Global list of IP address ranges to exclude from outbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"string","pattern":"((?:\\d{1,3}\\.){3}\\d{1,3})\\/(\\d{1,2})$"}},"outboundPortExclusionList":{"description":"Global list of ports to exclude from outbound traffic interception by the sidecar proxy.","type":"array","items":{"type":"integer","maximum":65535,"minimum":1}}}}}}}}}}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:21Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: meshconfigs.config.openservicemesh.io
    resourceVersion: "9209"
    uid: 03c5802b-12b1-453e-8949-7094e24af21e
  spec:
    conversion:
      strategy: None
    group: config.openservicemesh.io
    names:
      kind: MeshConfig
      listKind: MeshConfigList
      plural: meshconfigs
      shortNames:
      - meshconfig
      singular: meshconfig
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                certificate:
                  description: Configuration for certificate management
                  properties:
                    certKeyBitSize:
                      description: Sets the certificate key bit size for data plane
                        certificates.
                      type: integer
                    ingressGateway:
                      description: Configuration for the ingress gateway's certificate
                      properties:
                        secret:
                          description: Secret reference to store the certificate in
                          properties:
                            name:
                              description: Name of the secret
                              type: string
                            namespace:
                              description: Namespace of the secret
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        subjectAltNames:
                          description: Subject Alternative Names secured by the certificate
                          items:
                            type: string
                          minItems: 1
                          type: array
                        validityDuration:
                          description: Certificate validity duration, represented
                            as a sequence of decimal numbers each with optional fraction
                            and a unit suffix
                          type: string
                      required:
                      - subjectAltNames
                      - validityDuration
                      - secret
                      type: object
                    serviceCertValidityDuration:
                      description: Sets the service certificate validity duration,
                        represented as a sequence of decimal numbers each with optional
                        fraction and a unit suffix.
                      type: string
                  required:
                  - serviceCertValidityDuration
                  - certKeyBitSize
                  type: object
                featureFlags:
                  description: OSM feature flags
                  properties:
                    enableAsyncProxyServiceMapping:
                      type: boolean
                    enableEgressPolicy:
                      type: boolean
                    enableEnvoyActiveHealthChecks:
                      type: boolean
                    enableIngressBackendPolicy:
                      type: boolean
                    enableMulticlusterMode:
                      description: DEPRECATED, no longer used
                      type: boolean
                    enableRetryPolicy:
                      type: boolean
                    enableSnapshotCacheMode:
                      type: boolean
                    enableWASMStats:
                      type: boolean
                  type: object
                observability:
                  description: Configuration for observing the service mesh, including
                    metrics, logs, tracing etc,.
                  properties:
                    enableDebugServer:
                      description: Enables a debug endpoint on the osm-controller
                        pod to list information regarding the mesh such as proxy connections,
                        certificates, and SMI policies.
                      type: boolean
                    osmLogLevel:
                      description: Allows setting OSM control plane log level at runtime
                      type: string
                    tracing:
                      description: Configuration for distributed tracing
                      properties:
                        address:
                          description: Address of Jaeger tracing deployment, if tracing
                            is enabled.
                          type: string
                        enable:
                          description: Enables Jaeger tracing for the mesh.
                          type: boolean
                        endpoint:
                          description: Endpoint for tracing data, if tracing is enabled.
                          type: string
                        port:
                          description: Port on which tracing is enabled.
                          type: integer
                      type: object
                  type: object
                sidecar:
                  description: Configuration for Envoy sidecar
                  properties:
                    cipherSuites:
                      description: A list of ciphers that listener supports when negotiating
                        TLS 1.0-1.2. This setting has no effect when negotiating TLS
                        1.3. For valid cipher names, see the latest OpenSSL ciphers
                        manual page. E.g. https://www.openssl.org/docs/man1.1.1/apps/ciphers.html.
                      items:
                        type: string
                      type: array
                    configResyncInterval:
                      description: Resync interval for regular proxy broadcast updates
                      type: string
                    ecdhCurves:
                      description: A list of ECDH curves that TLS connection supports.
                        If not specified, the curves are [X25519, P-256] for non-FIPS
                        build and P-256 for builds using BoringSSL FIPS.
                      items:
                        type: string
                      type: array
                    enablePrivilegedInitContainer:
                      description: Enables privileged init containers for pods in
                        mesh. When false, init containers only have NET_ADMIN.
                      type: boolean
                    envoyImage:
                      description: Image for the Envoy sidecar
                      type: string
                    envoyWindowsImage:
                      description: Image for the Envoy sidecar on Windows workers
                      type: string
                    httpIdleTimeout:
                      description: Idle timeout for HTTP connections (in seconds).
                        A value of zero (0) defers to the Envoy defaults for idle
                        timeout
                      type: integer
                    initContainerImage:
                      description: Image for the init container
                      type: string
                    localProxyMode:
                      default: Localhost
                      description: Sets the destination ip address the envoy proxy
                        will use when connecting to the backend application. Acceptable
                        values are [Localhost, PodIP]. The default value is Localhost
                      enum:
                      - Localhost
                      - PodIP
                      type: string
                    logLevel:
                      description: Sets the logging verbosity of Envoy proxy sidecar,
                        only applicable to newly created pods joining the mesh.
                      enum:
                      - trace
                      - debug
                      - info
                      - warning
                      - warn
                      - error
                      - critical
                      - false
                      type: string
                    maxDataPlaneConnections:
                      description: Max allowed data plane sidecar connections
                      type: integer
                    resources:
                      properties:
                        limits:
                          additionalProperties: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    tcpIdleTimeout:
                      description: Idle timeout for TCP connections (in seconds).
                        A value of zero (0) defers to the Envoy defaults for idle
                        timeout
                      type: integer
                    tlsMaxProtocolVersion:
                      default: TLSv1_3
                      description: The maximum TLS protocol version that the sidecar
                        supports. Valid TLS protocol versions are TLS_AUTO, TLSv1_0
                        (deprecated), TLSv1_1 (deprecated), TLSv1_2 and TLSv1_3.
                      enum:
                      - TLS_AUTO
                      - TLSv1_0
                      - TLSv1_1
                      - TLSv1_2
                      - TLSv1_3
                      type: string
                    tlsMinProtocolVersion:
                      default: TLSv1_2
                      description: The minimum TLS protocol version that the sidecar
                        supports. Valid TLS protocol versions are TLS_AUTO, TLSv1_0,
                        TLSv1_1, TLSv1_2 and TLSv1_3.
                      enum:
                      - TLS_AUTO
                      - TLSv1_0
                      - TLSv1_1
                      - TLSv1_2
                      - TLSv1_3
                      type: string
                  type: object
                traffic:
                  description: Configuration for traffic management
                  properties:
                    enableEgress:
                      description: Enables egress in the mesh
                      type: boolean
                    enablePermissiveTrafficPolicyMode:
                      description: True for allowing traffic to flow between client
                        and service pods within the mesh without SMI traffic policies,
                        i.e. no traffic policy enforcement in the mesh. If set to
                        false, enables deny-all traffic policy in mesh i.e. an SMI
                        Traffic Target is necessary for services to communicate.
                      type: boolean
                    inboundExternalAuthorization:
                      description: Configures external authorization for inbound and
                        ingress connections.
                      properties:
                        address:
                          description: Target destination endpoint that will handle
                            external authorization.
                          type: string
                        enable:
                          description: Enables/disables the inbound external authorization
                            policy if present.
                          type: boolean
                        failureModeAllow:
                          description: Allows specifying if traffic should succeed
                            or fail if the external authorization endpoint fails to
                            respond.
                          type: boolean
                        port:
                          description: Remote destination port for the external authorization
                            endpoint.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        statPrefix:
                          default: inboundExtAuthz
                          description: String prefix for inbound external authorization
                            related metrics.
                          type: string
                        timeout:
                          default: 1s
                          description: Defines the timeout to consider for the remote
                            endpoint to reply in time.
                          type: string
                      type: object
                    inboundPortExclusionList:
                      description: Global list of ports to exclude from inbound traffic
                        interception by the sidecar proxy.
                      items:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      type: array
                    networkInterfaceExclusionList:
                      description: NetworkInterfaceExclusionList defines a global
                        list of network interface names to exclude from inbound and
                        outbound traffic interception by the sidecar proxy.
                      items:
                        type: string
                      type: array
                    outboundIPRangeExclusionList:
                      description: Global list of IP address ranges to exclude from
                        outbound traffic interception by the sidecar proxy.
                      items:
                        pattern: ((?:\d{1,3}\.){3}\d{1,3})\/(\d{1,2})$
                        type: string
                      type: array
                    outboundIPRangeInclusionList:
                      description: Global list of IP address ranges to include for
                        outbound traffic interception by the sidecar proxy.
                      items:
                        pattern: ((?:\d{1,3}\.){3}\d{1,3})\/(\d{1,2})$
                        type: string
                      type: array
                    outboundPortExclusionList:
                      description: Global list of ports to exclude from outbound traffic
                        interception by the sidecar proxy.
                      items:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      type: array
                  type: object
              type: object
          type: object
      served: true
      storage: true
    - deprecated: true
      deprecationWarning: config.openservicemesh.io/v1alpha1 MeshConfig is deprecated;
        use config.openservicemesh.io/v1alpha2 MeshConfig
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                certificate:
                  description: Configuration for certificate management
                  properties:
                    certKeyBitSize:
                      description: Sets the certificate key bit size for data plane
                        certificates.
                      type: integer
                    ingressGateway:
                      description: Configuration for the ingress gateway's certificate
                      properties:
                        secret:
                          description: Secret reference to store the certificate in
                          properties:
                            name:
                              description: Name of the secret
                              type: string
                            namespace:
                              description: Namespace of the secret
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        subjectAltNames:
                          description: Subject Alternative Names secured by the certificate
                          items:
                            type: string
                          minItems: 1
                          type: array
                        validityDuration:
                          description: Certificate validity duration, represented
                            as a sequence of decimal numbers each with optional fraction
                            and a unit suffix
                          type: string
                      required:
                      - subjectAltNames
                      - validityDuration
                      - secret
                      type: object
                    serviceCertValidityDuration:
                      description: Sets the service certificate validity duration,
                        represented as a sequence of decimal numbers each with optional
                        fraction and a unit suffix.
                      type: string
                  required:
                  - serviceCertValidityDuration
                  - certKeyBitSize
                  type: object
                featureFlags:
                  description: OSM feature flags
                  properties:
                    enableAsyncProxyServiceMapping:
                      type: boolean
                    enableEgressPolicy:
                      type: boolean
                    enableEnvoyActiveHealthChecks:
                      type: boolean
                    enableIngressBackendPolicy:
                      type: boolean
                    enableMulticlusterMode:
                      description: DEPRECATED, no longer used
                      type: boolean
                    enableRetryPolicy:
                      type: boolean
                    enableSnapshotCacheMode:
                      type: boolean
                    enableWASMStats:
                      type: boolean
                  type: object
                observability:
                  description: Configuration for observing the service mesh, including
                    metrics, logs, tracing etc,.
                  properties:
                    enableDebugServer:
                      description: Enables a debug endpoint on the osm-controller
                        pod to list information regarding the mesh such as proxy connections,
                        certificates, and SMI policies.
                      type: boolean
                    osmLogLevel:
                      description: Allows setting OSM control plane log level at runtime
                      type: string
                    tracing:
                      description: Configuration for distributed tracing
                      properties:
                        address:
                          description: Address of Jaeger tracing deployment, if tracing
                            is enabled.
                          type: string
                        enable:
                          description: Enables Jaeger tracing for the mesh.
                          type: boolean
                        endpoint:
                          description: Endpoint for tracing data, if tracing is enabled.
                          type: string
                        port:
                          description: Port on which tracing is enabled.
                          type: integer
                      type: object
                  type: object
                sidecar:
                  description: Configuration for Envoy sidecar
                  properties:
                    configResyncInterval:
                      description: Resync interval for regular proxy broadcast updates
                      type: string
                    enablePrivilegedInitContainer:
                      description: Enables privileged init containers for pods in
                        mesh. When false, init containers only have NET_ADMIN.
                      type: boolean
                    envoyImage:
                      description: Image for the Envoy sidecar
                      type: string
                    envoyWindowsImage:
                      description: Image for the Envoy sidecar on Windows workers
                      type: string
                    initContainerImage:
                      description: Image for the init container
                      type: string
                    logLevel:
                      description: Sets the logging verbosity of Envoy proxy sidecar,
                        only applicable to newly created pods joining the mesh.
                      enum:
                      - trace
                      - debug
                      - info
                      - warning
                      - warn
                      - error
                      - critical
                      - false
                      type: string
                    maxDataPlaneConnections:
                      description: Max allowed data plane sidecar connections
                      type: integer
                    resources:
                      properties:
                        limits:
                          additionalProperties: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                  type: object
                traffic:
                  description: Configuration for traffic management
                  properties:
                    enableEgress:
                      description: Enables egress in the mesh
                      type: boolean
                    enablePermissiveTrafficPolicyMode:
                      description: True for allowing traffic to flow between client
                        and service pods within the mesh without SMI traffic policies,
                        i.e. no traffic policy enforcement in the mesh. If set to
                        false, enables deny-all traffic policy in mesh i.e. an SMI
                        Traffic Target is necessary for services to communicate.
                      type: boolean
                    inboundExternalAuthorization:
                      description: Configures external authorization for inbound and
                        ingress connections.
                      properties:
                        address:
                          description: Target destination endpoint that will handle
                            external authorization.
                          type: string
                        enable:
                          description: Enables/disables the inbound external authorization
                            policy if present.
                          type: boolean
                        failureModeAllow:
                          description: Allows specifying if traffic should succeed
                            or fail if the external authorization endpoint fails to
                            respond.
                          type: boolean
                        port:
                          description: Remote destination port for the external authorization
                            endpoint.
                          maximum: 65535
                          minimum: 1
                          type: integer
                        statPrefix:
                          default: inboundExtAuthz
                          description: String prefix for inbound external authorization
                            related metrics.
                          type: string
                        timeout:
                          default: 1s
                          description: Defines the timeout to consider for the remote
                            endpoint to reply in time.
                          type: string
                      type: object
                    inboundPortExclusionList:
                      description: Global list of ports to exclude from inbound traffic
                        interception by the sidecar proxy.
                      items:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      type: array
                    outboundIPRangeExclusionList:
                      description: Global list of IP address ranges to exclude from
                        outbound traffic interception by the sidecar proxy.
                      items:
                        pattern: ((?:\d{1,3}\.){3}\d{1,3})\/(\d{1,2})$
                        type: string
                      type: array
                    outboundPortExclusionList:
                      description: Global list of ports to exclude from outbound traffic
                        interception by the sidecar proxy.
                      items:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      type: array
                  type: object
              type: object
          type: object
      served: true
      storage: false
  status:
    acceptedNames:
      kind: MeshConfig
      listKind: MeshConfigList
      plural: meshconfigs
      shortNames:
      - meshconfig
      singular: meshconfig
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"meshrootcertificates.config.openservicemesh.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"config.openservicemesh.io","names":{"plural":"meshrootcertificates","singular":"meshrootcertificate","shortNames":["mrc"],"kind":"MeshRootCertificate","listKind":"MeshRootCertificateList"},"scope":"Namespaced","versions":[{"name":"v1alpha2","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["provider"],"properties":{"provider":{"description":"Certificate provider used by the mesh control plane","type":"object","oneOf":[{"required":["certManager"]},{"required":["vault"]},{"required":["tresor"]}],"properties":{"certManager":{"description":"Cert-manager provider configuration","type":"object","required":["issuerName","issuerKind","issuerGroup"],"properties":{"issuerGroup":{"description":"The group that the issuer belongs to","type":"string"},"issuerKind":{"description":"The kind of issuer resource","type":"string","enum":["ClusterIssuer","Issuer"]},"issuerName":{"description":"The name of the Issuer or ClusterIssuer resource","type":"string"}}},"tresor":{"description":"Tresor provider configuration","type":"object","required":["ca"],"properties":{"ca":{"description":"The root certificate used by Tresor","type":"object","required":["secretRef"],"properties":{"secretRef":{"description":"Reference to the kubernetes secret storing the root certificate","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the kubernetes secret","type":"string"},"namespace":{"description":"Namespace of the kubernetes secret","type":"string"}}}}}}},"vault":{"description":"Vault provider configuration","type":"object","required":["host","port","role","protocol","token"],"properties":{"host":{"description":"Host name for the Vault server","type":"string"},"port":{"description":"Port for the Vault server","type":"integer","maximum":65535,"minimum":1},"protocol":{"description":"Protocol for the Vault connection","type":"string"},"role":{"description":"Role created on Vault server for the mesh control plane","type":"string"},"token":{"description":"Token used by the mesh control plane","type":"object","required":["secretKeyRef"],"properties":{"secretKeyRef":{"description":"Reference to the kubernetes secret storing the vault token","type":"object","required":["name","key","namespace"],"properties":{"key":{"description":"Kubernetes secret key","type":"string"},"name":{"description":"Name of the kubernetes secret","type":"string"},"namespace":{"description":"Namespace of the kubernetes secret","type":"string"}}}}}}}}},"trustDomain":{"description":"Trust Domain to use in common name for certificates, e.g. \"example.com\"","type":"string","default":"cluster.local"}}},"status":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}}},"subresources":{"status":{}},"additionalPrinterColumns":[{"name":"State","type":"string","description":"Current state of the MeshRootCertificate config","jsonPath":".status.state"}]}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:21Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: meshrootcertificates.config.openservicemesh.io
    resourceVersion: "9205"
    uid: e30a9114-2e37-4971-a0bd-025258558782
  spec:
    conversion:
      strategy: None
    group: config.openservicemesh.io
    names:
      kind: MeshRootCertificate
      listKind: MeshRootCertificateList
      plural: meshrootcertificates
      shortNames:
      - mrc
      singular: meshrootcertificate
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Current state of the MeshRootCertificate config
        jsonPath: .status.state
        name: State
        type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                provider:
                  description: Certificate provider used by the mesh control plane
                  oneOf:
                  - required:
                    - certManager
                  - required:
                    - vault
                  - required:
                    - tresor
                  properties:
                    certManager:
                      description: Cert-manager provider configuration
                      properties:
                        issuerGroup:
                          description: The group that the issuer belongs to
                          type: string
                        issuerKind:
                          description: The kind of issuer resource
                          enum:
                          - ClusterIssuer
                          - Issuer
                          type: string
                        issuerName:
                          description: The name of the Issuer or ClusterIssuer resource
                          type: string
                      required:
                      - issuerName
                      - issuerKind
                      - issuerGroup
                      type: object
                    tresor:
                      description: Tresor provider configuration
                      properties:
                        ca:
                          description: The root certificate used by Tresor
                          properties:
                            secretRef:
                              description: Reference to the kubernetes secret storing
                                the root certificate
                              properties:
                                name:
                                  description: Name of the kubernetes secret
                                  type: string
                                namespace:
                                  description: Namespace of the kubernetes secret
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                          required:
                          - secretRef
                          type: object
                      required:
                      - ca
                      type: object
                    vault:
                      description: Vault provider configuration
                      properties:
                        host:
                          description: Host name for the Vault server
                          type: string
                        port:
                          description: Port for the Vault server
                          maximum: 65535
                          minimum: 1
                          type: integer
                        protocol:
                          description: Protocol for the Vault connection
                          type: string
                        role:
                          description: Role created on Vault server for the mesh control
                            plane
                          type: string
                        token:
                          description: Token used by the mesh control plane
                          properties:
                            secretKeyRef:
                              description: Reference to the kubernetes secret storing
                                the vault token
                              properties:
                                key:
                                  description: Kubernetes secret key
                                  type: string
                                name:
                                  description: Name of the kubernetes secret
                                  type: string
                                namespace:
                                  description: Namespace of the kubernetes secret
                                  type: string
                              required:
                              - name
                              - key
                              - namespace
                              type: object
                          required:
                          - secretKeyRef
                          type: object
                      required:
                      - host
                      - port
                      - role
                      - protocol
                      - token
                      type: object
                  type: object
                trustDomain:
                  default: cluster.local
                  description: Trust Domain to use in common name for certificates,
                    e.g. "example.com"
                  type: string
              required:
              - provider
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: MeshRootCertificate
      listKind: MeshRootCertificateList
      plural: meshrootcertificates
      shortNames:
      - mrc
      singular: meshrootcertificate
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"modifyset.mutations.gatekeeper.sh"},"spec":{"group":"mutations.gatekeeper.sh","names":{"kind":"ModifySet","listKind":"ModifySetList","plural":"modifyset","singular":"modifyset"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"description":"ModifySet allows the user to modify non-keyed lists, such as\nthe list of arguments to a container.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"properties":{"name":{"maxLength":63,"type":"string"}},"type":"object"},"spec":{"description":"ModifySetSpec defines the desired state of ModifySet.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.\nThis is necessary because every mutation implies part of an object schema and object\nschemas are associated with specific GVKs.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"location":{"description":"Location describes the path to be mutated, for example: `spec.containers[name: main].args`.","type":"string"},"match":{"description":"Match allows the user to limit which resources get mutated.\nIndividual match criteria are AND-ed together. An undefined\nmatch criteria matches everything.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"description":"Parameters define the behavior of the mutator.","properties":{"operation":{"default":"merge","description":"Operation describes whether values should be merged in (\"merge\"), or pruned (\"prune\"). Default value is \"merge\"","enum":["merge","prune"],"type":"string"},"pathTests":{"description":"PathTests are a series of existence tests that can be checked\nbefore a mutation is applied","items":{"description":"PathTest allows the user to customize how the mutation works if parent\npaths are missing. It traverses the list in order. All sub paths are\ntested against the provided condition, if the test fails, the mutation is\nnot applied. All `subPath` entries must be a prefix of `location`. Any\nglob characters will take on the same value as was used to\nexpand the matching glob in `location`.\n\n\nAvailable Tests:\n* MustExist    - the path must exist or do not mutate\n* MustNotExist - the path must not exist or do not mutate.","properties":{"condition":{"description":"Condition describes whether the path either MustExist or MustNotExist in the original object","enum":["MustExist","MustNotExist"],"type":"string"},"subPath":{"type":"string"}},"type":"object"},"type":"array"},"values":{"description":"Values describes the values provided to the operation as `values.fromList`.","type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"},"status":{"description":"ModifySetStatus defines the observed state of ModifySet.","properties":{"byPod":{"items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"ModifySet allows the user to modify non-keyed lists, such as\nthe list of arguments to a container.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ModifySetSpec defines the desired state of ModifySet.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.\nThis is necessary because every mutation implies part of an object schema and object\nschemas are associated with specific GVKs.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"location":{"description":"Location describes the path to be mutated, for example: `spec.containers[name: main].args`.","type":"string"},"match":{"description":"Match allows the user to limit which resources get mutated.\nIndividual match criteria are AND-ed together. An undefined\nmatch criteria matches everything.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"description":"Parameters define the behavior of the mutator.","properties":{"operation":{"default":"merge","description":"Operation describes whether values should be merged in (\"merge\"), or pruned (\"prune\"). Default value is \"merge\"","enum":["merge","prune"],"type":"string"},"pathTests":{"description":"PathTests are a series of existence tests that can be checked\nbefore a mutation is applied","items":{"description":"PathTest allows the user to customize how the mutation works if parent\npaths are missing. It traverses the list in order. All sub paths are\ntested against the provided condition, if the test fails, the mutation is\nnot applied. All `subPath` entries must be a prefix of `location`. Any\nglob characters will take on the same value as was used to\nexpand the matching glob in `location`.\n\n\nAvailable Tests:\n* MustExist    - the path must exist or do not mutate\n* MustNotExist - the path must not exist or do not mutate.","properties":{"condition":{"description":"Condition describes whether the path either MustExist or MustNotExist in the original object","enum":["MustExist","MustNotExist"],"type":"string"},"subPath":{"type":"string"}},"type":"object"},"type":"array"},"values":{"description":"Values describes the values provided to the operation as `values.fromList`.","type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"},"status":{"description":"ModifySetStatus defines the observed state of ModifySet.","properties":{"byPod":{"items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}},{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"ModifySet allows the user to modify non-keyed lists, such as\nthe list of arguments to a container.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ModifySetSpec defines the desired state of ModifySet.","properties":{"applyTo":{"description":"ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.\nThis is necessary because every mutation implies part of an object schema and object\nschemas are associated with specific GVKs.","items":{"description":"ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.","properties":{"groups":{"items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"},"versions":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"location":{"description":"Location describes the path to be mutated, for example: `spec.containers[name: main].args`.","type":"string"},"match":{"description":"Match allows the user to limit which resources get mutated.\nIndividual match criteria are AND-ed together. An undefined\nmatch criteria matches everything.","properties":{"excludedNamespaces":{"description":"ExcludedNamespaces is a list of namespace names. If defined, a\nconstraint only applies to resources not in a listed namespace.\nExcludedNamespaces also supports a prefix or suffix based glob.  For example,\n`excludedNamespaces: [kube-*]` matches both `kube-system` and\n`kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and\n`gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"kinds":{"items":{"description":"Kinds accepts a list of objects with apiGroups and kinds fields\nthat list the groups/kinds of objects to which the mutation will apply.\nIf multiple groups/kinds objects are specified,\nonly one match is needed for the resource to be in scope.","properties":{"apiGroups":{"description":"APIGroups is the API groups the resources belong to. '*' is all groups.\nIf '*' is present, the length of the slice must be one.\nRequired.","items":{"type":"string"},"type":"array"},"kinds":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"},"labelSelector":{"description":"LabelSelector is the combination of two optional fields: `matchLabels`\nand `matchExpressions`.  These two fields provide different methods of\nselecting or excluding k8s objects based on the label keys and values\nincluded in object metadata.  All selection expressions from both\nsections are ANDed to determine if an object meets the cumulative\nrequirements of the selector.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"name":{"description":"Name is the name of an object.  If defined, it will match against objects with the specified\nname.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match\nboth `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"namespaceSelector":{"description":"NamespaceSelector is a label selector against an object's containing\nnamespace or the object itself, if the object is a namespace.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespace names. If defined, a constraint only\napplies to resources in a listed namespace.  Namespaces also supports a\nprefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both\n`kube-system` and `kube-public`, and `namespaces: [*-system]` matches both\n`kube-system` and `gatekeeper-system`.","items":{"description":"A string that supports globbing at its front and end. Ex: \"kube-*\" will match \"kube-system\" or\n\"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\", \"*system*\" will\nmatch \"system-kube\" or \"kube-system\".  The asterisk is required for wildcard matching.","pattern":"^\\*?[-:a-z0-9]*\\*?$","type":"string"},"type":"array"},"scope":{"description":"Scope determines if cluster-scoped and/or namespaced-scoped resources\nare matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)","type":"string"},"source":{"description":"Source determines whether generated or original resources are matched.\nAccepts `Generated`|`Original`|`All` (defaults to `All`). A value of\n`Generated` will only match generated resources, while `Original` will only\nmatch regular resources.","enum":["All","Generated","Original"],"type":"string"}},"type":"object"},"parameters":{"description":"Parameters define the behavior of the mutator.","properties":{"operation":{"default":"merge","description":"Operation describes whether values should be merged in (\"merge\"), or pruned (\"prune\"). Default value is \"merge\"","enum":["merge","prune"],"type":"string"},"pathTests":{"description":"PathTests are a series of existence tests that can be checked\nbefore a mutation is applied","items":{"description":"PathTest allows the user to customize how the mutation works if parent\npaths are missing. It traverses the list in order. All sub paths are\ntested against the provided condition, if the test fails, the mutation is\nnot applied. All `subPath` entries must be a prefix of `location`. Any\nglob characters will take on the same value as was used to\nexpand the matching glob in `location`.\n\n\nAvailable Tests:\n* MustExist    - the path must exist or do not mutate\n* MustNotExist - the path must not exist or do not mutate.","properties":{"condition":{"description":"Condition describes whether the path either MustExist or MustNotExist in the original object","enum":["MustExist","MustNotExist"],"type":"string"},"subPath":{"type":"string"}},"type":"object"},"type":"array"},"values":{"description":"Values describes the values provided to the operation as `values.fromList`.","type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"type":"object"},"status":{"description":"ModifySetStatus defines the observed state of ModifySet.","properties":{"byPod":{"items":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: modifyset.mutations.gatekeeper.sh
    resourceVersion: "4753"
    uid: 11e923f3-6f68-4594-8d9d-5119f607c7e5
  spec:
    conversion:
      strategy: None
    group: mutations.gatekeeper.sh
    names:
      kind: ModifySet
      listKind: ModifySetList
      plural: modifyset
      singular: modifyset
    scope: Cluster
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: |-
            ModifySet allows the user to modify non-keyed lists, such as
            the list of arguments to a container.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              description: ModifySetSpec defines the desired state of ModifySet.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.
                    This is necessary because every mutation implies part of an object schema and object
                    schemas are associated with specific GVKs.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                location:
                  description: 'Location describes the path to be mutated, for example:
                    `spec.containers[name: main].args`.'
                  type: string
                match:
                  description: |-
                    Match allows the user to limit which resources get mutated.
                    Individual match criteria are AND-ed together. An undefined
                    match criteria matches everything.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  description: Parameters define the behavior of the mutator.
                  properties:
                    operation:
                      default: merge
                      description: Operation describes whether values should be merged
                        in ("merge"), or pruned ("prune"). Default value is "merge"
                      enum:
                      - merge
                      - prune
                      type: string
                    pathTests:
                      description: |-
                        PathTests are a series of existence tests that can be checked
                        before a mutation is applied
                      items:
                        description: |-
                          PathTest allows the user to customize how the mutation works if parent
                          paths are missing. It traverses the list in order. All sub paths are
                          tested against the provided condition, if the test fails, the mutation is
                          not applied. All `subPath` entries must be a prefix of `location`. Any
                          glob characters will take on the same value as was used to
                          expand the matching glob in `location`.


                          Available Tests:
                          * MustExist    - the path must exist or do not mutate
                          * MustNotExist - the path must not exist or do not mutate.
                        properties:
                          condition:
                            description: Condition describes whether the path either
                              MustExist or MustNotExist in the original object
                            enum:
                            - MustExist
                            - MustNotExist
                            type: string
                          subPath:
                            type: string
                        type: object
                      type: array
                    values:
                      description: Values describes the values provided to the operation
                        as `values.fromList`.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
              type: object
            status:
              description: ModifySetStatus defines the observed state of ModifySet.
              properties:
                byPod:
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            ModifySet allows the user to modify non-keyed lists, such as
            the list of arguments to a container.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ModifySetSpec defines the desired state of ModifySet.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.
                    This is necessary because every mutation implies part of an object schema and object
                    schemas are associated with specific GVKs.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                location:
                  description: 'Location describes the path to be mutated, for example:
                    `spec.containers[name: main].args`.'
                  type: string
                match:
                  description: |-
                    Match allows the user to limit which resources get mutated.
                    Individual match criteria are AND-ed together. An undefined
                    match criteria matches everything.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  description: Parameters define the behavior of the mutator.
                  properties:
                    operation:
                      default: merge
                      description: Operation describes whether values should be merged
                        in ("merge"), or pruned ("prune"). Default value is "merge"
                      enum:
                      - merge
                      - prune
                      type: string
                    pathTests:
                      description: |-
                        PathTests are a series of existence tests that can be checked
                        before a mutation is applied
                      items:
                        description: |-
                          PathTest allows the user to customize how the mutation works if parent
                          paths are missing. It traverses the list in order. All sub paths are
                          tested against the provided condition, if the test fails, the mutation is
                          not applied. All `subPath` entries must be a prefix of `location`. Any
                          glob characters will take on the same value as was used to
                          expand the matching glob in `location`.


                          Available Tests:
                          * MustExist    - the path must exist or do not mutate
                          * MustNotExist - the path must not exist or do not mutate.
                        properties:
                          condition:
                            description: Condition describes whether the path either
                              MustExist or MustNotExist in the original object
                            enum:
                            - MustExist
                            - MustNotExist
                            type: string
                          subPath:
                            type: string
                        type: object
                      type: array
                    values:
                      description: Values describes the values provided to the operation
                        as `values.fromList`.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
              type: object
            status:
              description: ModifySetStatus defines the observed state of ModifySet.
              properties:
                byPod:
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            ModifySet allows the user to modify non-keyed lists, such as
            the list of arguments to a container.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ModifySetSpec defines the desired state of ModifySet.
              properties:
                applyTo:
                  description: |-
                    ApplyTo lists the specific groups, versions and kinds a mutation will be applied to.
                    This is necessary because every mutation implies part of an object schema and object
                    schemas are associated with specific GVKs.
                  items:
                    description: |-
                      ApplyTo determines what GVKs items the mutation should apply to.
                      Globs are not allowed.
                    properties:
                      groups:
                        items:
                          type: string
                        type: array
                      kinds:
                        items:
                          type: string
                        type: array
                      versions:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                location:
                  description: 'Location describes the path to be mutated, for example:
                    `spec.containers[name: main].args`.'
                  type: string
                match:
                  description: |-
                    Match allows the user to limit which resources get mutated.
                    Individual match criteria are AND-ed together. An undefined
                    match criteria matches everything.
                  properties:
                    excludedNamespaces:
                      description: |-
                        ExcludedNamespaces is a list of namespace names. If defined, a
                        constraint only applies to resources not in a listed namespace.
                        ExcludedNamespaces also supports a prefix or suffix based glob.  For example,
                        `excludedNamespaces: [kube-*]` matches both `kube-system` and
                        `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and
                        `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    kinds:
                      items:
                        description: |-
                          Kinds accepts a list of objects with apiGroups and kinds fields
                          that list the groups/kinds of objects to which the mutation will apply.
                          If multiple groups/kinds objects are specified,
                          only one match is needed for the resource to be in scope.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the API groups the resources belong to. '*' is all groups.
                              If '*' is present, the length of the slice must be one.
                              Required.
                            items:
                              type: string
                            type: array
                          kinds:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector is the combination of two optional fields: `matchLabels`
                        and `matchExpressions`.  These two fields provide different methods of
                        selecting or excluding k8s objects based on the label keys and values
                        included in object metadata.  All selection expressions from both
                        sections are ANDed to determine if an object meets the cumulative
                        requirements of the selector.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: |-
                        Name is the name of an object.  If defined, it will match against objects with the specified
                        name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match
                        both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
                      pattern: ^\*?[-:a-z0-9]*\*?$
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector is a label selector against an object's containing
                        namespace or the object itself, if the object is a namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    namespaces:
                      description: |-
                        Namespaces is a list of namespace names. If defined, a constraint only
                        applies to resources in a listed namespace.  Namespaces also supports a
                        prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both
                        `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both
                        `kube-system` and `gatekeeper-system`.
                      items:
                        description: |-
                          A string that supports globbing at its front and end. Ex: "kube-*" will match "kube-system" or
                          "kube-public", "*-system" will match "kube-system" or "gatekeeper-system", "*system*" will
                          match "system-kube" or "kube-system".  The asterisk is required for wildcard matching.
                        pattern: ^\*?[-:a-z0-9]*\*?$
                        type: string
                      type: array
                    scope:
                      description: |-
                        Scope determines if cluster-scoped and/or namespaced-scoped resources
                        are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
                      type: string
                    source:
                      description: |-
                        Source determines whether generated or original resources are matched.
                        Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of
                        `Generated` will only match generated resources, while `Original` will only
                        match regular resources.
                      enum:
                      - All
                      - Generated
                      - Original
                      type: string
                  type: object
                parameters:
                  description: Parameters define the behavior of the mutator.
                  properties:
                    operation:
                      default: merge
                      description: Operation describes whether values should be merged
                        in ("merge"), or pruned ("prune"). Default value is "merge"
                      enum:
                      - merge
                      - prune
                      type: string
                    pathTests:
                      description: |-
                        PathTests are a series of existence tests that can be checked
                        before a mutation is applied
                      items:
                        description: |-
                          PathTest allows the user to customize how the mutation works if parent
                          paths are missing. It traverses the list in order. All sub paths are
                          tested against the provided condition, if the test fails, the mutation is
                          not applied. All `subPath` entries must be a prefix of `location`. Any
                          glob characters will take on the same value as was used to
                          expand the matching glob in `location`.


                          Available Tests:
                          * MustExist    - the path must exist or do not mutate
                          * MustNotExist - the path must not exist or do not mutate.
                        properties:
                          condition:
                            description: Condition describes whether the path either
                              MustExist or MustNotExist in the original object
                            enum:
                            - MustExist
                            - MustNotExist
                            type: string
                          subPath:
                            type: string
                        type: object
                      type: array
                    values:
                      description: Values describes the values provided to the operation
                        as `values.fromList`.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
              type: object
            status:
              description: ModifySetStatus defines the observed state of ModifySet.
              properties:
                byPod:
                  items:
                    description: MutatorPodStatusStatus defines the observed state
                      of MutatorPodStatus.
                    properties:
                      enforced:
                        type: boolean
                      errors:
                        items:
                          description: MutatorError represents a single error caught
                            while adding a mutator to a system.
                          properties:
                            message:
                              type: string
                            type:
                              description: |-
                                Type indicates a specific class of error for use by controller code.
                                If not present, the error should be treated as not matching any known type.
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      id:
                        type: string
                      mutatorUID:
                        description: |-
                          Storing the mutator UID allows us to detect drift, such as
                          when a mutator has been recreated after its CRD was deleted
                          out from under it, interrupting the watch
                        type: string
                      observedGeneration:
                        format: int64
                        type: integer
                      operations:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ModifySet
      listKind: ModifySetList
      plural: modifyset
      singular: modifyset
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"mutatorpodstatuses.status.gatekeeper.sh"},"spec":{"group":"status.gatekeeper.sh","names":{"kind":"MutatorPodStatus","listKind":"MutatorPodStatusList","plural":"mutatorpodstatuses","singular":"mutatorpodstatus"},"preserveUnknownFields":false,"scope":"Namespaced","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"MutatorPodStatus is the Schema for the mutationpodstatuses API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"status":{"description":"MutatorPodStatusStatus defines the observed state of MutatorPodStatus.","properties":{"enforced":{"type":"boolean"},"errors":{"items":{"description":"MutatorError represents a single error caught while adding a mutator to a system.","properties":{"message":{"type":"string"},"type":{"description":"Type indicates a specific class of error for use by controller code.\nIf not present, the error should be treated as not matching any known type.","type":"string"}},"required":["message"],"type":"object"},"type":"array"},"id":{"type":"string"},"mutatorUID":{"description":"Storing the mutator UID allows us to detect drift, such as\nwhen a mutator has been recreated after its CRD was deleted\nout from under it, interrupting the watch","type":"string"},"observedGeneration":{"format":"int64","type":"integer"},"operations":{"items":{"type":"string"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: mutatorpodstatuses.status.gatekeeper.sh
    resourceVersion: "4760"
    uid: e43a5195-42b1-4027-b1a9-74024eb591b5
  spec:
    conversion:
      strategy: None
    group: status.gatekeeper.sh
    names:
      kind: MutatorPodStatus
      listKind: MutatorPodStatusList
      plural: mutatorpodstatuses
      singular: mutatorpodstatus
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: MutatorPodStatus is the Schema for the mutationpodstatuses
            API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            status:
              description: MutatorPodStatusStatus defines the observed state of MutatorPodStatus.
              properties:
                enforced:
                  type: boolean
                errors:
                  items:
                    description: MutatorError represents a single error caught while
                      adding a mutator to a system.
                    properties:
                      message:
                        type: string
                      type:
                        description: |-
                          Type indicates a specific class of error for use by controller code.
                          If not present, the error should be treated as not matching any known type.
                        type: string
                    required:
                    - message
                    type: object
                  type: array
                id:
                  type: string
                mutatorUID:
                  description: |-
                    Storing the mutator UID allows us to detect drift, such as
                    when a mutator has been recreated after its CRD was deleted
                    out from under it, interrupting the watch
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                operations:
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: MutatorPodStatus
      listKind: MutatorPodStatusList
      plural: mutatorpodstatuses
      singular: mutatorpodstatus
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:07:07Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.13.1
    name: orders.acme.cert-manager.io
    resourceVersion: "8459"
    uid: 6864c9ee-cdb8-4d84-9a3f-f5f363d05192
  spec:
    conversion:
      strategy: None
    group: acme.cert-manager.io
    names:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Order
      listKind: OrderList
      plural: orders
      singular: order
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Order
      listKind: OrderList
      plural: orders
      singular: order
    conditions:
    - lastTransitionTime: "2024-12-03T01:07:07Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:07:08Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"providers.externaldata.gatekeeper.sh"},"spec":{"group":"externaldata.gatekeeper.sh","names":{"kind":"Provider","listKind":"ProviderList","plural":"providers","singular":"provider"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"deprecated":true,"deprecationWarning":"externaldata.gatekeeper.sh/v1alpha1 is deprecated. Use externaldata.gatekeeper.sh/v1beta1 instead.","name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Provider is the Schema for the Provider API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Spec defines the Provider specifications.","properties":{"caBundle":{"description":"CABundle is a base64-encoded string that contains the TLS CA bundle in PEM format.\nIt is used to verify the signature of the provider's certificate.","type":"string"},"timeout":{"description":"Timeout is the timeout when querying the provider.","type":"integer"},"url":{"description":"URL is the url for the provider. URL is prefixed with https://.","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":false},{"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"Provider is the Schema for the providers API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Spec defines the Provider specifications.","properties":{"caBundle":{"description":"CABundle is a base64-encoded string that contains the TLS CA bundle in PEM format.\nIt is used to verify the signature of the provider's certificate.","type":"string"},"timeout":{"description":"Timeout is the timeout when querying the provider.","type":"integer"},"url":{"description":"URL is the url for the provider. URL is prefixed with https://.","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: providers.externaldata.gatekeeper.sh
    resourceVersion: "4786"
    uid: 74ab7cf5-8b47-4300-8163-c28e871999a8
  spec:
    conversion:
      strategy: None
    group: externaldata.gatekeeper.sh
    names:
      kind: Provider
      listKind: ProviderList
      plural: providers
      singular: provider
    scope: Cluster
    versions:
    - deprecated: true
      deprecationWarning: externaldata.gatekeeper.sh/v1alpha1 is deprecated. Use externaldata.gatekeeper.sh/v1beta1
        instead.
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the Provider API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the Provider specifications.
              properties:
                caBundle:
                  description: |-
                    CABundle is a base64-encoded string that contains the TLS CA bundle in PEM format.
                    It is used to verify the signature of the provider's certificate.
                  type: string
                timeout:
                  description: Timeout is the timeout when querying the provider.
                  type: integer
                url:
                  description: URL is the url for the provider. URL is prefixed with
                    https://.
                  type: string
              type: object
          type: object
      served: true
      storage: false
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the Provider specifications.
              properties:
                caBundle:
                  description: |-
                    CABundle is a base64-encoded string that contains the TLS CA bundle in PEM format.
                    It is used to verify the signature of the provider's certificate.
                  type: string
                timeout:
                  description: Timeout is the timeout when querying the provider.
                  type: integer
                url:
                  description: URL is the url for the provider. URL is prefixed with
                    https://.
                  type: string
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Provider
      listKind: ProviderList
      plural: providers
      singular: provider
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"retries.policy.openservicemesh.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"policy.openservicemesh.io","names":{"plural":"retries","singular":"retry","shortNames":["retry"],"kind":"Retry","listKind":"RetryList"},"scope":"Namespaced","versions":[{"name":"v1alpha1","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["source","destinations","retryPolicy"],"properties":{"destinations":{"description":"Destinations that the Retry policy is applicable to.","type":"array","items":{"type":"object","required":["kind","name","namespace"],"properties":{"kind":{"description":"Kind of this destination (must be a service).","type":"string"},"name":{"description":"Name of this destination.","type":"string"},"namespace":{"description":"Namespace of this destination.","type":"string"}}}},"retryPolicy":{"description":"Retry policy that will be applied to the source and destination services","type":"object","required":["retryOn","perTryTimeout","numRetries","retryBackoffBaseInterval"],"properties":{"numRetries":{"description":"Maximum number of retries to attempt.","type":"integer"},"perTryTimeout":{"description":"Time allowed for a retry before it's considered a failed attempt.","type":"string"},"retryBackoffBaseInterval":{"description":"Base interval for exponential retry backoff. Max interval will be 10 times the base interval.","type":"string"},"retryOn":{"description":"Policies to retry on (delimited by commas).","type":"string"}}},"source":{"description":"Source the Retry policy is applicable to.","type":"object","required":["kind","name","namespace"],"properties":{"kind":{"description":"Kind of this source (must be a service account).","type":"string"},"name":{"description":"Name of this source.","type":"string"},"namespace":{"description":"Namespace of this source.","type":"string"}}}}}}}}}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:21Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: retries.policy.openservicemesh.io
    resourceVersion: "9219"
    uid: 8938c128-d4a7-4124-b4ff-cfc99e605d41
  spec:
    conversion:
      strategy: None
    group: policy.openservicemesh.io
    names:
      kind: Retry
      listKind: RetryList
      plural: retries
      shortNames:
      - retry
      singular: retry
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                destinations:
                  description: Destinations that the Retry policy is applicable to.
                  items:
                    properties:
                      kind:
                        description: Kind of this destination (must be a service).
                        type: string
                      name:
                        description: Name of this destination.
                        type: string
                      namespace:
                        description: Namespace of this destination.
                        type: string
                    required:
                    - kind
                    - name
                    - namespace
                    type: object
                  type: array
                retryPolicy:
                  description: Retry policy that will be applied to the source and
                    destination services
                  properties:
                    numRetries:
                      description: Maximum number of retries to attempt.
                      type: integer
                    perTryTimeout:
                      description: Time allowed for a retry before it's considered
                        a failed attempt.
                      type: string
                    retryBackoffBaseInterval:
                      description: Base interval for exponential retry backoff. Max
                        interval will be 10 times the base interval.
                      type: string
                    retryOn:
                      description: Policies to retry on (delimited by commas).
                      type: string
                  required:
                  - retryOn
                  - perTryTimeout
                  - numRetries
                  - retryBackoffBaseInterval
                  type: object
                source:
                  description: Source the Retry policy is applicable to.
                  properties:
                    kind:
                      description: Kind of this source (must be a service account).
                      type: string
                    name:
                      description: Name of this source.
                      type: string
                    namespace:
                      description: Namespace of this source.
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
              required:
              - source
              - destinations
              - retryPolicy
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Retry
      listKind: RetryList
      plural: retries
      shortNames:
      - retry
      singular: retry
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.15.0
    creationTimestamp: "2024-12-03T01:12:38Z"
    generation: 1
    name: secretproviderclasses.secrets-store.csi.x-k8s.io
    resourceVersion: "11936"
    uid: 53c69a5f-399c-4e90-bddb-3faf700823c0
  spec:
    conversion:
      strategy: None
    group: secrets-store.csi.x-k8s.io
    names:
      kind: SecretProviderClass
      listKind: SecretProviderClassList
      plural: secretproviderclasses
      singular: secretproviderclass
    scope: Namespaced
    versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: SecretProviderClass is the Schema for the secretproviderclasses
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SecretProviderClassSpec defines the desired state of SecretProviderClass
              properties:
                parameters:
                  additionalProperties:
                    type: string
                  description: Configuration for specific provider
                  type: object
                provider:
                  description: Configuration for provider name
                  type: string
                secretObjects:
                  items:
                    description: SecretObject defines the desired state of synced
                      K8s secret objects
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: annotations of k8s secret object
                        type: object
                      data:
                        items:
                          description: SecretObjectData defines the desired state
                            of synced K8s secret object data
                          properties:
                            key:
                              description: data field to populate
                              type: string
                            sourcePath:
                              description: name of the object to sync
                              type: string
                          type: object
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: labels of K8s secret object
                        type: object
                      secretName:
                        description: name of the K8s secret object
                        type: string
                      type:
                        description: type of K8s secret object
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: SecretProviderClassStatus defines the observed state of
                SecretProviderClass
              type: object
          type: object
      served: true
      storage: true
    - deprecated: true
      deprecationWarning: secrets-store.csi.x-k8s.io/v1alpha1 is deprecated. Use secrets-store.csi.x-k8s.io/v1
        instead.
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SecretProviderClass is the Schema for the secretproviderclasses
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SecretProviderClassSpec defines the desired state of SecretProviderClass
              properties:
                parameters:
                  additionalProperties:
                    type: string
                  description: Configuration for specific provider
                  type: object
                provider:
                  description: Configuration for provider name
                  type: string
                secretObjects:
                  items:
                    description: SecretObject defines the desired state of synced
                      K8s secret objects
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: annotations of k8s secret object
                        type: object
                      data:
                        items:
                          description: SecretObjectData defines the desired state
                            of synced K8s secret object data
                          properties:
                            key:
                              description: data field to populate
                              type: string
                            sourcePath:
                              description: name of the object to sync
                              type: string
                          type: object
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: labels of K8s secret object
                        type: object
                      secretName:
                        description: name of the K8s secret object
                        type: string
                      type:
                        description: type of K8s secret object
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: SecretProviderClassStatus defines the observed state of
                SecretProviderClass
              properties:
                byPod:
                  items:
                    description: ByPodStatus defines the state of SecretProviderClass
                      as seen by an individual controller
                    properties:
                      id:
                        description: id of the pod that wrote the status
                        type: string
                      namespace:
                        description: namespace of the pod that wrote the status
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
  status:
    acceptedNames:
      kind: SecretProviderClass
      listKind: SecretProviderClassList
      plural: secretproviderclasses
      singular: secretproviderclass
    conditions:
    - lastTransitionTime: "2024-12-03T01:12:38Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:12:38Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.15.0
    creationTimestamp: "2024-12-03T01:12:38Z"
    generation: 1
    name: secretsyncs.secret-sync.x-k8s.io
    resourceVersion: "11931"
    uid: 0f4c0dee-1b62-4d56-b939-909ecce97e8d
  spec:
    conversion:
      strategy: None
    group: secret-sync.x-k8s.io
    names:
      kind: SecretSync
      listKind: SecretSyncList
      plural: secretsyncs
      singular: secretsync
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            SecretSync represents the desired and observed state of the secret synchronization process.
            The SecretSync name is used as the name of the secret object created by the controller.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: SecretSyncSpec defines the desired state for synchronizing
                secret.
              properties:
                forceSynchronization:
                  description: |-
                    ForceSynchronization can be used to force the secret synchronization. The secret synchronization is
                    triggered by changing the value in this field.
                    This field is not used to resolve synchronization conflicts.
                  maxLength: 253
                  pattern: ^[A-Za-z0-9]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?
                  type: string
                secretObject:
                  description: SecretObject specifies the configuration for the synchronized
                    Kubernetes secret object.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        Annotations contains key-value pairs representing annotations associated with the Kubernetes secret object.
                        The annotation prefix 'secrets-store.sync.x-k8s.io/ ' is reserved for use by the controller.
                        Creation fails if the reserved annotation key is already specified in the SecretSync object.
                      type: object
                      x-kubernetes-validations:
                      - message: Annotations should have < 253 characters for both
                          keys and values.
                        rule: (self.all(x, x.size() < 253 && self[x].size() < 253)
                          == true)
                      - message: Annotations should not contain 'secrets-store.sync.x-k8s.io'.
                          This key is reserved for the controller.
                        rule: (self.all(x, x.startsWith('secrets-store.sync.x-k8s.io')
                          == false))
                    data:
                      description: |-
                        Data is a slice of SecretObjectData that maps secret data from the external secret provider to the Kubernetes secret.
                        Each entry specifies the source secret in the external provider and the corresponding key in the Kubernetes secret.
                      items:
                        description: SecretObjectData defines the desired state of
                          synchronized data within a Kubernetes secret object.
                        properties:
                          sourcePath:
                            description: |-
                              SourcePath is the identifier for the secret data as defined by the external secret provider.
                              This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod.
                              The value should match the name of the secret as specified in the SecretProviderClass's objects array.
                            maxLength: 253
                            minLength: 1
                            pattern: ^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\/([0-9]+))*$
                            type: string
                          targetKey:
                            description: |-
                              TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored.
                              This key is used to reference the secret data within Kubernetes, and it should be unique within the secret.
                            maxLength: 253
                            minLength: 1
                            pattern: ^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\/([0-9]+))*$
                            type: string
                        required:
                        - sourcePath
                        - targetKey
                        type: object
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - targetKey
                      x-kubernetes-list-type: map
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        Labels contains key-value pairs representing labels associated with the Kubernetes secret object.
                        The controller uses labels to identify secret objects it has created.
                        On secret creation, the label 'secrets-store.sync.x-k8s.io/secretsync= <secret-sync-name>' is added.
                        The prefix 'secrets-store.sync.x-k8s.io/' is reserved for use by the controller.
                        Creation fails if the reserved label is specified in the SecretSync object with a different value.
                        On secret update, if the validation admission policy is set, the controller will check if the label
                        'secrets-store.sync.x-k8s.io/secretsync=<secret-sync-name>' is present. If the label is not present,
                        controller fails to update the secret.
                      type: object
                      x-kubernetes-validations:
                      - message: Labels should have < 63 characters for both keys
                          and values.
                        rule: (self.all(x, x.size() < 63 && self[x].size() < 63) ==
                          true)
                      - message: Labels should not contain secrets-store.sync.x-k8s.io.
                          This key is reserved for the controller.
                        rule: (self.all(x, x.startsWith('secrets-store.sync.x-k8s.io')
                          == false))
                    type:
                      description: |-
                        Type specifies the type of the Kubernetes secret object,
                        e.g. "Opaque", "kubernetes.io/basic-auth", "kubernetes.io/ssh-auth", "kubernetes.io/tls"
                        The controller must have permission to create secrets of the specified type.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - data
                  - type
                  type: object
                secretProviderClassName:
                  description: |-
                    SecretProviderClassName specifies the name of the SecretProviderClass resource,
                    which contains the information needed to access the cloud provider secret store.
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                secretSyncControllerName:
                  default: ""
                  description: |-
                    SecretSyncControllerName specifies the name of the secret sync controller used to synchronize
                    the secret.
                  type: string
                serviceAccountName:
                  description: |-
                    ServiceAccountName specifies the name of the service account used to access the cloud provider secret store.
                    The audience field in the service account token must be passed as parameter in the controller configuration.
                    The audience is used when requesting a token from the API server for the service account; the supported
                    audiences are defined by each provider.
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
              required:
              - secretObject
              - secretProviderClassName
              - serviceAccountName
              type: object
            status:
              description: SecretSyncStatus defines the observed state of the secret
                synchronization process.
              properties:
                conditions:
                  description: |-
                    Conditions represent the status of the secret create and update processes.
                    The status can be True, False, or Unknown with various reasons and messages explaining the state.
                    Examples of reasons include CreateSucceeded, ProviderError, InvalidClusterSecretLabelError,
                    InvalidClusterSecretAnnotationError, UnknownError, ValidatingAdmissionPolicyCheckFailed,
                    UserInputValidationFailed, ControllerSpcError, ControllerInternalError, NoValueChange,
                    and ValueChangeOrForceUpdateDetected.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource.\n---\nThis struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents
                      the observations of a foo's current state.\n\t    // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                      +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                      +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition
                      `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                      protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other
                      fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  maxItems: 16
                  type: array
                  x-kubernetes-list-map-keys:
                  - type
                  x-kubernetes-list-type: map
                lastSuccessfulSyncTime:
                  description: LastSuccessfulSyncTime represents the last time the
                    secret was retrieved from the Provider and updated.
                  format: date-time
                  type: string
                syncHash:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: SecretSync
      listKind: SecretSyncList
      plural: secretsyncs
      singular: secretsync
    conditions:
    - lastTransitionTime: "2024-12-03T01:12:38Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:12:38Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.11.3
      meta.helm.sh/release-name: azure-arc
      meta.helm.sh/release-namespace: azure-arc-release
    creationTimestamp: "2024-12-03T00:57:46Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: signingkeys.clusterconfig.azure.com
    resourceVersion: "5038"
    uid: efb28612-513f-4145-851a-738bdee62b02
  spec:
    conversion:
      strategy: None
    group: clusterconfig.azure.com
    names:
      kind: SigningKey
      listKind: SigningKeyList
      plural: signingkeys
      singular: signingkey
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: SigningKey is the Schema for the signingkeys API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SigningKeySpec defines the desired state of SigningKey
              properties:
                rotateKeysRequestedAt:
                  format: date-time
                  type: string
                syncToHisRequestedAt:
                  format: date-time
                  type: string
              type: object
            status:
              description: SigningKeyStatus defines the observed state of SigningKey
              properties:
                clusterIssuerUrl:
                  type: string
                clusterUid:
                  type: string
                jwksUri:
                  type: string
                lastHisSyncSuccessTime:
                  format: date-time
                  type: string
                lastKeyRotatationTime:
                  format: date-time
                  type: string
                openIdConfiguration:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: SigningKey
      listKind: SigningKeyList
      plural: signingkeys
      singular: signingkey
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:46Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","gatekeeper.sh/system":"yes"},"name":"syncsets.syncset.gatekeeper.sh"},"spec":{"group":"syncset.gatekeeper.sh","names":{"kind":"SyncSet","listKind":"SyncSetList","plural":"syncsets","singular":"syncset"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"SyncSet defines which resources Gatekeeper will cache. The union of all SyncSets plus the syncOnly field of Gatekeeper's Config resource defines the sets of resources that will be synced.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"properties":{"name":{"maxLength":63,"type":"string"}},"type":"object"},"spec":{"properties":{"gvks":{"items":{"properties":{"group":{"type":"string"},"kind":{"type":"string"},"version":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
    creationTimestamp: "2024-12-03T00:57:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      gatekeeper.sh/system: "yes"
    name: syncsets.syncset.gatekeeper.sh
    resourceVersion: "4787"
    uid: d95d1078-1d65-4c14-a12b-9cbdab04b904
  spec:
    conversion:
      strategy: None
    group: syncset.gatekeeper.sh
    names:
      kind: SyncSet
      listKind: SyncSetList
      plural: syncsets
      singular: syncset
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SyncSet defines which resources Gatekeeper will cache. The
            union of all SyncSets plus the syncOnly field of Gatekeeper's Config resource
            defines the sets of resources that will be synced.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              properties:
                name:
                  maxLength: 63
                  type: string
              type: object
            spec:
              properties:
                gvks:
                  items:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      version:
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: SyncSet
      listKind: SyncSetList
      plural: syncsets
      singular: syncset
    conditions:
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:57:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2024-12-03T01:11:09Z"
    generation: 1
    labels:
      generation: "1"
    name: syncsubvolumes.arccontainerstorage.azure.net
    resourceVersion: "10627"
    uid: 75bf2e34-da90-4df8-85b4-15e4b2fa993d
  spec:
    conversion:
      strategy: None
    group: arccontainerstorage.azure.net
    names:
      categories:
      - apps
      kind: SyncSubvolume
      listKind: SyncSubvolumeList
      plural: syncsubvolumes
      shortNames:
      - ssvs
      singular: syncsubvolume
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: Status
        type: string
      - jsonPath: .status.details
        name: StatusDetails
        type: string
      - jsonPath: .status.edgeSubvolumeRef
        name: EdgeSubvolumeRef
        type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            metadata:
              properties:
                name:
                  type: string
              type: object
            spec:
              properties:
                edgesubvolume:
                  description: Name of the EdgeSubvolume to sync
                  maxLength: 255
                  minLength: 1
                  type: string
              required:
              - edgesubvolume
              type: object
            status:
              default: {}
              properties:
                details:
                  type: string
                edgeSubvolumeRef:
                  type: string
                state:
                  default: unknown
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - apps
      kind: SyncSubvolume
      listKind: SyncSubvolumeList
      plural: syncsubvolumes
      shortNames:
      - ssvs
      singular: syncsubvolume
    conditions:
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:11:09Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"tcproutes.specs.smi-spec.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"specs.smi-spec.io","names":{"plural":"tcproutes","singular":"tcproute","shortNames":["tr"],"kind":"TCPRoute"},"scope":"Namespaced","versions":[{"name":"v1alpha4","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["matches"],"properties":{"matches":{"description":"Match conditions of this route.","type":"object","required":["ports"],"properties":{"ports":{"description":"Port numbers to match TCP traffic.","type":"array","items":{"type":"integer"}}}}}}}}}}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:22Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: tcproutes.specs.smi-spec.io
    resourceVersion: "9240"
    uid: 561ce0a4-cb71-4d5c-ac0a-69bcd4981101
  spec:
    conversion:
      strategy: None
    group: specs.smi-spec.io
    names:
      kind: TCPRoute
      listKind: TCPRouteList
      plural: tcproutes
      shortNames:
      - tr
      singular: tcproute
    scope: Namespaced
    versions:
    - name: v1alpha4
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                matches:
                  description: Match conditions of this route.
                  properties:
                    ports:
                      description: Port numbers to match TCP traffic.
                      items:
                        type: integer
                      type: array
                  required:
                  - ports
                  type: object
              required:
              - matches
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: TCPRoute
      listKind: TCPRouteList
      plural: tcproutes
      shortNames:
      - tr
      singular: tcproute
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha4
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"trafficsplits.split.smi-spec.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"split.smi-spec.io","names":{"plural":"trafficsplits","singular":"trafficsplit","shortNames":["ts"],"kind":"TrafficSplit","listKind":"TrafficSplitList"},"scope":"Namespaced","versions":[{"name":"v1alpha4","served":false,"storage":false,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["service","backends"],"properties":{"backends":{"description":"The backend services of this split.","type":"array","items":{"type":"object","required":["service","weight"],"properties":{"service":{"description":"Name of the Kubernetes service.","type":"string"},"weight":{"description":"Traffic weight value of this backend.","type":"number"}}}},"matches":{"description":"The HTTP route groups that this traffic split should match.","type":"array","items":{"type":"object","required":["kind","name"],"properties":{"kind":{"description":"Kind of the matching group.","type":"string","enum":["HTTPRouteGroup"]},"name":{"description":"Name of the matching group.","type":"string"}}}},"service":{"description":"The apex service of this split.","type":"string"}}}}}},"additionalPrinterColumns":[{"name":"Service","type":"string","description":"The apex service of this split.","jsonPath":".spec.service"}]},{"name":"v1alpha3","served":false,"storage":false,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["service","backends"],"properties":{"backends":{"description":"The backend services of this split.","type":"array","items":{"type":"object","required":["service","weight"],"properties":{"service":{"description":"Name of the Kubernetes service.","type":"string"},"weight":{"description":"Traffic weight value of this backend.","type":"number"}}}},"matches":{"description":"The HTTP route groups that this traffic split should match.","type":"array","items":{"type":"object","required":["kind","name"],"properties":{"kind":{"description":"Kind of the matching group.","type":"string","enum":["HTTPRouteGroup"]},"name":{"description":"Name of the matching group.","type":"string"}}}},"service":{"description":"The apex service of this split.","type":"string"}}}}}},"additionalPrinterColumns":[{"name":"Service","type":"string","description":"The apex service of this split.","jsonPath":".spec.service"}]},{"name":"v1alpha2","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["service","backends"],"properties":{"backends":{"description":"The backend services of this split.","type":"array","items":{"type":"object","required":["service","weight"],"properties":{"service":{"description":"Name of the Kubernetes service.","type":"string"},"weight":{"description":"Traffic weight value of this backend.","type":"number"}}}},"service":{"description":"The apex service of this split.","type":"string"}}}}}},"additionalPrinterColumns":[{"name":"Service","type":"string","description":"The apex service of this split.","jsonPath":".spec.service"}]}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:23Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: trafficsplits.split.smi-spec.io
    resourceVersion: "9257"
    uid: 47985486-a6f3-4f56-bdfe-70638a59cc19
  spec:
    conversion:
      strategy: None
    group: split.smi-spec.io
    names:
      kind: TrafficSplit
      listKind: TrafficSplitList
      plural: trafficsplits
      shortNames:
      - ts
      singular: trafficsplit
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The apex service of this split.
        jsonPath: .spec.service
        name: Service
        type: string
      name: v1alpha4
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                backends:
                  description: The backend services of this split.
                  items:
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        type: number
                    required:
                    - service
                    - weight
                    type: object
                  type: array
                matches:
                  description: The HTTP route groups that this traffic split should
                    match.
                  items:
                    properties:
                      kind:
                        description: Kind of the matching group.
                        enum:
                        - HTTPRouteGroup
                        type: string
                      name:
                        description: Name of the matching group.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                service:
                  description: The apex service of this split.
                  type: string
              required:
              - service
              - backends
              type: object
          type: object
      served: false
      storage: false
    - additionalPrinterColumns:
      - description: The apex service of this split.
        jsonPath: .spec.service
        name: Service
        type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                backends:
                  description: The backend services of this split.
                  items:
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        type: number
                    required:
                    - service
                    - weight
                    type: object
                  type: array
                matches:
                  description: The HTTP route groups that this traffic split should
                    match.
                  items:
                    properties:
                      kind:
                        description: Kind of the matching group.
                        enum:
                        - HTTPRouteGroup
                        type: string
                      name:
                        description: Name of the matching group.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                service:
                  description: The apex service of this split.
                  type: string
              required:
              - service
              - backends
              type: object
          type: object
      served: false
      storage: false
    - additionalPrinterColumns:
      - description: The apex service of this split.
        jsonPath: .spec.service
        name: Service
        type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                backends:
                  description: The backend services of this split.
                  items:
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        type: number
                    required:
                    - service
                    - weight
                    type: object
                  type: array
                service:
                  description: The apex service of this split.
                  type: string
              required:
              - service
              - backends
              type: object
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: TrafficSplit
      listKind: TrafficSplitList
      plural: trafficsplits
      shortNames:
      - ts
      singular: trafficsplit
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:23Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:23Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"traffictargets.access.smi-spec.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"access.smi-spec.io","names":{"plural":"traffictargets","singular":"traffictarget","shortNames":["tt"],"kind":"TrafficTarget"},"scope":"Namespaced","versions":[{"name":"v1alpha3","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["destination","rules","sources"],"properties":{"destination":{"description":"The destination of this traffic target.","type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of the destination.","type":"string"},"name":{"description":"Name of the destination.","type":"string"},"namespace":{"description":"Namespace of the destination.","type":"string"}}},"rules":{"description":"Specifications of this traffic target.","type":"array","items":{"type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of this spec.","type":"string","enum":["HTTPRouteGroup","TCPRoute","UDPRoute"]},"matches":{"description":"Match conditions of this spec.","type":"array","items":{"type":"string"}},"name":{"description":"Name of this spec.","type":"string"}}}},"sources":{"description":"Sources of this traffic target.","type":"array","items":{"type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of this source.","type":"string"},"name":{"description":"Name of this source.","type":"string"},"namespace":{"description":"Namespace of this source.","type":"string"}}}}}}}}}},{"name":"v1alpha2","served":false,"storage":false,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["destination"],"properties":{"destination":{"description":"The destination of this traffic target.","type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of the destination.","type":"string"},"name":{"description":"Name of the destination.","type":"string"},"namespace":{"description":"Namespace of the destination.","type":"string"},"port":{"description":"Port number of the destination.","type":"number"}}},"rules":{"description":"Specifications of this traffic target.","type":"array","items":{"type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of this spec.","type":"string","enum":["HTTPRouteGroup","TCPRoute"]},"matches":{"description":"Match conditions of this spec.","type":"array","items":{"type":"string"}},"name":{"description":"Name of this spec.","type":"string"}}}},"sources":{"description":"Sources of this traffic target.","type":"array","items":{"type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of this source.","type":"string"},"name":{"description":"Name of this source.","type":"string"},"namespace":{"description":"Namespace of this source.","type":"string"}}}}}}}}}},{"name":"v1alpha1","served":false,"storage":false,"schema":{"openAPIV3Schema":{"type":"object","required":["destination"],"properties":{"destination":{"description":"The destination of this traffic target.","type":"object","required":["name","kind","port"],"properties":{"kind":{"description":"Kind of the destination.","type":"string"},"name":{"description":"Name of the destination.","type":"string"},"namespace":{"description":"Namespace of the destination.","type":"string"},"port":{"description":"Port number of the destination.","type":"number"}}},"sources":{"description":"Sources of this traffic target.","type":"array","items":{"type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of this source.","type":"string"},"name":{"description":"Name of this source.","type":"string"},"namespace":{"description":"Namespace of this source.","type":"string"}}}},"specs":{"description":"Specifications of this traffic target.","type":"array","items":{"type":"object","required":["name","kind"],"properties":{"kind":{"description":"Kind of this spec.","type":"string","enum":["HTTPRouteGroup","TCPRoute"]},"matches":{"description":"Match conditions of this spec.","type":"array","items":{"type":"string"}},"name":{"description":"Name of this spec.","type":"string"}}}}}}}}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:22Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: traffictargets.access.smi-spec.io
    resourceVersion: "9249"
    uid: e1d2fe34-bed7-4b78-be08-ed78864ec6e6
  spec:
    conversion:
      strategy: None
    group: access.smi-spec.io
    names:
      kind: TrafficTarget
      listKind: TrafficTargetList
      plural: traffictargets
      shortNames:
      - tt
      singular: traffictarget
    scope: Namespaced
    versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                destination:
                  description: The destination of this traffic target.
                  properties:
                    kind:
                      description: Kind of the destination.
                      type: string
                    name:
                      description: Name of the destination.
                      type: string
                    namespace:
                      description: Namespace of the destination.
                      type: string
                  required:
                  - name
                  - kind
                  type: object
                rules:
                  description: Specifications of this traffic target.
                  items:
                    properties:
                      kind:
                        description: Kind of this spec.
                        enum:
                        - HTTPRouteGroup
                        - TCPRoute
                        - UDPRoute
                        type: string
                      matches:
                        description: Match conditions of this spec.
                        items:
                          type: string
                        type: array
                      name:
                        description: Name of this spec.
                        type: string
                    required:
                    - name
                    - kind
                    type: object
                  type: array
                sources:
                  description: Sources of this traffic target.
                  items:
                    properties:
                      kind:
                        description: Kind of this source.
                        type: string
                      name:
                        description: Name of this source.
                        type: string
                      namespace:
                        description: Namespace of this source.
                        type: string
                    required:
                    - name
                    - kind
                    type: object
                  type: array
              required:
              - destination
              - rules
              - sources
              type: object
          type: object
      served: true
      storage: true
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                destination:
                  description: The destination of this traffic target.
                  properties:
                    kind:
                      description: Kind of the destination.
                      type: string
                    name:
                      description: Name of the destination.
                      type: string
                    namespace:
                      description: Namespace of the destination.
                      type: string
                    port:
                      description: Port number of the destination.
                      type: number
                  required:
                  - name
                  - kind
                  type: object
                rules:
                  description: Specifications of this traffic target.
                  items:
                    properties:
                      kind:
                        description: Kind of this spec.
                        enum:
                        - HTTPRouteGroup
                        - TCPRoute
                        type: string
                      matches:
                        description: Match conditions of this spec.
                        items:
                          type: string
                        type: array
                      name:
                        description: Name of this spec.
                        type: string
                    required:
                    - name
                    - kind
                    type: object
                  type: array
                sources:
                  description: Sources of this traffic target.
                  items:
                    properties:
                      kind:
                        description: Kind of this source.
                        type: string
                      name:
                        description: Name of this source.
                        type: string
                      namespace:
                        description: Namespace of this source.
                        type: string
                    required:
                    - name
                    - kind
                    type: object
                  type: array
              required:
              - destination
              type: object
          type: object
      served: false
      storage: false
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            destination:
              description: The destination of this traffic target.
              properties:
                kind:
                  description: Kind of the destination.
                  type: string
                name:
                  description: Name of the destination.
                  type: string
                namespace:
                  description: Namespace of the destination.
                  type: string
                port:
                  description: Port number of the destination.
                  type: number
              required:
              - name
              - kind
              - port
              type: object
            sources:
              description: Sources of this traffic target.
              items:
                properties:
                  kind:
                    description: Kind of this source.
                    type: string
                  name:
                    description: Name of this source.
                    type: string
                  namespace:
                    description: Namespace of this source.
                    type: string
                required:
                - name
                - kind
                type: object
              type: array
            specs:
              description: Specifications of this traffic target.
              items:
                properties:
                  kind:
                    description: Kind of this spec.
                    enum:
                    - HTTPRouteGroup
                    - TCPRoute
                    type: string
                  matches:
                    description: Match conditions of this spec.
                    items:
                      type: string
                    type: array
                  name:
                    description: Name of this spec.
                    type: string
                required:
                - name
                - kind
                type: object
              type: array
          required:
          - destination
          type: object
      served: false
      storage: false
  status:
    acceptedNames:
      kind: TrafficTarget
      listKind: TrafficTargetList
      plural: traffictargets
      shortNames:
      - tt
      singular: traffictarget
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:22Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha3
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"kind":"CustomResourceDefinition","apiVersion":"apiextensions.k8s.io/v1","metadata":{"name":"upstreamtrafficsettings.policy.openservicemesh.io","creationTimestamp":null,"labels":{"app.kubernetes.io/name":"openservicemesh.io","openservicemesh.io/reconcile":"v1.2.10"}},"spec":{"group":"policy.openservicemesh.io","names":{"plural":"upstreamtrafficsettings","singular":"upstreamtrafficsetting","shortNames":["upstreamtrafficsetting"],"kind":"UpstreamTrafficSetting","listKind":"UpstreamTrafficSettingList"},"scope":"Namespaced","versions":[{"name":"v1alpha1","served":true,"storage":true,"schema":{"openAPIV3Schema":{"type":"object","properties":{"spec":{"type":"object","required":["host"],"properties":{"connectionSettings":{"description":"Connection settings for the upstream host.","type":"object","properties":{"http":{"description":"HTTP connection settings.","type":"object","properties":{"maxPendingRequests":{"description":"Maximum number of pending HTTP/1.1 requests allowed.","type":"integer","minimum":0},"maxRequests":{"description":"Maximum number of parallel HTTP requests allowed.","type":"integer","minimum":0},"maxRequestsPerConnection":{"description":"Maximum number of HTTP requests per connection allowed.","type":"integer","minimum":0},"maxRetries":{"description":"Maximum number of parallel retries allowed.","type":"integer","minimum":0}}},"tcp":{"description":"TCP connection settings.","type":"object","properties":{"connectTimeout":{"description":"TCP connection timeout.","type":"string"},"maxConnections":{"description":"Maximum number of TCP connections.","type":"integer","minimum":0}}}}},"host":{"description":"Upstream host the policy is applicabe to.","type":"string"},"httpRoutes":{"description":"HTTPRoutes defines the list of HTTP routes settings for the upstream host. Settings are applied at a per route level.","type":"array","items":{"description":"HTTP route settings for the given path.","type":"object","properties":{"path":{"description":"Path defines the HTTP path. This can be an RE2 regex value.","type":"string","minLength":1},"rateLimit":{"description":"Rate limiting policy applied per route.","type":"object","properties":{"local":{"description":"Local rate limiting policy applied per route.","type":"object","properties":{"burst":{"description":"Burst (optional) defines the number of requests above the baseline rate that are allowed in a short period of time.","type":"integer"},"requests":{"description":"Requests defines the number of requests allowed per unit of time before rate limiting occurs.","type":"integer","minimum":1},"responseHeadersToAdd":{"description":"ResponseHeadersToAdd (optional) defines the list of HTTP headers that should be added to each response for requests that have been rate limited.","type":"array","items":{"description":"Defines an HTTP header name/value pair.","type":"object","required":["name","value"],"properties":{"name":{"description":"Name defines the HTTP header name.","type":"string","minLength":1},"value":{"description":"Value defines the HTTP header value.","type":"string","minLength":1}}}},"responseStatusCode":{"description":"ResponseStatusCode (optional) defines the HTTP status code to use for responses to rate limited requests. Code must be in the 400-599 (inclusive) error range. If not specified, a default of 429 (Too Many Requests) is used.","type":"integer","maximum":599,"minimum":400},"unit":{"description":"Unit defines the period of time within which requests over the limit will be rate limited. Valid values are \"second\", \"minute\" and \"hour\".","type":"string","enum":["second","minute","hour"]}}}}}}}},"rateLimit":{"description":"Rate limiting policy.","type":"object","properties":{"local":{"description":"Policy responsible for rate limiting traffic at the upstream service.","type":"object","properties":{"http":{"description":"HTTP level local rate limiting to limit the number of requests per unit of time.","type":"object","properties":{"burst":{"description":"Burst (optional) defines the number of requests above the baseline rate that are allowed in a short period of time.","type":"integer"},"requests":{"description":"Requests defines the number of requests allowed per unit of time before rate limiting occurs.","type":"integer","minimum":1},"responseHeadersToAdd":{"description":"ResponseHeadersToAdd (optional) defines the list of HTTP headers that should be added to each response for requests that have been rate limited.","type":"array","items":{"description":"Defines an HTTP header name/value pair.","type":"object","required":["name","value"],"properties":{"name":{"description":"Name defines the HTTP header name.","type":"string","minLength":1},"value":{"description":"Value defines the HTTP header value.","type":"string","minLength":1}}}},"responseStatusCode":{"description":"ResponseStatusCode (optional) defines the HTTP status code to use for responses to rate limited requests. Code must be in the 400-599 (inclusive) error range. If not specified, a default of 429 (Too Many Requests) is used.","type":"integer","maximum":599,"minimum":400},"unit":{"description":"Unit defines the period of time within which requests over the limit will be rate limited. Valid values are \"second\", \"minute\" and \"hour\".","type":"string","enum":["second","minute","hour"]}}},"tcp":{"description":"TCP level local rate limiting to limit the number of connections per unit of time.","type":"object","properties":{"burst":{"description":"Burst (optional) defines the number of connections above the baseline rate that are allowed in a short period of time.","type":"integer"},"connections":{"description":"Connections defines the number of connections allowed per unit of time before rate limiting occurs.","type":"integer","minimum":1},"unit":{"description":"Unit defines the period of time within which connections over the limit will be rate limited. Valid values are \"second\", \"minute\" and \"hour\".","type":"string","enum":["second","minute","hour"]}}}}}}}}},"status":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}}},"subresources":{"status":{}},"additionalPrinterColumns":[{"name":"Status","type":"string","description":"Current status of the UpstreamTrafficSetting policy.","jsonPath":".status.currentStatus"}]}],"conversion":{"strategy":"None"}},"status":{"conditions":null,"acceptedNames":{"plural":"","kind":""},"storedVersions":null}}
    creationTimestamp: "2024-12-03T01:08:21Z"
    generation: 1
    labels:
      app.kubernetes.io/name: openservicemesh.io
      openservicemesh.io/reconcile: v1.2.10
    name: upstreamtrafficsettings.policy.openservicemesh.io
    resourceVersion: "9223"
    uid: 96b3ac34-443d-4841-9cab-3a97b1cd9528
  spec:
    conversion:
      strategy: None
    group: policy.openservicemesh.io
    names:
      kind: UpstreamTrafficSetting
      listKind: UpstreamTrafficSettingList
      plural: upstreamtrafficsettings
      shortNames:
      - upstreamtrafficsetting
      singular: upstreamtrafficsetting
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Current status of the UpstreamTrafficSetting policy.
        jsonPath: .status.currentStatus
        name: Status
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                connectionSettings:
                  description: Connection settings for the upstream host.
                  properties:
                    http:
                      description: HTTP connection settings.
                      properties:
                        maxPendingRequests:
                          description: Maximum number of pending HTTP/1.1 requests
                            allowed.
                          minimum: 0
                          type: integer
                        maxRequests:
                          description: Maximum number of parallel HTTP requests allowed.
                          minimum: 0
                          type: integer
                        maxRequestsPerConnection:
                          description: Maximum number of HTTP requests per connection
                            allowed.
                          minimum: 0
                          type: integer
                        maxRetries:
                          description: Maximum number of parallel retries allowed.
                          minimum: 0
                          type: integer
                      type: object
                    tcp:
                      description: TCP connection settings.
                      properties:
                        connectTimeout:
                          description: TCP connection timeout.
                          type: string
                        maxConnections:
                          description: Maximum number of TCP connections.
                          minimum: 0
                          type: integer
                      type: object
                  type: object
                host:
                  description: Upstream host the policy is applicabe to.
                  type: string
                httpRoutes:
                  description: HTTPRoutes defines the list of HTTP routes settings
                    for the upstream host. Settings are applied at a per route level.
                  items:
                    description: HTTP route settings for the given path.
                    properties:
                      path:
                        description: Path defines the HTTP path. This can be an RE2
                          regex value.
                        minLength: 1
                        type: string
                      rateLimit:
                        description: Rate limiting policy applied per route.
                        properties:
                          local:
                            description: Local rate limiting policy applied per route.
                            properties:
                              burst:
                                description: Burst (optional) defines the number of
                                  requests above the baseline rate that are allowed
                                  in a short period of time.
                                type: integer
                              requests:
                                description: Requests defines the number of requests
                                  allowed per unit of time before rate limiting occurs.
                                minimum: 1
                                type: integer
                              responseHeadersToAdd:
                                description: ResponseHeadersToAdd (optional) defines
                                  the list of HTTP headers that should be added to
                                  each response for requests that have been rate limited.
                                items:
                                  description: Defines an HTTP header name/value pair.
                                  properties:
                                    name:
                                      description: Name defines the HTTP header name.
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value defines the HTTP header value.
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              responseStatusCode:
                                description: ResponseStatusCode (optional) defines
                                  the HTTP status code to use for responses to rate
                                  limited requests. Code must be in the 400-599 (inclusive)
                                  error range. If not specified, a default of 429
                                  (Too Many Requests) is used.
                                maximum: 599
                                minimum: 400
                                type: integer
                              unit:
                                description: Unit defines the period of time within
                                  which requests over the limit will be rate limited.
                                  Valid values are "second", "minute" and "hour".
                                enum:
                                - second
                                - minute
                                - hour
                                type: string
                            type: object
                        type: object
                    type: object
                  type: array
                rateLimit:
                  description: Rate limiting policy.
                  properties:
                    local:
                      description: Policy responsible for rate limiting traffic at
                        the upstream service.
                      properties:
                        http:
                          description: HTTP level local rate limiting to limit the
                            number of requests per unit of time.
                          properties:
                            burst:
                              description: Burst (optional) defines the number of
                                requests above the baseline rate that are allowed
                                in a short period of time.
                              type: integer
                            requests:
                              description: Requests defines the number of requests
                                allowed per unit of time before rate limiting occurs.
                              minimum: 1
                              type: integer
                            responseHeadersToAdd:
                              description: ResponseHeadersToAdd (optional) defines
                                the list of HTTP headers that should be added to each
                                response for requests that have been rate limited.
                              items:
                                description: Defines an HTTP header name/value pair.
                                properties:
                                  name:
                                    description: Name defines the HTTP header name.
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value defines the HTTP header value.
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            responseStatusCode:
                              description: ResponseStatusCode (optional) defines the
                                HTTP status code to use for responses to rate limited
                                requests. Code must be in the 400-599 (inclusive)
                                error range. If not specified, a default of 429 (Too
                                Many Requests) is used.
                              maximum: 599
                              minimum: 400
                              type: integer
                            unit:
                              description: Unit defines the period of time within
                                which requests over the limit will be rate limited.
                                Valid values are "second", "minute" and "hour".
                              enum:
                              - second
                              - minute
                              - hour
                              type: string
                          type: object
                        tcp:
                          description: TCP level local rate limiting to limit the
                            number of connections per unit of time.
                          properties:
                            burst:
                              description: Burst (optional) defines the number of
                                connections above the baseline rate that are allowed
                                in a short period of time.
                              type: integer
                            connections:
                              description: Connections defines the number of connections
                                allowed per unit of time before rate limiting occurs.
                              minimum: 1
                              type: integer
                            unit:
                              description: Unit defines the period of time within
                                which connections over the limit will be rate limited.
                                Valid values are "second", "minute" and "hour".
                              enum:
                              - second
                              - minute
                              - hour
                              type: string
                          type: object
                      type: object
                  type: object
              required:
              - host
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: UpstreamTrafficSetting
      listKind: UpstreamTrafficSettingList
      plural: upstreamtrafficsettings
      shortNames:
      - upstreamtrafficsetting
      singular: upstreamtrafficsetting
    conditions:
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T01:08:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/665
      controller-gen.kubebuilder.io/version: v0.8.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/665","controller-gen.kubebuilder.io/version":"v0.8.0"},"creationTimestamp":null,"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true"},"name":"volumesnapshotclasses.snapshot.storage.k8s.io"},"spec":{"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshotClass","listKind":"VolumeSnapshotClassList","plural":"volumesnapshotclasses","shortNames":["vsclass","vsclasses"],"singular":"volumesnapshotclass"},"scope":"Cluster","versions":[{"additionalPrinterColumns":[{"jsonPath":".driver","name":"Driver","type":"string"},{"description":"Determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.","jsonPath":".deletionPolicy","name":"DeletionPolicy","type":"string"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"VolumeSnapshotClass specifies parameters that a underlying storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses are non-namespaced","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"deletionPolicy":{"description":"deletionPolicy determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the storage driver that handles this VolumeSnapshotClass. Required.","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"parameters":{"additionalProperties":{"type":"string"},"description":"parameters is a key-value map with storage driver specific parameters for creating snapshots. These values are opaque to Kubernetes.","type":"object"}},"required":["deletionPolicy","driver"],"type":"object"}},"served":true,"storage":true,"subresources":{}},{"additionalPrinterColumns":[{"jsonPath":".driver","name":"Driver","type":"string"},{"description":"Determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.","jsonPath":".deletionPolicy","name":"DeletionPolicy","type":"string"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"deprecated":true,"deprecationWarning":"snapshot.storage.k8s.io/v1beta1 VolumeSnapshotClass is deprecated; use snapshot.storage.k8s.io/v1 VolumeSnapshotClass","name":"v1beta1","schema":{"openAPIV3Schema":{"description":"VolumeSnapshotClass specifies parameters that a underlying storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses are non-namespaced","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"deletionPolicy":{"description":"deletionPolicy determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the storage driver that handles this VolumeSnapshotClass. Required.","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"parameters":{"additionalProperties":{"type":"string"},"description":"parameters is a key-value map with storage driver specific parameters for creating snapshots. These values are opaque to Kubernetes.","type":"object"}},"required":["deletionPolicy","driver"],"type":"object"}},"served":false,"storage":false,"subresources":{}}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
    creationTimestamp: "2024-12-03T00:47:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
    name: volumesnapshotclasses.snapshot.storage.k8s.io
    resourceVersion: "420"
    uid: 74c8fb25-17bf-4cd9-abc7-d9a301d606f8
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshotClass
      listKind: VolumeSnapshotClassList
      plural: volumesnapshotclasses
      shortNames:
      - vsclass
      - vsclasses
      singular: volumesnapshotclass
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .driver
        name: Driver
        type: string
      - description: Determines whether a VolumeSnapshotContent created through the
          VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
        jsonPath: .deletionPolicy
        name: DeletionPolicy
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotClass specifies parameters that a underlying
            storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass
            is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses
            are non-namespaced
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            deletionPolicy:
              description: deletionPolicy determines whether a VolumeSnapshotContent
                created through the VolumeSnapshotClass should be deleted when its
                bound VolumeSnapshot is deleted. Supported values are "Retain" and
                "Delete". "Retain" means that the VolumeSnapshotContent and its physical
                snapshot on underlying storage system are kept. "Delete" means that
                the VolumeSnapshotContent and its physical snapshot on underlying
                storage system are deleted. Required.
              enum:
              - Delete
              - Retain
              type: string
            driver:
              description: driver is the name of the storage driver that handles this
                VolumeSnapshotClass. Required.
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            parameters:
              additionalProperties:
                type: string
              description: parameters is a key-value map with storage driver specific
                parameters for creating snapshots. These values are opaque to Kubernetes.
              type: object
          required:
          - deletionPolicy
          - driver
          type: object
      served: true
      storage: true
      subresources: {}
    - additionalPrinterColumns:
      - jsonPath: .driver
        name: Driver
        type: string
      - description: Determines whether a VolumeSnapshotContent created through the
          VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
        jsonPath: .deletionPolicy
        name: DeletionPolicy
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      deprecated: true
      deprecationWarning: snapshot.storage.k8s.io/v1beta1 VolumeSnapshotClass is deprecated;
        use snapshot.storage.k8s.io/v1 VolumeSnapshotClass
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotClass specifies parameters that a underlying
            storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass
            is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses
            are non-namespaced
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            deletionPolicy:
              description: deletionPolicy determines whether a VolumeSnapshotContent
                created through the VolumeSnapshotClass should be deleted when its
                bound VolumeSnapshot is deleted. Supported values are "Retain" and
                "Delete". "Retain" means that the VolumeSnapshotContent and its physical
                snapshot on underlying storage system are kept. "Delete" means that
                the VolumeSnapshotContent and its physical snapshot on underlying
                storage system are deleted. Required.
              enum:
              - Delete
              - Retain
              type: string
            driver:
              description: driver is the name of the storage driver that handles this
                VolumeSnapshotClass. Required.
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            parameters:
              additionalProperties:
                type: string
              description: parameters is a key-value map with storage driver specific
                parameters for creating snapshots. These values are opaque to Kubernetes.
              type: object
          required:
          - deletionPolicy
          - driver
          type: object
      served: false
      storage: false
      subresources: {}
  status:
    acceptedNames:
      kind: VolumeSnapshotClass
      listKind: VolumeSnapshotClassList
      plural: volumesnapshotclasses
      shortNames:
      - vsclass
      - vsclasses
      singular: volumesnapshotclass
    conditions:
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/665
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/665
      controller-gen.kubebuilder.io/version: v0.8.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/665","controller-gen.kubebuilder.io/version":"v0.8.0"},"creationTimestamp":null,"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true"},"name":"volumesnapshotcontents.snapshot.storage.k8s.io"},"spec":{"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshotContent","listKind":"VolumeSnapshotContentList","plural":"volumesnapshotcontents","shortNames":["vsc","vscs"],"singular":"volumesnapshotcontent"},"scope":"Cluster","versions":[{"additionalPrinterColumns":[{"description":"Indicates if the snapshot is ready to be used to restore a volume.","jsonPath":".status.readyToUse","name":"ReadyToUse","type":"boolean"},{"description":"Represents the complete size of the snapshot in bytes","jsonPath":".status.restoreSize","name":"RestoreSize","type":"integer"},{"description":"Determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted.","jsonPath":".spec.deletionPolicy","name":"DeletionPolicy","type":"string"},{"description":"Name of the CSI driver used to create the physical snapshot on the underlying storage system.","jsonPath":".spec.driver","name":"Driver","type":"string"},{"description":"Name of the VolumeSnapshotClass to which this snapshot belongs.","jsonPath":".spec.volumeSnapshotClassName","name":"VolumeSnapshotClass","type":"string"},{"description":"Name of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.","jsonPath":".spec.volumeSnapshotRef.name","name":"VolumeSnapshot","type":"string"},{"description":"Namespace of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.","jsonPath":".spec.volumeSnapshotRef.namespace","name":"VolumeSnapshotNamespace","type":"string"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"VolumeSnapshotContent represents the actual \"on-disk\" snapshot object in the underlying storage system","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.","properties":{"deletionPolicy":{"description":"deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the \"DeletionPolicy\" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the VolumeSnapshotContent object. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.","type":"string"},"source":{"description":"source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.","oneOf":[{"required":["snapshotHandle"]},{"required":["volumeHandle"]}],"properties":{"snapshotHandle":{"description":"snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.","type":"string"},"volumeHandle":{"description":"volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.","type":"string"}},"type":"object"},"sourceVolumeMode":{"description":"SourceVolumeMode is the mode of the volume whose snapshot is taken. Can be either .Filesystem. or .Block.. If not specified, it indicates the source volume's mode is unknown. This field is immutable. This field is an alpha field.","type":"string"},"volumeSnapshotClassName":{"description":"name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.","type":"string"},"volumeSnapshotRef":{"description":"volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.","properties":{"apiVersion":{"description":"API version of the referent.","type":"string"},"fieldPath":{"description":"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.","type":"string"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"namespace":{"description":"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/","type":"string"},"resourceVersion":{"description":"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"uid":{"description":"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids","type":"string"}},"type":"object"}},"required":["deletionPolicy","driver","source","volumeSnapshotRef"],"type":"object"},"status":{"description":"status represents the current information of a snapshot.","properties":{"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.","format":"int64","type":"integer"},"error":{"description":"error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"description":"restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","format":"int64","minimum":0,"type":"integer"},"snapshotHandle":{"description":"snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.","type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"additionalPrinterColumns":[{"description":"Indicates if the snapshot is ready to be used to restore a volume.","jsonPath":".status.readyToUse","name":"ReadyToUse","type":"boolean"},{"description":"Represents the complete size of the snapshot in bytes","jsonPath":".status.restoreSize","name":"RestoreSize","type":"integer"},{"description":"Determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted.","jsonPath":".spec.deletionPolicy","name":"DeletionPolicy","type":"string"},{"description":"Name of the CSI driver used to create the physical snapshot on the underlying storage system.","jsonPath":".spec.driver","name":"Driver","type":"string"},{"description":"Name of the VolumeSnapshotClass to which this snapshot belongs.","jsonPath":".spec.volumeSnapshotClassName","name":"VolumeSnapshotClass","type":"string"},{"description":"Name of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.","jsonPath":".spec.volumeSnapshotRef.name","name":"VolumeSnapshot","type":"string"},{"description":"Namespace of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.","jsonPath":".spec.volumeSnapshotRef.namespace","name":"VolumeSnapshotNamespace","type":"string"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"deprecated":true,"deprecationWarning":"snapshot.storage.k8s.io/v1beta1 VolumeSnapshotContent is deprecated; use snapshot.storage.k8s.io/v1 VolumeSnapshotContent","name":"v1beta1","schema":{"openAPIV3Schema":{"description":"VolumeSnapshotContent represents the actual \"on-disk\" snapshot object in the underlying storage system","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.","properties":{"deletionPolicy":{"description":"deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the \"DeletionPolicy\" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.","type":"string"},"source":{"description":"source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.","properties":{"snapshotHandle":{"description":"snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.","type":"string"},"volumeHandle":{"description":"volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.","type":"string"}},"type":"object"},"volumeSnapshotClassName":{"description":"name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.","type":"string"},"volumeSnapshotRef":{"description":"volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.","properties":{"apiVersion":{"description":"API version of the referent.","type":"string"},"fieldPath":{"description":"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.","type":"string"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"namespace":{"description":"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/","type":"string"},"resourceVersion":{"description":"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"uid":{"description":"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids","type":"string"}},"type":"object"}},"required":["deletionPolicy","driver","source","volumeSnapshotRef"],"type":"object"},"status":{"description":"status represents the current information of a snapshot.","properties":{"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.","format":"int64","type":"integer"},"error":{"description":"error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"description":"restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","format":"int64","minimum":0,"type":"integer"},"snapshotHandle":{"description":"snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.","type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"served":false,"storage":false,"subresources":{"status":{}}}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
    creationTimestamp: "2024-12-03T00:47:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
    name: volumesnapshotcontents.snapshot.storage.k8s.io
    resourceVersion: "423"
    uid: 54b835ba-5e3a-4ba7-af13-b1ece0316aa1
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshotContent
      listKind: VolumeSnapshotContentList
      plural: volumesnapshotcontents
      shortNames:
      - vsc
      - vscs
      singular: volumesnapshotcontent
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Indicates if the snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: Represents the complete size of the snapshot in bytes
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: integer
      - description: Determines whether this VolumeSnapshotContent and its physical
          snapshot on the underlying storage system should be deleted when its bound
          VolumeSnapshot is deleted.
        jsonPath: .spec.deletionPolicy
        name: DeletionPolicy
        type: string
      - description: Name of the CSI driver used to create the physical snapshot on
          the underlying storage system.
        jsonPath: .spec.driver
        name: Driver
        type: string
      - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
        jsonPath: .spec.volumeSnapshotClassName
        name: VolumeSnapshotClass
        type: string
      - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent
          object is bound.
        jsonPath: .spec.volumeSnapshotRef.name
        name: VolumeSnapshot
        type: string
      - description: Namespace of the VolumeSnapshot object to which this VolumeSnapshotContent
          object is bound.
        jsonPath: .spec.volumeSnapshotRef.namespace
        name: VolumeSnapshotNamespace
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotContent represents the actual "on-disk" snapshot
            object in the underlying storage system
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: spec defines properties of a VolumeSnapshotContent created
                by the underlying storage system. Required.
              properties:
                deletionPolicy:
                  description: deletionPolicy determines whether this VolumeSnapshotContent
                    and its physical snapshot on the underlying storage system should
                    be deleted when its bound VolumeSnapshot is deleted. Supported
                    values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent
                    and its physical snapshot on underlying storage system are kept.
                    "Delete" means that the VolumeSnapshotContent and its physical
                    snapshot on underlying storage system are deleted. For dynamically
                    provisioned snapshots, this field will automatically be filled
                    in by the CSI snapshotter sidecar with the "DeletionPolicy" field
                    defined in the corresponding VolumeSnapshotClass. For pre-existing
                    snapshots, users MUST specify this field when creating the VolumeSnapshotContent
                    object. Required.
                  enum:
                  - Delete
                  - Retain
                  type: string
                driver:
                  description: driver is the name of the CSI driver used to create
                    the physical snapshot on the underlying storage system. This MUST
                    be the same as the name returned by the CSI GetPluginName() call
                    for that driver. Required.
                  type: string
                source:
                  description: source specifies whether the snapshot is (or should
                    be) dynamically provisioned or already exists, and just requires
                    a Kubernetes object representation. This field is immutable after
                    creation. Required.
                  oneOf:
                  - required:
                    - snapshotHandle
                  - required:
                    - volumeHandle
                  properties:
                    snapshotHandle:
                      description: snapshotHandle specifies the CSI "snapshot_id"
                        of a pre-existing snapshot on the underlying storage system
                        for which a Kubernetes object representation was (or should
                        be) created. This field is immutable.
                      type: string
                    volumeHandle:
                      description: volumeHandle specifies the CSI "volume_id" of the
                        volume from which a snapshot should be dynamically taken from.
                        This field is immutable.
                      type: string
                  type: object
                sourceVolumeMode:
                  description: SourceVolumeMode is the mode of the volume whose snapshot
                    is taken. Can be either .Filesystem. or .Block.. If not specified,
                    it indicates the source volume's mode is unknown. This field is
                    immutable. This field is an alpha field.
                  type: string
                volumeSnapshotClassName:
                  description: name of the VolumeSnapshotClass from which this snapshot
                    was (or will be) created. Note that after provisioning, the VolumeSnapshotClass
                    may be deleted or recreated with different set of values, and
                    as such, should not be referenced post-snapshot creation.
                  type: string
                volumeSnapshotRef:
                  description: volumeSnapshotRef specifies the VolumeSnapshot object
                    to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName
                    field must reference to this VolumeSnapshotContent's name for
                    the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent
                    object, name and namespace of the VolumeSnapshot object MUST be
                    provided for binding to happen. This field is immutable after
                    creation. Required.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - deletionPolicy
              - driver
              - source
              - volumeSnapshotRef
              type: object
            status:
              description: status represents the current information of a snapshot.
              properties:
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in by the CSI
                    snapshotter sidecar with the "creation_time" value returned from
                    CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this
                    field will be filled with the "creation_time" value returned from
                    the CSI "ListSnapshots" gRPC call if the driver supports it. If
                    not specified, it indicates the creation time is unknown. The
                    format of this field is a Unix nanoseconds time encoded as an
                    int64. On Unix, the command `date +%s%N` returns the current time
                    in nanoseconds since 1970-01-01 00:00:00 UTC.
                  format: int64
                  type: integer
                error:
                  description: error is the last observed error during snapshot creation,
                    if any. Upon success after retry, this error field will be cleared.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if a snapshot is ready to be used
                    to restore a volume. In dynamic snapshot creation case, this field
                    will be filled in by the CSI snapshotter sidecar with the "ready_to_use"
                    value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                    snapshot, this field will be filled with the "ready_to_use" value
                    returned from the CSI "ListSnapshots" gRPC call if the driver
                    supports it, otherwise, this field will be set to "True". If not
                    specified, it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  description: restoreSize represents the complete size of the snapshot
                    in bytes. In dynamic snapshot creation case, this field will be
                    filled in by the CSI snapshotter sidecar with the "size_bytes"
                    value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                    snapshot, this field will be filled with the "size_bytes" value
                    returned from the CSI "ListSnapshots" gRPC call if the driver
                    supports it. When restoring a volume from this snapshot, the size
                    of the volume MUST NOT be smaller than the restoreSize if it is
                    specified, otherwise the restoration will fail. If not specified,
                    it indicates that the size is unknown.
                  format: int64
                  minimum: 0
                  type: integer
                snapshotHandle:
                  description: snapshotHandle is the CSI "snapshot_id" of a snapshot
                    on the underlying storage system. If not specified, it indicates
                    that dynamic snapshot creation has either failed or it is still
                    in progress.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Indicates if the snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: Represents the complete size of the snapshot in bytes
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: integer
      - description: Determines whether this VolumeSnapshotContent and its physical
          snapshot on the underlying storage system should be deleted when its bound
          VolumeSnapshot is deleted.
        jsonPath: .spec.deletionPolicy
        name: DeletionPolicy
        type: string
      - description: Name of the CSI driver used to create the physical snapshot on
          the underlying storage system.
        jsonPath: .spec.driver
        name: Driver
        type: string
      - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
        jsonPath: .spec.volumeSnapshotClassName
        name: VolumeSnapshotClass
        type: string
      - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent
          object is bound.
        jsonPath: .spec.volumeSnapshotRef.name
        name: VolumeSnapshot
        type: string
      - description: Namespace of the VolumeSnapshot object to which this VolumeSnapshotContent
          object is bound.
        jsonPath: .spec.volumeSnapshotRef.namespace
        name: VolumeSnapshotNamespace
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      deprecated: true
      deprecationWarning: snapshot.storage.k8s.io/v1beta1 VolumeSnapshotContent is
        deprecated; use snapshot.storage.k8s.io/v1 VolumeSnapshotContent
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotContent represents the actual "on-disk" snapshot
            object in the underlying storage system
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: spec defines properties of a VolumeSnapshotContent created
                by the underlying storage system. Required.
              properties:
                deletionPolicy:
                  description: deletionPolicy determines whether this VolumeSnapshotContent
                    and its physical snapshot on the underlying storage system should
                    be deleted when its bound VolumeSnapshot is deleted. Supported
                    values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent
                    and its physical snapshot on underlying storage system are kept.
                    "Delete" means that the VolumeSnapshotContent and its physical
                    snapshot on underlying storage system are deleted. For dynamically
                    provisioned snapshots, this field will automatically be filled
                    in by the CSI snapshotter sidecar with the "DeletionPolicy" field
                    defined in the corresponding VolumeSnapshotClass. For pre-existing
                    snapshots, users MUST specify this field when creating the  VolumeSnapshotContent
                    object. Required.
                  enum:
                  - Delete
                  - Retain
                  type: string
                driver:
                  description: driver is the name of the CSI driver used to create
                    the physical snapshot on the underlying storage system. This MUST
                    be the same as the name returned by the CSI GetPluginName() call
                    for that driver. Required.
                  type: string
                source:
                  description: source specifies whether the snapshot is (or should
                    be) dynamically provisioned or already exists, and just requires
                    a Kubernetes object representation. This field is immutable after
                    creation. Required.
                  properties:
                    snapshotHandle:
                      description: snapshotHandle specifies the CSI "snapshot_id"
                        of a pre-existing snapshot on the underlying storage system
                        for which a Kubernetes object representation was (or should
                        be) created. This field is immutable.
                      type: string
                    volumeHandle:
                      description: volumeHandle specifies the CSI "volume_id" of the
                        volume from which a snapshot should be dynamically taken from.
                        This field is immutable.
                      type: string
                  type: object
                volumeSnapshotClassName:
                  description: name of the VolumeSnapshotClass from which this snapshot
                    was (or will be) created. Note that after provisioning, the VolumeSnapshotClass
                    may be deleted or recreated with different set of values, and
                    as such, should not be referenced post-snapshot creation.
                  type: string
                volumeSnapshotRef:
                  description: volumeSnapshotRef specifies the VolumeSnapshot object
                    to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName
                    field must reference to this VolumeSnapshotContent's name for
                    the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent
                    object, name and namespace of the VolumeSnapshot object MUST be
                    provided for binding to happen. This field is immutable after
                    creation. Required.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - deletionPolicy
              - driver
              - source
              - volumeSnapshotRef
              type: object
            status:
              description: status represents the current information of a snapshot.
              properties:
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in by the CSI
                    snapshotter sidecar with the "creation_time" value returned from
                    CSI "CreateSnapshot" gRPC call. For a pre-existing snapshot, this
                    field will be filled with the "creation_time" value returned from
                    the CSI "ListSnapshots" gRPC call if the driver supports it. If
                    not specified, it indicates the creation time is unknown. The
                    format of this field is a Unix nanoseconds time encoded as an
                    int64. On Unix, the command `date +%s%N` returns the current time
                    in nanoseconds since 1970-01-01 00:00:00 UTC.
                  format: int64
                  type: integer
                error:
                  description: error is the last observed error during snapshot creation,
                    if any. Upon success after retry, this error field will be cleared.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if a snapshot is ready to be used
                    to restore a volume. In dynamic snapshot creation case, this field
                    will be filled in by the CSI snapshotter sidecar with the "ready_to_use"
                    value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                    snapshot, this field will be filled with the "ready_to_use" value
                    returned from the CSI "ListSnapshots" gRPC call if the driver
                    supports it, otherwise, this field will be set to "True". If not
                    specified, it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  description: restoreSize represents the complete size of the snapshot
                    in bytes. In dynamic snapshot creation case, this field will be
                    filled in by the CSI snapshotter sidecar with the "size_bytes"
                    value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                    snapshot, this field will be filled with the "size_bytes" value
                    returned from the CSI "ListSnapshots" gRPC call if the driver
                    supports it. When restoring a volume from this snapshot, the size
                    of the volume MUST NOT be smaller than the restoreSize if it is
                    specified, otherwise the restoration will fail. If not specified,
                    it indicates that the size is unknown.
                  format: int64
                  minimum: 0
                  type: integer
                snapshotHandle:
                  description: snapshotHandle is the CSI "snapshot_id" of a snapshot
                    on the underlying storage system. If not specified, it indicates
                    that dynamic snapshot creation has either failed or it is still
                    in progress.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: VolumeSnapshotContent
      listKind: VolumeSnapshotContentList
      plural: volumesnapshotcontents
      shortNames:
      - vsc
      - vscs
      singular: volumesnapshotcontent
    conditions:
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/665
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/665
      controller-gen.kubebuilder.io/version: v0.8.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/665","controller-gen.kubebuilder.io/version":"v0.8.0"},"creationTimestamp":null,"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true"},"name":"volumesnapshots.snapshot.storage.k8s.io"},"spec":{"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshot","listKind":"VolumeSnapshotList","plural":"volumesnapshots","shortNames":["vs"],"singular":"volumesnapshot"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"description":"Indicates if the snapshot is ready to be used to restore a volume.","jsonPath":".status.readyToUse","name":"ReadyToUse","type":"boolean"},{"description":"If a new snapshot needs to be created, this contains the name of the source PVC from which this snapshot was (or will be) created.","jsonPath":".spec.source.persistentVolumeClaimName","name":"SourcePVC","type":"string"},{"description":"If a snapshot already exists, this contains the name of the existing VolumeSnapshotContent object representing the existing snapshot.","jsonPath":".spec.source.volumeSnapshotContentName","name":"SourceSnapshotContent","type":"string"},{"description":"Represents the minimum size of volume required to rehydrate from this snapshot.","jsonPath":".status.restoreSize","name":"RestoreSize","type":"string"},{"description":"The name of the VolumeSnapshotClass requested by the VolumeSnapshot.","jsonPath":".spec.volumeSnapshotClassName","name":"SnapshotClass","type":"string"},{"description":"Name of the VolumeSnapshotContent object to which the VolumeSnapshot object intends to bind to. Please note that verification of binding actually requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure both are pointing at each other. Binding MUST be verified prior to usage of this object.","jsonPath":".status.boundVolumeSnapshotContentName","name":"SnapshotContent","type":"string"},{"description":"Timestamp when the point-in-time snapshot was taken by the underlying storage system.","jsonPath":".status.creationTime","name":"CreationTime","type":"date"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.","properties":{"source":{"description":"source specifies where a snapshot will be created from. This field is immutable after creation. Required.","oneOf":[{"required":["persistentVolumeClaimName"]},{"required":["volumeSnapshotContentName"]}],"properties":{"persistentVolumeClaimName":{"description":"persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.","type":"string"},"volumeSnapshotContentName":{"description":"volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.","type":"string"}},"type":"object"},"volumeSnapshotClassName":{"description":"VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.","type":"string"}},"required":["source"],"type":"object"},"status":{"description":"status represents the current information of a snapshot. Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.","properties":{"boundVolumeSnapshotContentName":{"description":"boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.","type":"string"},"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.","format":"date-time","type":"string"},"error":{"description":"error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurs during the snapshot creation. Upon success, this error field will be cleared.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"description":"restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","type":"string","x-kubernetes-int-or-string":true}},"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"additionalPrinterColumns":[{"description":"Indicates if the snapshot is ready to be used to restore a volume.","jsonPath":".status.readyToUse","name":"ReadyToUse","type":"boolean"},{"description":"If a new snapshot needs to be created, this contains the name of the source PVC from which this snapshot was (or will be) created.","jsonPath":".spec.source.persistentVolumeClaimName","name":"SourcePVC","type":"string"},{"description":"If a snapshot already exists, this contains the name of the existing VolumeSnapshotContent object representing the existing snapshot.","jsonPath":".spec.source.volumeSnapshotContentName","name":"SourceSnapshotContent","type":"string"},{"description":"Represents the minimum size of volume required to rehydrate from this snapshot.","jsonPath":".status.restoreSize","name":"RestoreSize","type":"string"},{"description":"The name of the VolumeSnapshotClass requested by the VolumeSnapshot.","jsonPath":".spec.volumeSnapshotClassName","name":"SnapshotClass","type":"string"},{"description":"Name of the VolumeSnapshotContent object to which the VolumeSnapshot object intends to bind to. Please note that verification of binding actually requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure both are pointing at each other. Binding MUST be verified prior to usage of this object.","jsonPath":".status.boundVolumeSnapshotContentName","name":"SnapshotContent","type":"string"},{"description":"Timestamp when the point-in-time snapshot was taken by the underlying storage system.","jsonPath":".status.creationTime","name":"CreationTime","type":"date"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"deprecated":true,"deprecationWarning":"snapshot.storage.k8s.io/v1beta1 VolumeSnapshot is deprecated; use snapshot.storage.k8s.io/v1 VolumeSnapshot","name":"v1beta1","schema":{"openAPIV3Schema":{"description":"VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.","properties":{"source":{"description":"source specifies where a snapshot will be created from. This field is immutable after creation. Required.","properties":{"persistentVolumeClaimName":{"description":"persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.","type":"string"},"volumeSnapshotContentName":{"description":"volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.","type":"string"}},"type":"object"},"volumeSnapshotClassName":{"description":"VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.","type":"string"}},"required":["source"],"type":"object"},"status":{"description":"status represents the current information of a snapshot. Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.","properties":{"boundVolumeSnapshotContentName":{"description":"boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.","type":"string"},"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.","format":"date-time","type":"string"},"error":{"description":"error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurs during the snapshot creation. Upon success, this error field will be cleared.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"description":"restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","type":"string","x-kubernetes-int-or-string":true}},"type":"object"}},"required":["spec"],"type":"object"}},"served":false,"storage":false,"subresources":{"status":{}}}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
    creationTimestamp: "2024-12-03T00:47:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
    name: volumesnapshots.snapshot.storage.k8s.io
    resourceVersion: "417"
    uid: 88694171-96ae-424a-98f6-469262d9cca1
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshot
      listKind: VolumeSnapshotList
      plural: volumesnapshots
      shortNames:
      - vs
      singular: volumesnapshot
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Indicates if the snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: If a new snapshot needs to be created, this contains the name
          of the source PVC from which this snapshot was (or will be) created.
        jsonPath: .spec.source.persistentVolumeClaimName
        name: SourcePVC
        type: string
      - description: If a snapshot already exists, this contains the name of the existing
          VolumeSnapshotContent object representing the existing snapshot.
        jsonPath: .spec.source.volumeSnapshotContentName
        name: SourceSnapshotContent
        type: string
      - description: Represents the minimum size of volume required to rehydrate from
          this snapshot.
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: string
      - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
        jsonPath: .spec.volumeSnapshotClassName
        name: SnapshotClass
        type: string
      - description: Name of the VolumeSnapshotContent object to which the VolumeSnapshot
          object intends to bind to. Please note that verification of binding actually
          requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure
          both are pointing at each other. Binding MUST be verified prior to usage
          of this object.
        jsonPath: .status.boundVolumeSnapshotContentName
        name: SnapshotContent
        type: string
      - description: Timestamp when the point-in-time snapshot was taken by the underlying
          storage system.
        jsonPath: .status.creationTime
        name: CreationTime
        type: date
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshot is a user's request for either creating a point-in-time
            snapshot of a persistent volume, or binding to a pre-existing snapshot.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: 'spec defines the desired characteristics of a snapshot
                requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
                Required.'
              properties:
                source:
                  description: source specifies where a snapshot will be created from.
                    This field is immutable after creation. Required.
                  oneOf:
                  - required:
                    - persistentVolumeClaimName
                  - required:
                    - volumeSnapshotContentName
                  properties:
                    persistentVolumeClaimName:
                      description: persistentVolumeClaimName specifies the name of
                        the PersistentVolumeClaim object representing the volume from
                        which a snapshot should be created. This PVC is assumed to
                        be in the same namespace as the VolumeSnapshot object. This
                        field should be set if the snapshot does not exists, and needs
                        to be created. This field is immutable.
                      type: string
                    volumeSnapshotContentName:
                      description: volumeSnapshotContentName specifies the name of
                        a pre-existing VolumeSnapshotContent object representing an
                        existing volume snapshot. This field should be set if the
                        snapshot already exists and only needs a representation in
                        Kubernetes. This field is immutable.
                      type: string
                  type: object
                volumeSnapshotClassName:
                  description: 'VolumeSnapshotClassName is the name of the VolumeSnapshotClass
                    requested by the VolumeSnapshot. VolumeSnapshotClassName may be
                    left nil to indicate that the default SnapshotClass should be
                    used. A given cluster may have multiple default Volume SnapshotClasses:
                    one default per CSI Driver. If a VolumeSnapshot does not specify
                    a SnapshotClass, VolumeSnapshotSource will be checked to figure
                    out what the associated CSI Driver is, and the default VolumeSnapshotClass
                    associated with that CSI Driver will be used. If more than one
                    VolumeSnapshotClass exist for a given CSI Driver and more than
                    one have been marked as default, CreateSnapshot will fail and
                    generate an event. Empty string is not allowed for this field.'
                  type: string
              required:
              - source
              type: object
            status:
              description: status represents the current information of a snapshot.
                Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent
                objects is successful (by validating that both VolumeSnapshot and
                VolumeSnapshotContent point at each other) before using this object.
              properties:
                boundVolumeSnapshotContentName:
                  description: 'boundVolumeSnapshotContentName is the name of the
                    VolumeSnapshotContent object to which this VolumeSnapshot object
                    intends to bind to. If not specified, it indicates that the VolumeSnapshot
                    object has not been successfully bound to a VolumeSnapshotContent
                    object yet. NOTE: To avoid possible security issues, consumers
                    must verify binding between VolumeSnapshot and VolumeSnapshotContent
                    objects is successful (by validating that both VolumeSnapshot
                    and VolumeSnapshotContent point at each other) before using this
                    object.'
                  type: string
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in by the snapshot
                    controller with the "creation_time" value returned from CSI "CreateSnapshot"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "creation_time" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. If not specified, it may
                    indicate that the creation time of the snapshot is unknown.
                  format: date-time
                  type: string
                error:
                  description: error is the last observed error during snapshot creation,
                    if any. This field could be helpful to upper level controllers(i.e.,
                    application controller) to decide whether they should continue
                    on waiting for the snapshot to be created based on the type of
                    error reported. The snapshot controller will keep retrying when
                    an error occurs during the snapshot creation. Upon success, this
                    error field will be cleared.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if the snapshot is ready to be
                    used to restore a volume. In dynamic snapshot creation case, this
                    field will be filled in by the snapshot controller with the "ready_to_use"
                    value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                    snapshot, this field will be filled with the "ready_to_use" value
                    returned from the CSI "ListSnapshots" gRPC call if the driver
                    supports it, otherwise, this field will be set to "True". If not
                    specified, it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  description: restoreSize represents the minimum size of volume required
                    to create a volume from this snapshot. In dynamic snapshot creation
                    case, this field will be filled in by the snapshot controller
                    with the "size_bytes" value returned from CSI "CreateSnapshot"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "size_bytes" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. When restoring a volume from
                    this snapshot, the size of the volume MUST NOT be smaller than
                    the restoreSize if it is specified, otherwise the restoration
                    will fail. If not specified, it indicates that the size is unknown.
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  type: string
                  x-kubernetes-int-or-string: true
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
      - description: Indicates if the snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: If a new snapshot needs to be created, this contains the name
          of the source PVC from which this snapshot was (or will be) created.
        jsonPath: .spec.source.persistentVolumeClaimName
        name: SourcePVC
        type: string
      - description: If a snapshot already exists, this contains the name of the existing
          VolumeSnapshotContent object representing the existing snapshot.
        jsonPath: .spec.source.volumeSnapshotContentName
        name: SourceSnapshotContent
        type: string
      - description: Represents the minimum size of volume required to rehydrate from
          this snapshot.
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: string
      - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
        jsonPath: .spec.volumeSnapshotClassName
        name: SnapshotClass
        type: string
      - description: Name of the VolumeSnapshotContent object to which the VolumeSnapshot
          object intends to bind to. Please note that verification of binding actually
          requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure
          both are pointing at each other. Binding MUST be verified prior to usage
          of this object.
        jsonPath: .status.boundVolumeSnapshotContentName
        name: SnapshotContent
        type: string
      - description: Timestamp when the point-in-time snapshot was taken by the underlying
          storage system.
        jsonPath: .status.creationTime
        name: CreationTime
        type: date
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      deprecated: true
      deprecationWarning: snapshot.storage.k8s.io/v1beta1 VolumeSnapshot is deprecated;
        use snapshot.storage.k8s.io/v1 VolumeSnapshot
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshot is a user's request for either creating a point-in-time
            snapshot of a persistent volume, or binding to a pre-existing snapshot.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: 'spec defines the desired characteristics of a snapshot
                requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
                Required.'
              properties:
                source:
                  description: source specifies where a snapshot will be created from.
                    This field is immutable after creation. Required.
                  properties:
                    persistentVolumeClaimName:
                      description: persistentVolumeClaimName specifies the name of
                        the PersistentVolumeClaim object representing the volume from
                        which a snapshot should be created. This PVC is assumed to
                        be in the same namespace as the VolumeSnapshot object. This
                        field should be set if the snapshot does not exists, and needs
                        to be created. This field is immutable.
                      type: string
                    volumeSnapshotContentName:
                      description: volumeSnapshotContentName specifies the name of
                        a pre-existing VolumeSnapshotContent object representing an
                        existing volume snapshot. This field should be set if the
                        snapshot already exists and only needs a representation in
                        Kubernetes. This field is immutable.
                      type: string
                  type: object
                volumeSnapshotClassName:
                  description: 'VolumeSnapshotClassName is the name of the VolumeSnapshotClass
                    requested by the VolumeSnapshot. VolumeSnapshotClassName may be
                    left nil to indicate that the default SnapshotClass should be
                    used. A given cluster may have multiple default Volume SnapshotClasses:
                    one default per CSI Driver. If a VolumeSnapshot does not specify
                    a SnapshotClass, VolumeSnapshotSource will be checked to figure
                    out what the associated CSI Driver is, and the default VolumeSnapshotClass
                    associated with that CSI Driver will be used. If more than one
                    VolumeSnapshotClass exist for a given CSI Driver and more than
                    one have been marked as default, CreateSnapshot will fail and
                    generate an event. Empty string is not allowed for this field.'
                  type: string
              required:
              - source
              type: object
            status:
              description: status represents the current information of a snapshot.
                Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent
                objects is successful (by validating that both VolumeSnapshot and
                VolumeSnapshotContent point at each other) before using this object.
              properties:
                boundVolumeSnapshotContentName:
                  description: 'boundVolumeSnapshotContentName is the name of the
                    VolumeSnapshotContent object to which this VolumeSnapshot object
                    intends to bind to. If not specified, it indicates that the VolumeSnapshot
                    object has not been successfully bound to a VolumeSnapshotContent
                    object yet. NOTE: To avoid possible security issues, consumers
                    must verify binding between VolumeSnapshot and VolumeSnapshotContent
                    objects is successful (by validating that both VolumeSnapshot
                    and VolumeSnapshotContent point at each other) before using this
                    object.'
                  type: string
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in by the snapshot
                    controller with the "creation_time" value returned from CSI "CreateSnapshot"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "creation_time" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. If not specified, it may
                    indicate that the creation time of the snapshot is unknown.
                  format: date-time
                  type: string
                error:
                  description: error is the last observed error during snapshot creation,
                    if any. This field could be helpful to upper level controllers(i.e.,
                    application controller) to decide whether they should continue
                    on waiting for the snapshot to be created based on the type of
                    error reported. The snapshot controller will keep retrying when
                    an error occurs during the snapshot creation. Upon success, this
                    error field will be cleared.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if the snapshot is ready to be
                    used to restore a volume. In dynamic snapshot creation case, this
                    field will be filled in by the snapshot controller with the "ready_to_use"
                    value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                    snapshot, this field will be filled with the "ready_to_use" value
                    returned from the CSI "ListSnapshots" gRPC call if the driver
                    supports it, otherwise, this field will be set to "True". If not
                    specified, it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  description: restoreSize represents the minimum size of volume required
                    to create a volume from this snapshot. In dynamic snapshot creation
                    case, this field will be filled in by the snapshot controller
                    with the "size_bytes" value returned from CSI "CreateSnapshot"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "size_bytes" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. When restoring a volume from
                    this snapshot, the size of the volume MUST NOT be smaller than
                    the restoreSize if it is specified, otherwise the restoration
                    will fail. If not specified, it indicates that the size is unknown.
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  type: string
                  x-kubernetes-int-or-string: true
              type: object
          required:
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: VolumeSnapshot
      listKind: VolumeSnapshotList
      plural: volumesnapshots
      shortNames:
      - vs
      singular: volumesnapshot
    conditions:
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2024-12-03T00:47:28Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/665
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    storedVersions:
    - v1
kind: List
metadata:
  resourceVersion: ""
