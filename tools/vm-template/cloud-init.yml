#cloud-config

package_update: true
package_upgrade: true
apt:
  preserve_sources_list: true
  sources:
    msft.list:
      source: 'deb [signed-by=$KEY_FILE] https://packages.microsoft.com/ubuntu/24.04/prod noble main'
      keyid: BC528686B50D79E339D3721CEB3E94ADBE1229CF
    azurecli.list:
      source: 'deb [signed-by=$KEY_FILE] https://packages.microsoft.com/repos/azure-cli noble main'
      keyid: BC528686B50D79E339D3721CEB3E94ADBE1229CF
    kubernetes.list:
      source: 'deb [signed-by=$KEY_FILE] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /'
      keyid: DE15B14486CD377B9E876E1A234654DA9A296436

packages:
  - azure-cli
  - kubectl
  - git
  - moby-cli
  - moby-engine

runcmd:
  - MYUSER=`id -un 1000`
  - MYHOME=`eval echo ~$MYUSER`
  - MYWORK=/workspaces
  - LOCATION={{{location}}}
  - RESOURCE_GROUP={{{resource_group}}}
  - CLUSTER_NAME={{{cluster_name}}}
  - CUSTOM_LOCATION_ID={{{custom_location_id}}}
  - |
    set -o errexit # fail if any command fails

    mkdir $MYWORK
    cd $MYWORK

    STORAGE_ACCOUNT=${CLUSTER_NAME}storage
    SCHEMA_REGISTRY=${CLUSTER_NAME}-schema
    SCHEMA_REGISTRY_NAMESPACE=${CLUSTER_NAME}-schema-ns

    echo
    echo ""==============================================================="
    echo "Setting up the environment with the following parameters:"
    echo "  Location           = ${LOCATION}"
    echo "  Resource Group     = ${RESOURCE_GROUP}"
    echo "  Cluster Name       = ${CLUSTER_NAME}"
    echo "  Custom Location ID = ${CUSTOM_LOCATION_ID}"
    echo "==============================================================="
    echo
    
    echo "========================================="
    echo "=== Cloning repository ==="
    echo "========================================="
    git clone https://github.com/azure/iot-operations-sdks
    
    echo "========================================="
    echo "=== Installing dependencies and creating cluster ==="
    echo "========================================="
    ./iot-operations-sdks/tools/deployment/initialize-cluster.sh
    
    echo "========================================="
    echo "=== Logging in to Azure ==="
    echo "========================================="
    az login --identity

    # echo "========================================="
    # echo "=== Registering Azure providers ==="
    # echo "========================================="
    # Issue #1: Cant register providers with system identity
    # az provider register -n "Microsoft.ExtendedLocation"
    # az provider register -n "Microsoft.Kubernetes"
    # az provider register -n "Microsoft.KubernetesConfiguration"
    # az provider register -n "Microsoft.IoTOperations"
    # az provider register -n "Microsoft.DeviceRegistry"
    # az provider register -n "Microsoft.SecretSyncController"

    echo "========================================="
    echo "=== Arc connecting the cluster ==="
    echo "========================================="
    az connectedk8s connect --name $CLUSTER_NAME --location $LOCATION -g $RESOURCE_GROUP --kube-config .kube/config

    echo "========================================="
    echo "=== Enabling custom locations ==="
    echo "========================================="
    az connectedk8s enable-features -n $CLUSTER_NAME -g $RESOURCE_GROUP --custom-locations-oid $CUSTOM_LOCATION_ID --kube-config .kube/config --features cluster-connect custom-locations
    
    echo "========================================="
    echo "=== Creating Schema Registry resource ==="
    echo "========================================="
    az storage account create --name $STORAGE_ACCOUNT --location $LOCATION -g $RESOURCE_GROUP --enable-hierarchical-namespace
    az iot ops schema registry create --name $SCHEMA_REGISTRY -g $RESOURCE_GROUP --registry-namespace $SCHEMA_REGISTRY_NAMESPACE --sa-resource-id $(az storage account show --name $STORAGE_ACCOUNT -o tsv --query id)

    # echo "========================================="
    # echo "=== Installing IoT Operations ==="
    # echo "========================================="
    # az iot ops init --cluster $CLUSTER_NAME -g $RESOURCE_GROUP
    # az iot ops create --cluster $CLUSTER_NAME -g $RESOURCE_GROUP --name ${CLUSTER_NAME}-instance --sr-resource-id $(az iot ops schema registry show --name $SCHEMA_REGISTRY -g $RESOURCE_GROUP -o tsv --query id) --broker-frontend-replicas 1 --broker-frontend-workers 1  --broker-backend-part 1  --broker-backend-workers 1 --broker-backend-rf 2 --broker-mem-profile Low
  - |
    install -D -o $MYUSER -g $MYUSER -m 600 $MYWORK/.kube/config $MYHOME/.kube/config
    chown -R $MYUSER:$MYUSER $MYWORK
