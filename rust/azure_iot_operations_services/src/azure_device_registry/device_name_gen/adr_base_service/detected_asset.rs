/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT. */
#![allow(unused_imports)]

use std::collections::HashMap;

use chrono::{DateTime, Utc};
use derive_builder::Builder;
use iso8601_duration::Duration;
use serde::{Deserialize, Serialize};
use uuid::Uuid;

use super::detected_asset_dataset_schema_element_schema::DetectedAssetDatasetSchemaElementSchema;
use super::topic::Topic;
use super::detected_asset_event_schema_element_schema::DetectedAssetEventSchemaElementSchema;
use super::super::common_types::{b64::Bytes, date_only::Date, decimal::Decimal, time_only::Time};

#[derive(Serialize, Deserialize, Debug, Clone, Builder)]
pub struct DetectedAsset {
    /// A reference to the asset endpoint profile.
    #[serde(rename = "assetEndpointProfileRef")]
    pub asset_endpoint_profile_ref: String,

    /// Name of the asset if available.
    #[serde(rename = "assetName")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub asset_name: Option<String>,

    /// Array of datasets that are part of the asset. Each dataset spec describes the datapoints that make up the set.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub datasets: Option<Vec<DetectedAssetDatasetSchemaElementSchema>>,

    /// The 'defaultDatasetsConfiguration' Field.
    #[serde(rename = "defaultDatasetsConfiguration")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub default_datasets_configuration: Option<String>,

    /// The 'defaultEventsConfiguration' Field.
    #[serde(rename = "defaultEventsConfiguration")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub default_events_configuration: Option<String>,

    /// The 'defaultTopic' Field.
    #[serde(rename = "defaultTopic")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub default_topic: Option<Topic>,

    /// URI to the documentation of the asset.
    #[serde(rename = "documentationUri")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub documentation_uri: Option<String>,

    /// Array of events that are part of the asset. Each event can reference an asset type capability and have per-event configuration.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub events: Option<Vec<DetectedAssetEventSchemaElementSchema>>,

    /// The 'hardwareRevision' Field.
    #[serde(rename = "hardwareRevision")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub hardware_revision: Option<String>,

    /// Asset manufacturer name.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub manufacturer: Option<String>,

    /// URI to the manufacturer of the asset.
    #[serde(rename = "manufacturerUri")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub manufacturer_uri: Option<String>,

    /// Asset model name.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub model: Option<String>,

    /// Asset product code.
    #[serde(rename = "productCode")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub product_code: Option<String>,

    /// Asset serial number.
    #[serde(rename = "serialNumber")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub serial_number: Option<String>,

    /// Revision number of the software.
    #[serde(rename = "softwareRevision")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub software_revision: Option<String>,
}
