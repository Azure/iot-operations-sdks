/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT. */
#![allow(unused_imports)]

use std::collections::HashMap;

use chrono::{DateTime, Utc};
use derive_builder::Builder;
use iso8601_duration::Duration;
use serde::{Deserialize, Serialize};
use uuid::Uuid;

use super::supported_authentication_methods_schema_element_schema::SupportedAuthenticationMethodsSchemaElementSchema;
use super::super::common_types::{b64::Bytes, date_only::Date, decimal::Decimal, time_only::Time};

#[derive(Serialize, Deserialize, Debug, Clone, Builder)]
pub struct DiscoveredAssetEndpointProfile {
    /// A unique identifier for a discovered asset.
    #[serde(rename = "additionalConfiguration")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub additional_configuration: Option<String>,

    /// Name of the discovered asset endpoint profile. If not provided it will get generated by Akri.
    #[serde(rename = "daepName")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub daep_name: Option<String>,

    /// Defines the configuration for the connector type that is being used with the endpoint profile.
    #[serde(rename = "endpointProfileType")]
    pub endpoint_profile_type: String,

    /// list of supported authentication methods
    #[serde(rename = "supportedAuthenticationMethods")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub supported_authentication_methods: Option<Vec<SupportedAuthenticationMethodsSchemaElementSchema>>,

    /// local valid URI specifying the network address/dns name of southbound service.
    #[serde(rename = "targetAddress")]
    pub target_address: String,
}
