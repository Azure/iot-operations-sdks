/* Code generated by Azure.Iot.Operations.ProtocolCompilerLib v0.10.0.0; DO NOT EDIT. */
#![allow(unused_imports)]

use std::collections::HashMap;

use chrono::{DateTime, Utc};
use derive_builder::Builder;
use iso8601_duration::Duration;
use serde::{Deserialize, Serialize};
use uuid::Uuid;

use super::super::common_types::{b64::Bytes, date_only::Date, decimal::Decimal, time_only::Time};
use super::discovered_asset_management_group_action::DiscoveredAssetManagementGroupAction;

#[derive(Serialize, Deserialize, Debug, Clone, Builder)]
pub struct DiscoveredAssetManagementGroup {
    /// Array of actions that are part of the management group. Each action can have an individual configuration.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub actions: Option<Vec<DiscoveredAssetManagementGroupAction>>,

    /// Reference to a data source for a given management group.
    #[serde(rename = "dataSource")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub data_source: Option<String>,

    /// Default response timeout for all actions that are part of the management group.
    #[serde(rename = "defaultTimeoutInSeconds")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub default_timeout_in_seconds: Option<u64>,

    /// Default MQTT topic path on which a client will receive the request for all actions that are part of the management group.
    #[serde(rename = "defaultTopic")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub default_topic: Option<String>,

    /// Timestamp (in UTC) indicating when the management group was added or modified.
    #[serde(rename = "lastUpdatedOn")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub last_updated_on: Option<DateTime<Utc>>,

    /// Stringified JSON that contains connector-specific configuration for the management group.
    #[serde(rename = "managementGroupConfiguration")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub management_group_configuration: Option<String>,

    /// Name of the management group.
    pub name: String,

    /// URI or type definition ID.
    #[serde(rename = "typeRef")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub type_ref: Option<String>,
}
