/* Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT. */
#![allow(unused_imports)]

use std::collections::HashMap;

use chrono::{DateTime, Utc};
use derive_builder::Builder;
use iso8601_duration::Duration;
use serde::{Deserialize, Serialize};
use uuid::Uuid;

use super::super::common_types::{b64::Bytes, date_only::Date, decimal::Decimal, time_only::Time};
use super::asset_dataset_data_point_schema_element_schema::AssetDatasetDataPointSchemaElementSchema;
use super::dataset_destination::DatasetDestination;

#[derive(Serialize, Deserialize, Debug, Clone, Builder)]
pub struct AssetDatasetSchemaElementSchema {
    /// The 'dataPoints' Field.
    #[serde(rename = "dataPoints")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub data_points: Option<Vec<AssetDatasetDataPointSchemaElementSchema>>,

    /// Stringified JSON that contains connector-specific JSON string that describes configuration for the specific dataset.
    #[serde(rename = "datasetConfiguration")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub dataset_configuration: Option<String>,

    /// The address of the source of the data in the dataset (e.g. URL) so that a client can access the data source on the asset.
    #[serde(rename = "dataSource")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub data_source: Option<String>,

    /// Destinations for a Dataset.
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub destinations: Option<Vec<DatasetDestination>>,

    /// Name of the dataset.
    pub name: String,

    /// URI or type definition id in companion spec.
    #[serde(rename = "typeRef")]
    #[serde(skip_serializing_if = "Option::is_none")]
    #[builder(default = "None")]
    pub type_ref: Option<String>,
}
