// Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT.
package adrbaseservice

import (
	"context"

	"github.com/Azure/iot-operations-sdks/go/protocol"
)

type AdrBaseServiceTelemetryHandlers interface {

	AssetEndpointProfileUpdateEvent(
		context.Context,
		*protocol.TelemetryMessage[AssetEndpointProfileUpdateEventTelemetry],
	) error

	AssetUpdateEvent(
		context.Context,
		*protocol.TelemetryMessage[AssetUpdateEventTelemetry],
	) error
}

type AdrBaseServiceClient struct {
	protocol.Listeners
	*GetAssetEndpointProfileCommandInvoker
	*GetAssetCommandInvoker
	*UpdateAssetEndpointProfileStatusCommandInvoker
	*UpdateAssetStatusCommandInvoker
	*NotifyOnAssetEndpointProfileUpdateCommandInvoker
	*NotifyOnAssetUpdateCommandInvoker
	*CreateDetectedAssetCommandInvoker
	*AssetEndpointProfileUpdateEventTelemetryReceiver
	*AssetUpdateEventTelemetryReceiver
}

const (
	CommandTopic = "akri/connector/resources/{ex:connectorClientId}/{ex:aepName}/{commandName}"
	TelemetryTopic = "akri/connector/resources/telemetry/{ex:connectorClientId}/{ex:aepName}/{telemetryName}"
)

func NewAdrBaseServiceClient(
	app *protocol.Application,
	client protocol.MqttClient,
	telemetryHandlers AdrBaseServiceTelemetryHandlers,
	opts ...protocol.Option,
) (*AdrBaseServiceClient, error) {
	var err error

	clientOpts := []protocol.Option{
		protocol.WithTopicTokenNamespace("ex:"),
		protocol.WithTopicTokens{
			"invokerClientId": client.ID(),
		},
	}

	var invokerOpts protocol.CommandInvokerOptions
	invokerOpts.ApplyOptions(opts, clientOpts...)

	var receiverOpts protocol.TelemetryReceiverOptions
	receiverOpts.ApplyOptions(opts, clientOpts...)

	adrBaseServiceClient := &AdrBaseServiceClient{}

	adrBaseServiceClient.GetAssetEndpointProfileCommandInvoker, err = NewGetAssetEndpointProfileCommandInvoker(
		app,
		client,
		CommandTopic,
		&invokerOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.GetAssetEndpointProfileCommandInvoker)

	adrBaseServiceClient.GetAssetCommandInvoker, err = NewGetAssetCommandInvoker(
		app,
		client,
		CommandTopic,
		&invokerOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.GetAssetCommandInvoker)

	adrBaseServiceClient.UpdateAssetEndpointProfileStatusCommandInvoker, err = NewUpdateAssetEndpointProfileStatusCommandInvoker(
		app,
		client,
		CommandTopic,
		&invokerOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.UpdateAssetEndpointProfileStatusCommandInvoker)

	adrBaseServiceClient.UpdateAssetStatusCommandInvoker, err = NewUpdateAssetStatusCommandInvoker(
		app,
		client,
		CommandTopic,
		&invokerOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.UpdateAssetStatusCommandInvoker)

	adrBaseServiceClient.NotifyOnAssetEndpointProfileUpdateCommandInvoker, err = NewNotifyOnAssetEndpointProfileUpdateCommandInvoker(
		app,
		client,
		CommandTopic,
		&invokerOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.NotifyOnAssetEndpointProfileUpdateCommandInvoker)

	adrBaseServiceClient.NotifyOnAssetUpdateCommandInvoker, err = NewNotifyOnAssetUpdateCommandInvoker(
		app,
		client,
		CommandTopic,
		&invokerOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.NotifyOnAssetUpdateCommandInvoker)

	adrBaseServiceClient.CreateDetectedAssetCommandInvoker, err = NewCreateDetectedAssetCommandInvoker(
		app,
		client,
		CommandTopic,
		&invokerOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.CreateDetectedAssetCommandInvoker)

	adrBaseServiceClient.AssetEndpointProfileUpdateEventTelemetryReceiver, err = NewAssetEndpointProfileUpdateEventTelemetryReceiver(
		app,
		client,
		TelemetryTopic,
		telemetryHandlers.AssetEndpointProfileUpdateEvent,
		&receiverOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.AssetEndpointProfileUpdateEventTelemetryReceiver)

	adrBaseServiceClient.AssetUpdateEventTelemetryReceiver, err = NewAssetUpdateEventTelemetryReceiver(
		app,
		client,
		TelemetryTopic,
		telemetryHandlers.AssetUpdateEvent,
		&receiverOpts,
	)
	if err != nil {
		adrBaseServiceClient.Close()
		return nil, err
	}
	adrBaseServiceClient.Listeners = append(adrBaseServiceClient.Listeners, adrBaseServiceClient.AssetUpdateEventTelemetryReceiver)

	return adrBaseServiceClient, nil
}
