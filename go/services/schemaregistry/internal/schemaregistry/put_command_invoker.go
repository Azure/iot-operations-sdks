// Code generated by Azure.Iot.Operations.ProtocolCompiler v0.10.0.0; DO NOT EDIT.
package schemaregistry

import (
	"context"

	"github.com/Azure/iot-operations-sdks/go/protocol"
	"github.com/Azure/iot-operations-sdks/go/protocol/errors"
)

type PutCommandInvoker struct {
	*protocol.CommandInvoker[PutRequestSchema, PutResponseSchema]
}

func NewPutCommandInvoker(
	app *protocol.Application,
	client protocol.MqttClient,
	requestTopic string,
	opt ...protocol.CommandInvokerOption,
) (*PutCommandInvoker, error) {
	var err error
	invoker := &PutCommandInvoker{}

	var opts protocol.CommandInvokerOptions
	opts.Apply(
		opt,
		protocol.WithTopicTokens{
			"commandName": "put",
		},
	)

	invoker.CommandInvoker, err = protocol.NewCommandInvoker(
		app,
		client,
		protocol.JSON[PutRequestSchema]{},
		protocol.JSON[PutResponseSchema]{},
		requestTopic,
		&opts,
	)

	return invoker, err
}

func (invoker PutCommandInvoker) Put(
	ctx context.Context,
	request PutRequestSchema,
	opt ...protocol.InvokeOption,
) (*protocol.CommandResponse[PutResponsePayload], error) {
	invokerOpts := []protocol.InvokeOption{
		protocol.WithTopicTokenNamespace("ex:"),
	}

	var invokeOpts protocol.InvokeOptions
	invokeOpts.Apply(opt, invokerOpts...)

	response, err := invoker.Invoke(
		ctx,
		request,
		&invokeOpts,
	)

	if err != nil {
		return nil, err
	}

	if response.Payload.Error != nil {
		return nil, response.Payload.Error
	}

	if response.Payload.Schema == nil {
		return nil, &errors.Client{
			Message: "Command response has neither normal nor error payload content",
			Kind:    errors.PayloadInvalid{},
			Shallow: false,
		}
	}

	mappedResponse := protocol.CommandResponse[PutResponsePayload]{
		protocol.Message[PutResponsePayload]{
			Payload: PutResponsePayload{
				Schema: *response.Payload.Schema,
			},
			ClientID:        response.ClientID,
			CorrelationData: response.CorrelationData,
			Timestamp:       response.Timestamp,
			TopicTokens:     response.TopicTokens,
			Metadata:        response.Metadata,
		},
	}

	return &mappedResponse, nil
}
